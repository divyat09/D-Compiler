Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ARROW
    SCOPE
    CARET
    LESS_EQ
    SIZEOF
    MINUS_MINUS
    GREATER_EQ_DIFF
    SINGLE_QUOTE
    BACK_SLASH

Grammar

Rule 0     S' -> addExpression
Rule 1     addExpression -> mulExpression
Rule 2     addExpression -> addExpression PLUS mulExpression
Rule 3     addExpression -> addExpression MINUS mulExpression
Rule 4     addExpression -> addExpression TILDE mulExpression
Rule 5     aliasDeclaration -> ALIAS aliasInitializer comma_aliasInitializer SEMICOLON
Rule 6     aliasDeclaration -> ALIAS multiplestorageClass type identifierList SEMICOLON
Rule 7     comma_aliasInitializer -> COMMA aliasInitializer comma_aliasInitializer
Rule 8     comma_aliasInitializer -> empty
Rule 9     multiplestorageClass -> storageClass multiplestorageClass
Rule 10    multiplestorageClass -> empty
Rule 11    aliasInitializer -> IDENTIFIER ASSIGN multiplestorageClass type
Rule 12    aliasInitializer -> IDENTIFIER ASSIGN functionLiteralExpression SEMICOLON
Rule 13    aliasThisDeclaration -> ALIAS IDENTIFIER THIS SEMICOLON
Rule 14    andAndExpression -> orExpression
Rule 15    andAndExpression -> andAndExpression DOUBLE_AMPERSAND orExpression
Rule 16    andExpression -> cmpExpression
Rule 17    andExpression -> andExpression AMPERSAND cmpExpression
Rule 18    argumentList -> assignExpression
Rule 19    argumentList -> argumentList comma_assign
Rule 20    comma_assign -> COMMA assignExpression comma_assign
Rule 21    comma_assign -> empty
Rule 22    arguments -> LPAREN RPAREN
Rule 23    arguments -> LPAREN argumentList RPAREN
Rule 24    arrayInitializer -> LBRACKET RBRACKET
Rule 25    arrayInitializer -> LBRACKET arrayMemberInitialization comma_arrayMemberInitialization RBRACKET
Rule 26    comma_arrayMemberInitialization -> COMMA arrayMemberInitialization comma_arrayMemberInitialization
Rule 27    comma_arrayMemberInitialization -> empty
Rule 28    array_Literal -> LBRACKET RBRACKET
Rule 29    array_Literal -> LBRACKET argumentList RBRACKET
Rule 30    arrayMemberInitialization -> assignExpression COLON nonVoidInitializer
Rule 31    arrayMemberInitialization -> nonVoidInitializer
Rule 32    assignExpression -> ternaryExpression
Rule 33    assignExpression -> ternaryExpression assignOperator expression
Rule 34    assignOperator -> ASSIGN
Rule 35    assignOperator -> EQ_LEFT
Rule 36    assignOperator -> EQ_RIGHT
Rule 37    assignOperator -> EQ_PLUS
Rule 38    assignOperator -> EQ_MINUS
Rule 39    assignOperator -> EQ_TIMES
Rule 40    assignOperator -> EQ_MODULO
Rule 41    assignOperator -> EQ_AND_BIT
Rule 42    assignOperator -> EQ_DIV
Rule 43    assignOperator -> EQ_OR_BIT
Rule 44    assignOperator -> EQ_XOR_BIT
Rule 45    attribute -> PRIVATE
Rule 46    attribute -> PROTECTED
Rule 47    attribute -> PUBLIC
Rule 48    attribute -> STATIC
Rule 49    attribute -> EXTERN
Rule 50    attribute -> FINAL
Rule 51    attribute -> AUTO
Rule 52    attribute -> CONST
Rule 53    attribute -> IMMUTABLE
Rule 54    attributeDeclaration -> attribute COLON
Rule 55    autoDeclaration -> storageClass multiplestorageClass IDENTIFIER ASSIGN initializer comma_identifier_assign_initializer SEMICOLON
Rule 56    comma_identifier_assign_initializer -> COMMA IDENTIFIER ASSIGN initializer comma_identifier_assign_initializer
Rule 57    comma_identifier_assign_initializer -> empty
Rule 58    blockStatement -> LBRACE RBRACE
Rule 59    blockStatement -> LBRACE declarationsAndStatements RBRACE
Rule 60    bodyStatement -> BODY blockStatement
Rule 61    breakStatement -> BREAK SEMICOLON
Rule 62    breakStatement -> BREAK IDENTIFIER SEMICOLON
Rule 63    baseClass -> type2
Rule 64    baseClassList -> baseClass
Rule 65    baseClassList -> baseClassList COMMA baseClass
Rule 66    builtinType -> BOOL
Rule 67    builtinType -> SHORT
Rule 68    builtinType -> USHORT
Rule 69    builtinType -> INT
Rule 70    builtinType -> UINT
Rule 71    builtinType -> LONG
Rule 72    builtinType -> ULONG
Rule 73    builtinType -> CHAR
Rule 74    builtinType -> FLOAT
Rule 75    builtinType -> DOUBLE
Rule 76    caseRangeStatement -> CASE assignExpression COLON ELLIPSIS CASE assignExpression COLON declarationsAndStatements
Rule 77    caseStatement -> CASE argumentList COLON declarationsAndStatements
Rule 78    castExpression -> CAST LPAREN RPAREN unaryExpression
Rule 79    castExpression -> CAST LPAREN type RPAREN unaryExpression
Rule 80    castExpression -> CAST LPAREN castQualifier RPAREN unaryExpression
Rule 81    castQualifier -> CONST
Rule 82    castQualifier -> IMMUTABLE
Rule 83    classDeclaration -> CLASS IDENTIFIER SEMICOLON
Rule 84    classDeclaration -> CLASS IDENTIFIER COLON baseClassList structBody
Rule 85    classDeclaration -> CLASS IDENTIFIER structBody
Rule 86    cmpExpression -> shiftExpression
Rule 87    cmpExpression -> equalExpression
Rule 88    cmpExpression -> identityExpression
Rule 89    cmpExpression -> relExpression
Rule 90    constraint -> IF LPAREN expression RPAREN
Rule 91    constructor -> THIS parameters multiple_memberFunctionAttribute functionBody
Rule 92    constructor -> THIS parameters multiple_memberFunctionAttribute SEMICOLON
Rule 93    constructor -> THIS templateParameters parameters multiple_memberFunctionAttribute functionBody
Rule 94    constructor -> THIS templateParameters parameters multiple_memberFunctionAttribute SEMICOLON
Rule 95    constructor -> THIS parameters multiple_memberFunctionAttribute constraint functionBody
Rule 96    constructor -> THIS parameters multiple_memberFunctionAttribute constraint SEMICOLON
Rule 97    constructor -> THIS templateParameters parameters multiple_memberFunctionAttribute constraint functionBody
Rule 98    constructor -> THIS templateParameters parameters multiple_memberFunctionAttribute constraint SEMICOLON
Rule 99    multiple_memberFunctionAttribute -> memberFunctionAttribute multiple_memberFunctionAttribute
Rule 100   multiple_memberFunctionAttribute -> empty
Rule 101   continueStatement -> CONTINUE SEMICOLON
Rule 102   continueStatement -> CONTINUE IDENTIFIER SEMICOLON
Rule 103   declaration -> multipleattributes declaration2
Rule 104   declaration -> attribute multipleattributes LBRACE multiple_declaration RBRACE
Rule 105   multiple_declaration -> declaration multiple_declaration
Rule 106   multiple_declaration -> empty
Rule 107   multipleattributes -> attribute multipleattributes
Rule 108   multipleattributes -> empty
Rule 109   declaration2 -> aliasDeclaration
Rule 110   declaration2 -> aliasThisDeclaration
Rule 111   declaration2 -> anonymousEnumDeclaration
Rule 112   declaration2 -> attributeDeclaration
Rule 113   declaration2 -> classDeclaration
Rule 114   declaration2 -> conditionalDeclaration
Rule 115   declaration2 -> constructor
Rule 116   declaration2 -> destructor
Rule 117   declaration2 -> enumDeclaration
Rule 118   declaration2 -> functionDeclaration
Rule 119   declaration2 -> importDeclaration
Rule 120   declaration2 -> mixinDeclaration
Rule 121   declaration2 -> unionDeclaration
Rule 122   declaration2 -> variableDeclaration
Rule 123   declarationsAndStatements -> declarationOrStatement
Rule 124   declarationsAndStatements -> declarationOrStatement declarationsAndStatements
Rule 125   declarationOrStatement -> declaration
Rule 126   declarationOrStatement -> statement
Rule 127   declarator -> IDENTIFIER
Rule 128   declarator -> IDENTIFIER ASSIGN initializer
Rule 129   declarator -> IDENTIFIER templateParameters ASSIGN initializer
Rule 130   defaultStatement -> DEFAULT COLON declarationsAndStatements
Rule 131   deleteExpression -> DELETE unaryExpression
Rule 132   destructor -> TILDE THIS LPAREN RPAREN multiple_memberFunctionAttribute functionBody
Rule 133   destructor -> TILDE THIS LPAREN RPAREN multiple_memberFunctionAttribute SEMICOLON
Rule 134   doStatement -> DO statementNoCaseNoDefault WHILE LPAREN expression RPAREN SEMICOLON
Rule 135   enumBody -> DOUBLE_QUOTE enumMember DOUBLE_QUOTE
Rule 136   enumBody -> DOUBLE_QUOTE enumMember comma_enumMember DOUBLE_QUOTE
Rule 137   comma_enumMember -> COMMA enumMember comma_enumMember
Rule 138   comma_enumMember -> empty
Rule 139   anonymousEnumMember -> TYPEDEF IDENTIFIER ASSIGN assignExpression
Rule 140   anonymousEnumMember -> IDENTIFIER ASSIGN assignExpression
Rule 141   anonymousEnumMember -> IDENTIFIER
Rule 142   anonymousEnumDeclaration -> ENUM LBRACE anonymousEnumMember multipleanonymousEnumMember RBRACE
Rule 143   anonymousEnumDeclaration -> ENUM COLON type LBRACE anonymousEnumMember multipleanonymousEnumMember RBRACE
Rule 144   multipleanonymousEnumMember -> anonymousEnumMember multipleanonymousEnumMember
Rule 145   multipleanonymousEnumMember -> empty
Rule 146   enumDeclaration -> ENUM IDENTIFIER SEMICOLON
Rule 147   enumDeclaration -> ENUM IDENTIFIER COLON TYPEDEF SEMICOLON
Rule 148   enumDeclaration -> ENUM IDENTIFIER COLON TYPEDEF enumBody
Rule 149   enumMember -> IDENTIFIER
Rule 150   enumMember -> IDENTIFIER ASSIGN assignExpression
Rule 151   equalExpression -> shiftExpression IS_EQ shiftExpression
Rule 152   equalExpression -> shiftExpression NOT_EQ shiftExpression
Rule 153   shiftExpression -> addExpression
Rule 154   shiftExpression -> shiftExpression LEFT_SHIFT addExpression
Rule 155   shiftExpression -> shiftExpression RIGHT_SHIFT addExpression
Rule 156   expression -> assignExpression
Rule 157   expression -> expression COMMA assignExpression
Rule 158   expressionStatement -> expression SEMICOLON
Rule 159   forStatement -> FOR LPAREN declaration SEMICOLON RPAREN declarationOrStatement
Rule 160   forStatement -> FOR LPAREN statementNoCaseNoDefault SEMICOLON RPAREN declarationOrStatement
Rule 161   forStatement -> FOR LPAREN declaration SEMICOLON expression RPAREN declarationOrStatement
Rule 162   forStatement -> FOR LPAREN statementNoCaseNoDefault SEMICOLON expression RPAREN declarationOrStatement
Rule 163   forStatement -> FOR LPAREN declaration expression SEMICOLON RPAREN declarationOrStatement
Rule 164   forStatement -> FOR LPAREN statementNoCaseNoDefault expression SEMICOLON RPAREN declarationOrStatement
Rule 165   forStatement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN declarationOrStatement
Rule 166   forStatement -> FOR LPAREN statementNoCaseNoDefault expression SEMICOLON expression RPAREN declarationOrStatement
Rule 167   foreachStatement -> FOREACH LPAREN foreachTypeList SEMICOLON expression RPAREN declarationOrStatement
Rule 168   foreachStatement -> FOREACH LPAREN foreachType SEMICOLON expression RANGE expression RBRACKET declarationOrStatement
Rule 169   foreachStatement -> FOREACH_REVERSE LPAREN foreachTypeList SEMICOLON expression RPAREN declarationOrStatement
Rule 170   foreachStatement -> FOREACH_REVERSE LPAREN foreachType SEMICOLON expression RANGE expression RPAREN declarationOrStatement
Rule 171   foreachType -> IDENTIFIER
Rule 172   foreachType -> type IDENTIFIER
Rule 173   foreachType -> typeConstructors IDENTIFIER
Rule 174   foreachType -> typeConstructors type IDENTIFIER
Rule 175   foreachTypeList -> foreachType
Rule 176   foreachTypeList -> foreachTypeList COMMA foreachType
Rule 177   functionBody -> blockStatement
Rule 178   functionCallExpression -> symbol arguments unaryExpression arguments
Rule 179   functionCallExpression -> type arguments
Rule 180   functionDeclaration -> storageClass multiplestorageClass IDENTIFIER parameters multiple_memberFunctionAttribute SEMICOLON
Rule 181   functionDeclaration -> storageClass multiplestorageClass IDENTIFIER parameters multiple_memberFunctionAttribute functionBody
Rule 182   functionDeclaration -> TYPEDEF IDENTIFIER parameters multiple_memberFunctionAttribute SEMICOLON
Rule 183   functionDeclaration -> TYPEDEF IDENTIFIER parameters multiple_memberFunctionAttribute functionBody
Rule 184   functionDeclaration -> storageClass multiplestorageClass IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute constraint SEMICOLON
Rule 185   functionDeclaration -> storageClass multiplestorageClass IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute SEMICOLON
Rule 186   functionDeclaration -> storageClass multiplestorageClass IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute constraint functionBody
Rule 187   functionDeclaration -> storageClass multiplestorageClass IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute functionBody
Rule 188   functionDeclaration -> TYPEDEF IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute constraint SEMICOLON
Rule 189   functionDeclaration -> TYPEDEF IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute SEMICOLON
Rule 190   functionDeclaration -> TYPEDEF IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute constraint functionBody
Rule 191   functionDeclaration -> TYPEDEF IDENTIFIER templateParameters parameters multiple_memberFunctionAttribute functionBody
Rule 192   functionLiteralExpression -> FUNCTION parameters multiple_functionAttribute functionBody
Rule 193   functionLiteralExpression -> FUNCTION functionBody
Rule 194   functionLiteralExpression -> FUNCTION TYPEDEF functionBody
Rule 195   functionLiteralExpression -> FUNCTION TYPEDEF parameters multiple_functionAttribute functionBody
Rule 196   functionLiteralExpression -> parameters multiple_functionAttribute functionBody
Rule 197   functionLiteralExpression -> functionBody
Rule 198   functionLiteralExpression -> IDENTIFIER assignExpression
Rule 199   functionLiteralExpression -> FUNCTION parameters multiple_functionAttribute assignExpression
Rule 200   functionLiteralExpression -> FUNCTION TYPEDEF parameters multiple_functionAttribute assignExpression
Rule 201   multiple_functionAttribute -> functionAttribute multiple_functionAttribute
Rule 202   gotoStatement -> GOTO IDENTIFIER SEMICOLON
Rule 203   gotoStatement -> GOTO DEFAULT SEMICOLON
Rule 204   gotoStatement -> GOTO CASE SEMICOLON
Rule 205   gotoStatement -> GOTO CASE expression SEMICOLON
Rule 206   identifierChain -> IDENTIFIER
Rule 207   identifierChain -> identifierChain DOT IDENTIFIER
Rule 208   identifierList -> IDENTIFIER
Rule 209   identifierList -> identifierList COMMA IDENTIFIER
Rule 210   identifierList -> identifierOrTemplateInstance
Rule 211   identifierList -> identifierOrTemplateChain DOT identifierOrTemplateInstance
Rule 212   identifierOrTemplateInstance -> IDENTIFIER
Rule 213   identifierOrTemplateInstance -> templateInstance
Rule 214   identityExpression -> shiftExpression IS shiftExpression
Rule 215   identityExpression -> shiftExpression EXCLAMATION IS shiftExpression
Rule 216   ifStatement -> IF LPAREN ifCondition RPAREN declarationOrStatement
Rule 217   ifStatement -> IF LPAREN ifCondition RPAREN declarationOrStatement ELSE declarationOrStatement
Rule 218   ifCondition -> AUTO IDENTIFIER ASSIGN expression
Rule 219   ifCondition -> TYPEDEF IDENTIFIER ASSIGN expression
Rule 220   ifCondition -> expression
Rule 221   importBind -> IDENTIFIER
Rule 222   importBind -> IDENTIFIER ASSIGN IDENTIFIER
Rule 223   importBindings -> singleImport COLON importBind
Rule 224   importBindings -> singleImport COLON importBind COLON importBind
Rule 225   importDeclaration -> IMPORT singleImport comma_singleImport COMMA importBindings SEMICOLON
Rule 226   importDeclaration -> IMPORT singleImport comma_singleImport SEMICOLON
Rule 227   importDeclaration -> IMPORT importBindings SEMICOLON
Rule 228   comma_singleImport -> COMMA singleImport comma_singleImport
Rule 229   comma_singleImport -> empty
Rule 230   index -> assignExpression
Rule 231   index -> assignExpression RANGE assignExpression
Rule 232   indexExpression -> unaryExpression LBRACKET RBRACKET
Rule 233   indexExpression -> unaryExpression LBRACKET index comma_index RBRACKET
Rule 234   comma_index -> COMMA index comma_index
Rule 235   comma_index -> empty
Rule 236   initializer -> VOID
Rule 237   initializer -> nonVoidInitializer
Rule 238   isExpression -> IS LPAREN type RPAREN
Rule 239   isExpression -> IS LPAREN type identifier RPAREN
Rule 240   isExpression -> IS LPAREN type COLON typeSpecialization RPAREN
Rule 241   isExpression -> IS LPAREN type identifier COLON typeSpecialization RPAREN
Rule 242   isExpression -> IS LPAREN type ASSIGN typeSpecialization RPAREN
Rule 243   isExpression -> IS LPAREN type identifier ASSIGN typeSpecialization RPAREN
Rule 244   labeledStatement -> IDENTIFIER COLON
Rule 245   labeledStatement -> IDENTIFIER COLON declarationOrStatement
Rule 246   memberFunctionAttribute -> functionAttribute
Rule 247   memberFunctionAttribute -> IMMUTABLE
Rule 248   memberFunctionAttribute -> CONST
Rule 249   memberFunctionAttribute -> RETURN
Rule 250   mixinDeclaration -> mixinExpression SEMICOLON
Rule 251   mixinDeclaration -> templateMixinExpression SEMICOLON
Rule 252   mixinExpression -> MIXIN LPAREN assignExpression RPAREN
Rule 253   mulExpression -> powExpression
Rule 254   mulExpression -> mulExpression TIMES
Rule 255   mulExpression -> mulExpression DIV
Rule 256   mulExpression -> mulExpression MODULO
Rule 257   newAnonClassExpression -> NEW CLASS arguments baseClassList structBody
Rule 258   newAnonClassExpression -> NEW CLASS arguments structBody
Rule 259   newAnonClassExpression -> NEW CLASS baseClassList structBody
Rule 260   newAnonClassExpression -> NEW CLASS structBody
Rule 261   newAnonClassExpression -> NEW arguments CLASS structBody
Rule 262   newAnonClassExpression -> NEW arguments CLASS arguments structBody
Rule 263   newAnonClassExpression -> NEW arguments CLASS baseClassList structBody
Rule 264   newAnonClassExpression -> NEW arguments CLASS arguments baseClassList structBody
Rule 265   newExpression -> NEW type
Rule 266   newExpression -> NEW type LBRACKET assignExpression RBRACKET
Rule 267   newExpression -> NEW type arguments
Rule 268   newExpression -> newAnonClassExpression
Rule 269   nonVoidInitializer -> assignExpression
Rule 270   nonVoidInitializer -> arrayInitializer
Rule 271   nonVoidInitializer -> structInitializer
Rule 272   orExpression -> xorExpression
Rule 273   orExpression -> orExpression PIPE xorExpression
Rule 274   orOrExpression -> andAndExpression
Rule 275   orOrExpression -> orOrExpression DOUBLE_PIPE andAndExpression
Rule 276   parameterAttributeStar -> parameterAttribute parameterAttributeStar
Rule 277   parameterAttributeStar -> empty
Rule 278   parameter -> parameterAttributeStar type parameterAttributeStar type IDENTIFIER ELLIPSIS parameterAttributeStar type IDENTIFIER ASSIGN assignExpression
Rule 279   parameter -> parameterAttributeStar type parameterAttributeStar type IDENTIFIER ELLIPSIS parameterAttributeStar type IDENTIFIER
Rule 280   parameter -> parameterAttributeStar type parameterAttributeStar type IDENTIFIER ELLIPSIS parameterAttributeStar type ASSIGN assignExpression
Rule 281   parameter -> parameterAttributeStar type parameterAttributeStar type IDENTIFIER ELLIPSIS parameterAttributeStar type
Rule 282   parameter -> parameterAttributeStar type parameterAttributeStar type ELLIPSIS parameterAttributeStar type IDENTIFIER ASSIGN assignExpression
Rule 283   parameter -> parameterAttributeStar type parameterAttributeStar type ELLIPSIS parameterAttributeStar type IDENTIFIER
Rule 284   parameter -> parameterAttributeStar type parameterAttributeStar type ELLIPSIS parameterAttributeStar type ASSIGN assignExpression
Rule 285   parameter -> parameterAttributeStar type parameterAttributeStar type ELLIPSIS parameterAttributeStar type
Rule 286   parameterAttribute -> typeConstructor
Rule 287   parameterAttribute -> FINAL
Rule 288   parameterAttribute -> OUT
Rule 289   parameterAttribute -> AUTO
Rule 290   parameterAttribute -> RETURN
Rule 291   CommaParameterStar -> COMMA parameter CommaParameterStar
Rule 292   CommaParameterStar -> empty
Rule 293   parameters -> LPAREN parameter CommaParameterStar COMMA ELLIPSIS RPAREN
Rule 294   parameters -> LPAREN parameter CommaParameterStar RPAREN
Rule 295   parameters -> LPAREN ELLIPSIS RPAREN
Rule 296   parameters -> LPAREN RPAREN
Rule 297   postblit -> THIS LPAREN THIS RPAREN multiple_memberFunctionAttribute functionBody
Rule 298   postblit -> THIS LPAREN THIS RPAREN multiple_memberFunctionAttribute SEMICOLON
Rule 299   powExpression -> unaryExpression
Rule 300   powExpression -> powExpression DOUBLEXOR unaryExpression
Rule 301   StringLiteralPlus -> LIT_STR StringLiteralPlus
Rule 302   StringLiteralPlus -> LIT_STR
Rule 303   primaryExpression -> identifierOrTemplateInstance
Rule 304   primaryExpression -> DOT identifierOrTemplateInstance
Rule 305   primaryExpression -> typeConstructor LPAREN basicType RPAREN DOT IDENTIFIER
Rule 306   primaryExpression -> basicType DOT IDENTIFIER
Rule 307   primaryExpression -> basicType arguments
Rule 308   primaryExpression -> arrayLiteral
Rule 309   primaryExpression -> LPAREN expression RPAREN
Rule 310   primaryExpression -> functionLiteralExpression
Rule 311   primaryExpression -> traitsExpression
Rule 312   primaryExpression -> mixinExpression
Rule 313   primaryExpression -> importExpression
Rule 314   primaryExpression -> DOLLAR
Rule 315   primaryExpression -> THIS
Rule 316   primaryExpression -> NULL
Rule 317   primaryExpression -> TRUE
Rule 318   primaryExpression -> FALSE
Rule 319   primaryExpression -> INUMBER
Rule 320   primaryExpression -> DNUMBER
Rule 321   primaryExpression -> StringLiteralPlus
Rule 322   primaryExpression -> LIT_CHAR
Rule 323   register -> IDENTIFIER
Rule 324   register -> IDENTIFIER LPAREN INUMBER RPAREN
Rule 325   relExpression -> shiftExpression
Rule 326   relExpression -> relExpression relOperator shiftExpression
Rule 327   relOperator -> LESS
Rule 328   relOperator -> LESSEQ
Rule 329   relOperator -> GREATER
Rule 330   relOperator -> GREATER_EQ
Rule 331   relOperator -> IS_EQ_DIFF
Rule 332   relOperator -> NOT_EQ_DIFF
Rule 333   relOperator -> LESS_EQ_DIFF
Rule 334   relOperator -> LESS_DIFF
Rule 335   relOperator -> GREATER_EQ__DIFF
Rule 336   relOperator -> GREATER_DIFF
Rule 337   singleImport -> IDENTIFIER ASSIGN identifierChain
Rule 338   singleImport -> identifierChain
Rule 339   statement -> statementNoCaseNoDefault
Rule 340   statement -> caseStatement
Rule 341   statement -> caseRangeStatment
Rule 342   statement -> defaultStatement
Rule 343   storageClass -> typeConstructor
Rule 344   storageClass -> AUTO
Rule 345   storageClass -> ENUM
Rule 346   storageClass -> EXTERN
Rule 347   storageClass -> FINAL
Rule 348   storageClass -> STATIC
Rule 349   declarationStar -> declaration declarationStar
Rule 350   declarationStar -> empty
Rule 351   structBody -> LBRACE declarationStar RBRACE
Rule 352   switchStatement -> SWITCH LBRACKET expression RBRACKET statement
Rule 353   symbol -> DOT identifierOrTemplateChain
Rule 354   symbol -> identifierOrTemplateChain
Rule 355   ternaryExpression -> orOrExpression QUESTION expression COLON ternaryExpression
Rule 356   ternaryExpression -> orOrExpression
Rule 357   typeSuffixStar -> typeSuffix typeSuffixStar
Rule 358   typeSuffixStar -> empty
Rule 359   type -> typeConstructors type2 typeSuffixStar
Rule 360   type -> type2 typeSuffixStar
Rule 361   type2 -> builtinType
Rule 362   type2 -> symbol
Rule 363   type2 -> typeofExpression DOT identifierOrTemplateChain
Rule 364   type2 -> typeofExpression
Rule 365   type2 -> typeConstructor LBRACKET TYPEDEF RBRACKET
Rule 366   typeConstructor -> CONST
Rule 367   typeConstructor -> IMMUTABLE
Rule 368   typeConstructors -> typeConstructor
Rule 369   typeConstructors -> typeConstructor typeConstructors
Rule 370   typeSpecialization -> type
Rule 371   typeSpecialization -> UNION
Rule 372   typeSpecialization -> CLASS
Rule 373   typeSpecialization -> ENUM
Rule 374   typeSpecialization -> FUNCTION
Rule 375   typeSpecialization -> CONST
Rule 376   typeSpecialization -> IMMUTABLE
Rule 377   typeSpecialization -> RETURN
Rule 378   typeSpecialization -> TYPEDEF
Rule 379   typeSuffix -> TIMES
Rule 380   typeSuffix -> LBRACKET type RBRACKET
Rule 381   typeSuffix -> LBRACKET RBRACKET
Rule 382   typeSuffix -> LBRACKET assignExpression RBRACKET
Rule 383   typeSuffix -> LBRACKET assignExpression RANGE assignExpression RBRACKET
Rule 384   typeSuffix -> DELEGATE parameters multiple_memberFunctionAttribute SEMICOLON typeidExpression COLON TYPEID LBRACKET TYPEDEF RBRACKET
Rule 385   typeSuffix -> DELEGATE parameters multiple_memberFunctionAttribute SEMICOLON typeidExpression COLON TYPEID LBRACKET expression RBRACKET
Rule 386   typeSuffix -> FUNCTION parameters multiple_memberFunctionAttribute SEMICOLON typeidExpression COLON TYPEID LBRACKET TYPEDEF RBRACKET
Rule 387   typeSuffix -> FUNCTION parameters multiple_memberFunctionAttribute SEMICOLON typeidExpression COLON TYPEID LBRACKET expression RBRACKET
Rule 388   typeSuffix -> SEMICOLON typeofExpression COLON TYPEOF LBRACKET expression RBRACKET
Rule 389   typeSuffix -> SEMICOLON typeofExpression COLON TYPEOF LBRACKET RETURN RBRACKET
Rule 390   typeidExpression -> TYPEID LPAREN type RPAREN
Rule 391   typeidExpression -> TYPEID LPAREN expression RPAREN
Rule 392   unaryExpression -> primaryExpression
Rule 393   unaryExpression -> AMPERSAND unaryExpression
Rule 394   unaryExpression -> EXCLAMATION unaryExpression
Rule 395   unaryExpression -> TIMES unaryExpression
Rule 396   unaryExpression -> PLUS unaryExpression
Rule 397   unaryExpression -> MINUS unaryExpression
Rule 398   unaryExpression -> DOT
Rule 399   unaryExpression -> PLUS_PLUS unaryExpression
Rule 400   unaryExpression -> ELIPSIS
Rule 401   unaryExpression -> newExpression
Rule 402   unaryExpression -> deleteExpression
Rule 403   unaryExpression -> castExpression
Rule 404   unaryExpression -> functionCallExpression
Rule 405   unaryExpression -> indexExpression
Rule 406   unaryExpression -> LBRACKET TYPEDEF RBRACKET DOT identifierOrTemplateInstance
Rule 407   unaryExpression -> unaryExpression DOT newExpression
Rule 408   unaryExpression -> unaryExpression DOT
Rule 409   unaryExpression -> identifierOrTemplateInstance
Rule 410   unaryExpression -> RANGE
Rule 411   unaryExpression -> unaryExpression PLUS_PLUS
Rule 412   unionDeclaration -> UNION Idefntifier templateParameters structBody
Rule 413   unionDeclaration -> UNION Idefntifier templateParameters constraint structBody
Rule 414   unionDeclaration -> UNION IDENTIFIER structBody
Rule 415   unionDeclaration -> UNION IDENTIFIER SEMICOLON
Rule 416   unionDeclaration -> UNION structBody
Rule 417   CommaDeclarator -> COMMA declarator CommaDeclarator
Rule 418   CommaDeclarator -> empty
Rule 419   variableDeclaration -> multiplestorageClass TYPEDEF declarator CommaDeclarator SEMICOLON
Rule 420   variableDeclaration -> multiplestorageClass TYPEDEF IDENTIFIER ASSIGN functionBody SEMICOLOON
Rule 421   variableDeclaration -> autoDeclaration
Rule 422   whileStatement -> WHILE LBRACKET expression RBRACKET declarationOrStatement
Rule 423   withStatement -> WITH LBRACKET expression RBRACKET statementNoCaseNoDefault
Rule 424   empty -> <empty>

Terminals, with rules where they appear

ALIAS                : 5 6 13
AMPERSAND            : 17 393
ARROW                : 
ASSIGN               : 11 12 34 55 56 128 129 139 140 150 218 219 222 242 243 278 280 282 284 337 420
AUTO                 : 51 218 289 344
BACK_SLASH           : 
BODY                 : 60
BOOL                 : 66
BREAK                : 61 62
CARET                : 
CASE                 : 76 76 77 204 205
CAST                 : 78 79 80
CHAR                 : 73
CLASS                : 83 84 85 257 258 259 260 261 262 263 264 372
COLON                : 30 54 76 76 77 84 130 143 147 148 223 224 224 240 241 244 245 355 384 385 386 387 388 389
COMMA                : 7 20 26 56 65 137 157 176 209 225 228 234 291 293 417
COMMENT              : 
CONST                : 52 81 248 366 375
CONTINUE             : 101 102
DEFAULT              : 130 203
DELEGATE             : 384 385
DELETE               : 131
DIV                  : 255
DNUMBER              : 320
DO                   : 134
DOLLAR               : 314
DOT                  : 207 211 304 305 306 353 363 398 406 407 408
DOUBLE               : 75
DOUBLE_AMPERSAND     : 15
DOUBLE_PIPE          : 275
DOUBLE_QUOTE         : 135 135 136 136
ELLIPSIS             : 76 278 279 280 281 282 283 284 285 293 295
ELSE                 : 217
ENUM                 : 142 143 146 147 148 345 373
EQ_AND_BIT           : 41
EQ_DIV               : 42
EQ_LEFT              : 35
EQ_MINUS             : 38
EQ_MODULO            : 40
EQ_OR_BIT            : 43
EQ_PLUS              : 37
EQ_RIGHT             : 36
EQ_TIMES             : 39
EQ_XOR_BIT           : 44
EXCLAMATION          : 215 394
EXTERN               : 49 346
FALSE                : 318
FINAL                : 50 287 347
FLOAT                : 74
FOR                  : 159 160 161 162 163 164 165 166
FOREACH              : 167 168
FOREACH_REVERSE      : 169 170
FUNCTION             : 192 193 194 195 199 200 374 386 387
GOTO                 : 202 203 204 205
GREATER              : 329
GREATER_DIFF         : 336
GREATER_EQ           : 330
GREATER_EQ_DIFF      : 
IDENTIFIER           : 11 12 13 55 56 62 83 84 85 102 127 128 129 139 140 141 146 147 148 149 150 171 172 173 174 180 181 182 183 184 185 186 187 188 189 190 191 198 202 206 207 208 209 212 218 219 221 222 222 244 245 278 278 279 279 280 281 282 283 305 306 323 324 337 414 415 420
IF                   : 90 216 217
IMMUTABLE            : 53 82 247 367 376
IMPORT               : 225 226 227
INT                  : 69
INUMBER              : 319 324
IS_EQ                : 151
IS_EQ_DIFF           : 331
LBRACE               : 58 59 104 142 143 351
LBRACKET             : 24 25 28 29 232 233 266 352 365 380 381 382 383 384 385 386 387 388 389 406 422 423
LEFT_SHIFT           : 154
LESS                 : 327
LESS_DIFF            : 334
LESS_EQ              : 
LESS_EQ_DIFF         : 333
LIT_CHAR             : 322
LIT_STR              : 301 302
LONG                 : 71
LPAREN               : 22 23 78 79 80 90 132 133 134 159 160 161 162 163 164 165 166 167 168 169 170 216 217 238 239 240 241 242 243 252 293 294 295 296 297 298 305 309 324 390 391
MINUS                : 3 397
MINUS_MINUS          : 
MIXIN                : 252
MODULO               : 256
NEW                  : 257 258 259 260 261 262 263 264 265 266 267
NOT_EQ               : 152
NOT_EQ_DIFF          : 332
NULL                 : 316
PIPE                 : 273
PLUS                 : 2 396
PLUS_PLUS            : 399 411
PRIVATE              : 45
PROTECTED            : 46
PUBLIC               : 47
QUESTION             : 355
RANGE                : 168 170 231 383 410
RBRACE               : 58 59 104 142 143 351
RBRACKET             : 24 25 28 29 168 232 233 266 352 365 380 381 382 383 384 385 386 387 388 389 406 422 423
RETURN               : 249 290 377 389
RIGHT_SHIFT          : 155
RPAREN               : 22 23 78 79 80 90 132 133 134 159 160 161 162 163 164 165 166 167 169 170 216 217 238 239 240 241 242 243 252 293 294 295 296 297 298 305 309 324 390 391
SCOPE                : 
SEMICOLON            : 5 6 12 13 55 61 62 83 92 94 96 98 101 102 133 134 146 147 158 159 160 161 162 163 164 165 166 167 168 169 170 180 182 184 185 188 189 202 203 204 205 225 226 227 250 251 298 384 385 386 387 388 389 415 419
SHORT                : 67
SINGLE_QUOTE         : 
SIZEOF               : 
STATIC               : 48 348
SWITCH               : 352
THIS                 : 13 91 92 93 94 95 96 97 98 132 133 297 297 298 298 315
TILDE                : 4 132 133
TIMES                : 254 379 395
TRUE                 : 317
TYPEDEF              : 139 147 148 182 183 188 189 190 191 194 195 200 219 365 378 384 386 406 419 420
TYPEID               : 384 385 386 387 390 391
TYPEOF               : 388 389
UINT                 : 70
ULONG                : 72
UNION                : 371 412 413 414 415 416
USHORT               : 68
VOID                 : 236
WHILE                : 134 422
WITH                 : 423
error                : 

Nonterminals, with rules where they appear

CommaDeclarator      : 417 419
CommaParameterStar   : 291 293 294
DOUBLEXOR            : 300
ELIPSIS              : 400
GREATER_EQ__DIFF     : 335
IS                   : 214 215 238 239 240 241 242 243
Idefntifier          : 412 413
LESSEQ               : 328
OUT                  : 288
SEMICOLOON           : 420
StringLiteralPlus    : 301 321
addExpression        : 2 3 4 153 154 155 0
aliasDeclaration     : 109
aliasInitializer     : 5 7
aliasThisDeclaration : 110
andAndExpression     : 15 274 275
andExpression        : 17
anonymousEnumDeclaration : 111
anonymousEnumMember  : 142 143 144
argumentList         : 19 23 29 77
arguments            : 178 178 179 257 258 261 262 262 263 264 264 267 307
arrayInitializer     : 270
arrayLiteral         : 308
arrayMemberInitialization : 25 26
array_Literal        : 
assignExpression     : 18 20 30 76 76 139 140 150 156 157 198 199 200 230 231 231 252 266 269 278 280 282 284 382 383 383
assignOperator       : 33
attribute            : 54 104 107
attributeDeclaration : 112
autoDeclaration      : 421
baseClass            : 64 65
baseClassList        : 65 84 257 259 263 264
basicType            : 305 306 307
blockStatement       : 60 177
bodyStatement        : 
breakStatement       : 
builtinType          : 361
caseRangeStatement   : 
caseRangeStatment    : 341
caseStatement        : 340
castExpression       : 403
castQualifier        : 80
classDeclaration     : 113
cmpExpression        : 16 17
comma_aliasInitializer : 5 7
comma_arrayMemberInitialization : 25 26
comma_assign         : 19 20
comma_enumMember     : 136 137
comma_identifier_assign_initializer : 55 56
comma_index          : 233 234
comma_singleImport   : 225 226 228
conditionalDeclaration : 114
constraint           : 95 96 97 98 184 186 188 190 413
constructor          : 115
continueStatement    : 
declaration          : 105 125 159 161 163 165 349
declaration2         : 103
declarationOrStatement : 123 124 159 160 161 162 163 164 165 166 167 168 169 170 216 217 217 245 422
declarationStar      : 349 351
declarationsAndStatements : 59 76 77 124 130
declarator           : 417 419
defaultStatement     : 342
deleteExpression     : 402
destructor           : 116
doStatement          : 
empty                : 8 10 21 27 57 100 106 108 138 145 229 235 277 292 350 358 418
enumBody             : 148
enumDeclaration      : 117
enumMember           : 135 136 137
equalExpression      : 87
expression           : 33 90 134 157 158 161 162 163 164 165 165 166 166 167 168 168 169 170 170 205 218 219 220 309 352 355 385 387 388 391 422 423
expressionStatement  : 
forStatement         : 
foreachStatement     : 
foreachType          : 168 170 175 176
foreachTypeList      : 167 169 176
functionAttribute    : 201 246
functionBody         : 91 93 95 97 132 181 183 186 187 190 191 192 193 194 195 196 197 297 420
functionCallExpression : 404
functionDeclaration  : 118
functionLiteralExpression : 12 310
gotoStatement        : 
identifier           : 239 241 243
identifierChain      : 207 337 338
identifierList       : 6 209
identifierOrTemplateChain : 211 353 354 363
identifierOrTemplateInstance : 210 211 303 304 406 409
identityExpression   : 88
ifCondition          : 216 217
ifStatement          : 
importBind           : 223 224 224
importBindings       : 225 227
importDeclaration    : 119
importExpression     : 313
index                : 233 234
indexExpression      : 405
initializer          : 55 56 128 129
isExpression         : 
labeledStatement     : 
memberFunctionAttribute : 99
mixinDeclaration     : 120
mixinExpression      : 250 312
mulExpression        : 1 2 3 4 254 255 256
multiple_declaration : 104 105
multiple_functionAttribute : 192 195 196 199 200 201
multiple_memberFunctionAttribute : 91 92 93 94 95 96 97 98 99 132 133 180 181 182 183 184 185 186 187 188 189 190 191 297 298 384 385 386 387
multipleanonymousEnumMember : 142 143 144
multipleattributes   : 103 104 107
multiplestorageClass : 6 9 11 55 180 181 184 185 186 187 419 420
newAnonClassExpression : 268
newExpression        : 401 407
nonVoidInitializer   : 30 31 237
orExpression         : 14 15 273
orOrExpression       : 275 355 356
parameter            : 291 293 294
parameterAttribute   : 276
parameterAttributeStar : 276 278 278 278 279 279 279 280 280 280 281 281 281 282 282 282 283 283 283 284 284 284 285 285 285
parameters           : 91 92 93 94 95 96 97 98 180 181 182 183 184 185 186 187 188 189 190 191 192 195 196 199 200 384 385 386 387
postblit             : 
powExpression        : 253 300
primaryExpression    : 392
register             : 
relExpression        : 89 326
relOperator          : 326
shiftExpression      : 86 151 151 152 152 154 155 214 214 215 215 325 326
singleImport         : 223 224 225 226 228
statement            : 126 352
statementNoCaseNoDefault : 134 160 162 164 166 339 423
storageClass         : 9 55 180 181 184 185 186 187
structBody           : 84 85 257 258 259 260 261 262 263 264 412 413 414 416
structInitializer    : 271
switchStatement      : 
symbol               : 178 362
templateInstance     : 213
templateMixinExpression : 251
templateParameters   : 93 94 97 98 129 184 185 186 187 188 189 190 191 412 413
ternaryExpression    : 32 33 355
traitsExpression     : 311
type                 : 6 11 79 143 172 174 179 238 239 240 241 242 243 265 266 267 278 278 278 279 279 279 280 280 280 281 281 281 282 282 282 283 283 283 284 284 284 285 285 285 370 380 390
type2                : 63 359 360
typeConstructor      : 286 305 343 365 368 369
typeConstructors     : 173 174 359 369
typeSpecialization   : 240 241 242 243
typeSuffix           : 357
typeSuffixStar       : 357 359 360
typeidExpression     : 384 385 386 387
typeofExpression     : 363 364 388 389
unaryExpression      : 78 79 80 131 178 232 233 299 300 393 394 395 396 397 399 407 408 411
unionDeclaration     : 121
variableDeclaration  : 122
whileStatement       : 
withStatement        : 
xorExpression        : 272 273

