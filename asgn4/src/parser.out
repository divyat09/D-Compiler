Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    POST_PLUS_PLUS
    UAMPERSAND
    COMMENT
    UPLUS
    ARROW
    DOUBLE
    NOT_EQ_DIFF
    SIZEOF
    EMPTY
    POST_MINUS_MINUS
    IdentifierOrTemplateInstance
    GREATER_EQ_DIFF
    IS_EQ_DIFF
    DELEGATE
    SINGLE_QUOTE
    LESS_EQ_DIFF
    DOUBLE_QUOTE
    LESS_DIFF
    GREATER_DIFF
    UMINUS
    UTIMES
    TYPEDEF
    BACK_SLASH

Grammar

Rule 0     S' -> Declaration_mult
Rule 1     Declaration_mult -> Declaration Declaration_mult
Rule 2     Declaration_mult -> empty
Rule 3     DeclDefs -> DeclDef
Rule 4     DeclDefs -> DeclDef DeclDefs
Rule 5     DeclDefs_opt -> DeclDefs
Rule 6     DeclDefs_opt -> empty
Rule 7     DeclDef -> AttributeSpecifier
Rule 8     DeclDef -> Declaration
Rule 9     DeclDef -> Allocator
Rule 10    DeclDef -> Deallocator
Rule 11    DeclDef -> AliasThis
Rule 12    DeclDef -> MixinDeclaration
Rule 13    DeclDef -> SEMICOLON
Rule 14    ModuleFullyQualifiedName -> ModuleName
Rule 15    ModuleFullyQualifiedName -> Packages DOT ModuleName
Rule 16    ModuleName -> IDENTIFIER
Rule 17    Packages -> PackageName
Rule 18    Packages -> Packages DOT PackageName
Rule 19    PackageName -> IDENTIFIER
Rule 20    ImportDeclaration -> IMPORT ImportList SEMICOLON
Rule 21    ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON
Rule 22    ImportList -> Import
Rule 23    ImportList -> ImportBindings
Rule 24    ImportList -> Import COMMA ImportList
Rule 25    Import -> ModuleFullyQualifiedName
Rule 26    Import -> ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName
Rule 27    ImportBindings -> Import COLON ImportBindList
Rule 28    ImportBindList -> ImportBind
Rule 29    ImportBindList -> ImportBind COMMA ImportBindList
Rule 30    ImportBind -> IDENTIFIER
Rule 31    ImportBind -> IDENTIFIER ASSIGN IDENTIFIER
Rule 32    ModuleAliasIdentifier -> IDENTIFIER
Rule 33    MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON
Rule 34    Declaration -> FuncDeclaration
Rule 35    Declaration -> VarDeclarations
Rule 36    Declaration -> AliasDeclaration
Rule 37    Declaration -> AggregateDeclaration
Rule 38    Declaration -> EnumDeclaration
Rule 39    Declaration -> ImportDeclaration
Rule 40    VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON
Rule 41    Declarators -> DeclaratorInitializer
Rule 42    Declarators -> DeclaratorInitializer COMMA DeclaratorIdentifierList
Rule 43    DeclaratorInitializer -> VarDeclarator
Rule 44    DeclaratorInitializer -> VarDeclarator ASSIGN Initializer
Rule 45    DeclaratorInitializer -> AltDeclarator ASSIGN Initializer
Rule 46    DeclaratorInitializer -> AltDeclarator
Rule 47    DeclaratorIdentifierList -> DeclaratorIdentifier
Rule 48    DeclaratorIdentifierList -> DeclaratorIdentifier COMMA DeclaratorIdentifierList
Rule 49    DeclaratorIdentifier -> VarDeclaratorIdentifier
Rule 50    DeclaratorIdentifier -> AltDeclaratorIdentifier
Rule 51    VarDeclaratorIdentifier -> IDENTIFIER
Rule 52    VarDeclaratorIdentifier -> IDENTIFIER ASSIGN Initializer
Rule 53    AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt
Rule 54    AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN Initializer
Rule 55    AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
Rule 56    AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes ASSIGN Initializer
Rule 57    Declarator -> VarDeclarator
Rule 58    Declarator -> AltDeclarator
Rule 59    VarDeclarator -> BasicType2_opt IDENTIFIER
Rule 60    AltDeclarator -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
Rule 61    AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN
Rule 62    AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
Rule 63    AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes
Rule 64    AltDeclaratorX -> BasicType2_opt IDENTIFIER
Rule 65    AltDeclaratorX -> BasicType2_opt IDENTIFIER AltFuncDeclaratorSuffix
Rule 66    AltDeclaratorX -> AltDeclarator
Rule 67    AltDeclaratorSuffixes -> AltDeclaratorSuffix
Rule 68    AltDeclaratorSuffixes -> AltDeclaratorSuffix AltDeclaratorSuffixes
Rule 69    AltDeclaratorSuffixes_opt -> AltDeclaratorSuffixes
Rule 70    AltDeclaratorSuffixes_opt -> empty
Rule 71    AltDeclaratorSuffix -> LBRACKET RBRACKET
Rule 72    AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET
Rule 73    AltDeclaratorSuffix -> LBRACKET Type RBRACKET
Rule 74    AltFuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt
Rule 75    Type -> BasicType BasicType2_opt
Rule 76    Type_opt -> Type
Rule 77    Type_opt -> empty
Rule 78    BasicType -> BasicTypeX
Rule 79    BasicType -> DOT IdentifierList
Rule 80    BasicType -> IdentifierList
Rule 81    BasicType -> Typeof
Rule 82    BasicType -> Typeof DOT IdentifierList
Rule 83    BasicTypeX -> BOOL
Rule 84    BasicTypeX -> SHORT
Rule 85    BasicTypeX -> USHORT
Rule 86    BasicTypeX -> INT
Rule 87    BasicTypeX -> UINT
Rule 88    BasicTypeX -> LONG
Rule 89    BasicTypeX -> ULONG
Rule 90    BasicTypeX -> CHAR
Rule 91    BasicTypeX -> FLOAT
Rule 92    BasicTypeX -> VOID
Rule 93    BasicType2 -> BasicType2X BasicType2_opt
Rule 94    BasicType2_opt -> BasicType2
Rule 95    BasicType2_opt -> empty
Rule 96    BasicType2X -> TIMES
Rule 97    BasicType2X -> LBRACKET RBRACKET
Rule 98    BasicType2X -> LBRACKET AssignExpression RBRACKET
Rule 99    BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET
Rule 100   BasicType2X -> LBRACKET Type RBRACKET
Rule 101   BasicType2X -> FUNCTION Parameters
Rule 102   IdentifierList -> IDENTIFIER
Rule 103   IdentifierList -> IDENTIFIER DOT IdentifierList
Rule 104   IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
Rule 105   StorageClasses -> StorageClass
Rule 106   StorageClasses -> StorageClass StorageClasses
Rule 107   StorageClass -> ENUM
Rule 108   StorageClass -> STATIC
Rule 109   StorageClass -> EXTERN
Rule 110   StorageClass -> FINAL
Rule 111   StorageClass -> AUTO
Rule 112   StorageClass -> CONST
Rule 113   StorageClass -> IMMUTABLE
Rule 114   Initializer -> VoidInitializer
Rule 115   Initializer -> NonVoidInitializer
Rule 116   NonVoidInitializer -> ExpInitializer
Rule 117   NonVoidInitializer -> ArrayInitializer
Rule 118   ExpInitializer -> AssignExpression
Rule 119   ArrayInitializer -> LBRACKET ArrayMemberInitializations_opt RBRACKET
Rule 120   ArrayMemberInitializations -> ArrayMemberInitialization
Rule 121   ArrayMemberInitializations -> ArrayMemberInitialization COMMA
Rule 122   ArrayMemberInitializations -> ArrayMemberInitialization COMMA ArrayMemberInitializations
Rule 123   ArrayMemberInitializations_opt -> ArrayMemberInitializations
Rule 124   ArrayMemberInitializations_opt -> empty
Rule 125   ArrayMemberInitialization -> NonVoidInitializer
Rule 126   ArrayMemberInitialization -> AssignExpression COLON NonVoidInitializer
Rule 127   AutoDeclaration -> StorageClasses AutoDeclarationX SEMICOLON
Rule 128   AutoDeclarationX -> AutoDeclarationY
Rule 129   AutoDeclarationX -> AutoDeclarationX COMMA AutoDeclarationY
Rule 130   AutoDeclarationY -> IDENTIFIER ASSIGN Initializer
Rule 131   StorageClasses_opt -> StorageClasses
Rule 132   StorageClasses_opt -> empty
Rule 133   AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
Rule 134   AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
Rule 135   AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON
Rule 136   AliasDeclarationX -> AliasDeclarationY
Rule 137   AliasDeclarationX -> AliasDeclarationX COMMA AliasDeclarationY
Rule 138   AliasDeclarationY -> IDENTIFIER ASSIGN StorageClasses_opt Type
Rule 139   AliasDeclarationY -> IDENTIFIER ASSIGN FunctionLiteral
Rule 140   Typeof -> TYPEOF LPAREN Expression RPAREN
Rule 141   Typeof -> TYPEOF LPAREN RETURN RPAREN
Rule 142   VoidInitializer -> VOID
Rule 143   AttributeSpecifier -> Attribute COLON
Rule 144   AttributeSpecifier -> Attribute DeclarationBlock
Rule 145   Attribute -> VisibilityAttribute
Rule 146   DeclarationBlock -> DeclDef
Rule 147   DeclarationBlock -> LBRACE DeclDefs_opt RBRACE
Rule 148   VisibilityAttribute -> PRIVATE
Rule 149   VisibilityAttribute -> PROTECTED
Rule 150   VisibilityAttribute -> PUBLIC
Rule 151   Expression -> CommaExpression
Rule 152   CommaExpression -> AssignExpression
Rule 153   CommaExpression -> AssignExpression COMMA CommaExpression
Rule 154   AssignExpression -> ConditionalExpression
Rule 155   AssignExpression -> ConditionalExpression ASSIGN AssignExpression
Rule 156   AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression
Rule 157   AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression
Rule 158   AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression
Rule 159   AssignExpression -> ConditionalExpression EQ_DIV AssignExpression
Rule 160   AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression
Rule 161   AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression
Rule 162   AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression
Rule 163   AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression
Rule 164   AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression
Rule 165   AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression
Rule 166   ConditionalExpression -> OrOrExpression
Rule 167   ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression
Rule 168   OrOrExpression -> AndAndExpression
Rule 169   OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression
Rule 170   AndAndExpression -> OrExpression
Rule 171   AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression
Rule 172   OrExpression -> XorExpression
Rule 173   OrExpression -> OrExpression PIPE XorExpression
Rule 174   XorExpression -> AndExpression
Rule 175   XorExpression -> XorExpression CARET AndExpression
Rule 176   AndExpression -> CmpExpression
Rule 177   AndExpression -> AndExpression AMPERSAND CmpExpression
Rule 178   CmpExpression -> ShiftExpression
Rule 179   CmpExpression -> EqualExpression
Rule 180   CmpExpression -> RelExpression
Rule 181   EqualExpression -> ShiftExpression IS_EQ ShiftExpression
Rule 182   EqualExpression -> ShiftExpression NOT_EQ ShiftExpression
Rule 183   RelExpression -> ShiftExpression LESS ShiftExpression
Rule 184   RelExpression -> ShiftExpression GREATER_EQ ShiftExpression
Rule 185   RelExpression -> ShiftExpression GREATER ShiftExpression
Rule 186   RelExpression -> ShiftExpression LESS_EQ ShiftExpression
Rule 187   ShiftExpression -> AddExpression
Rule 188   ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression
Rule 189   ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression
Rule 190   AddExpression -> MulExpression
Rule 191   AddExpression -> AddExpression PLUS MulExpression
Rule 192   AddExpression -> AddExpression MINUS MulExpression
Rule 193   MulExpression -> UnaryExpression
Rule 194   MulExpression -> MulExpression TIMES UnaryExpression
Rule 195   MulExpression -> MulExpression DIV UnaryExpression
Rule 196   MulExpression -> MulExpression MODULO UnaryExpression
Rule 197   UnaryExpression -> AMPERSAND UnaryExpression
Rule 198   UnaryExpression -> PLUS_PLUS UnaryExpression
Rule 199   UnaryExpression -> MINUS_MINUS UnaryExpression
Rule 200   UnaryExpression -> TIMES UnaryExpression
Rule 201   UnaryExpression -> MINUS UnaryExpression
Rule 202   UnaryExpression -> PLUS UnaryExpression
Rule 203   UnaryExpression -> EXCLAMATION UnaryExpression
Rule 204   UnaryExpression -> ComplementExpression
Rule 205   UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER
Rule 206   UnaryExpression -> CastExpression
Rule 207   UnaryExpression -> PowExpression
Rule 208   ComplementExpression -> TILDE UnaryExpression
Rule 209   NewExpression -> NEW AllocatorArguments_opt Type
Rule 210   NewExpression -> NewExpressionWithArgs
Rule 211   NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
Rule 212   NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
Rule 213   NewExpressionWithArgs -> NewAnonClassExpression
Rule 214   AllocatorArguments -> LPAREN ArgumentList_opt RPAREN
Rule 215   AllocatorArguments_opt -> AllocatorArguments
Rule 216   AllocatorArguments_opt -> empty
Rule 217   ArgumentList_opt -> ArgumentList
Rule 218   ArgumentList_opt -> empty
Rule 219   ArgumentList -> AssignExpression
Rule 220   ArgumentList -> AssignExpression COMMA
Rule 221   ArgumentList -> AssignExpression COMMA ArgumentList
Rule 222   CastExpression -> CAST LPAREN Type RPAREN UnaryExpression
Rule 223   CastExpression -> CAST LPAREN RPAREN UnaryExpression
Rule 224   PowExpression -> PostfixExpression
Rule 225   PowExpression -> PostfixExpression POWER UnaryExpression
Rule 226   PostfixExpression -> PrimaryExpression
Rule 227   PostfixExpression -> PostfixExpression DOT IDENTIFIER
Rule 228   PostfixExpression -> PostfixExpression DOT NewExpression
Rule 229   PostfixExpression -> PostfixExpression PLUS_PLUS
Rule 230   PostfixExpression -> PostfixExpression MINUS_MINUS
Rule 231   PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN
Rule 232   PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN
Rule 233   PrimaryExpression -> IDENTIFIER
Rule 234   PrimaryExpression -> IdentifierList
Rule 235   PrimaryExpression -> DOT IDENTIFIER
Rule 236   PrimaryExpression -> THIS
Rule 237   PrimaryExpression -> NULL
Rule 238   PrimaryExpression -> TRUE
Rule 239   PrimaryExpression -> FALSE
Rule 240   PrimaryExpression -> DOLLAR
Rule 241   PrimaryExpression -> INUMBER
Rule 242   PrimaryExpression -> DNUMBER
Rule 243   PrimaryExpression -> LIT_CHAR
Rule 244   PrimaryExpression -> LIT_STRPlus
Rule 245   PrimaryExpression -> ArrayLiteral
Rule 246   PrimaryExpression -> FunctionLiteral
Rule 247   PrimaryExpression -> MixinExpression
Rule 248   PrimaryExpression -> ImportExpression
Rule 249   PrimaryExpression -> NewExpressionWithArgs
Rule 250   PrimaryExpression -> BasicTypeX DOT IDENTIFIER
Rule 251   PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN
Rule 252   PrimaryExpression -> Typeof
Rule 253   PrimaryExpression -> LPAREN Expression RPAREN
Rule 254   PrimaryExpression -> TypeidExpression
Rule 255   ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET
Rule 256   ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET
Rule 257   ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET
Rule 258   FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
Rule 259   FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody
Rule 260   FunctionLiteral -> FunctionLiteralBody
Rule 261   ParameterAttributes -> Parameters
Rule 262   ParameterAttributes_opt -> ParameterAttributes_opt
Rule 263   ParameterAttributes_opt -> empty
Rule 264   ParameterMemberAttributes -> Parameters MemberFunctionAttributes_opt
Rule 265   FunctionLiteralBody -> BlockStatement
Rule 266   FunctionLiteralBody -> BodyStatement
Rule 267   LIT_STRPlus -> LIT_STR LIT_STRPlus
Rule 268   LIT_STRPlus -> LIT_STR
Rule 269   MixinExpression -> MIXIN LPAREN AssignExpression RPAREN
Rule 270   ImportExpression -> IMPORT LPAREN AssignExpression RPAREN
Rule 271   TypeidExpression -> TYPEID LPAREN Type RPAREN
Rule 272   TypeidExpression -> TYPEID LPAREN Expression RPAREN
Rule 273   Statement -> SEMICOLON
Rule 274   Statement -> NonEmptyStatement
Rule 275   Statement -> ScopeBlockStatement
Rule 276   NoScopeNonEmptyStatement -> NonEmptyStatement
Rule 277   NoScopeNonEmptyStatement -> BlockStatement
Rule 278   NoScopeStatement -> SEMICOLON
Rule 279   NoScopeStatement -> NonEmptyStatement
Rule 280   NoScopeStatement -> BlockStatement
Rule 281   NonEmptyOrScopeBlockStatement -> NonEmptyStatement
Rule 282   NonEmptyOrScopeBlockStatement -> ScopeBlockStatement
Rule 283   NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault
Rule 284   NonEmptyStatement -> CaseStatement
Rule 285   NonEmptyStatement -> CaseRangeStatement
Rule 286   NonEmptyStatement -> DefaultStatement
Rule 287   NonEmptyStatementNoCaseNoDefault -> LabeledStatement
Rule 288   NonEmptyStatementNoCaseNoDefault -> ExpressionStatement
Rule 289   NonEmptyStatementNoCaseNoDefault -> DeclarationStatement
Rule 290   NonEmptyStatementNoCaseNoDefault -> IfStatement
Rule 291   NonEmptyStatementNoCaseNoDefault -> WhileStatement
Rule 292   NonEmptyStatementNoCaseNoDefault -> DoStatement
Rule 293   NonEmptyStatementNoCaseNoDefault -> ForStatement
Rule 294   NonEmptyStatementNoCaseNoDefault -> ForeachStatement
Rule 295   NonEmptyStatementNoCaseNoDefault -> SwitchStatement
Rule 296   NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement
Rule 297   NonEmptyStatementNoCaseNoDefault -> ContinueStatement
Rule 298   NonEmptyStatementNoCaseNoDefault -> BreakStatement
Rule 299   NonEmptyStatementNoCaseNoDefault -> ReturnStatement
Rule 300   NonEmptyStatementNoCaseNoDefault -> GotoStatement
Rule 301   NonEmptyStatementNoCaseNoDefault -> WithStatement
Rule 302   NonEmptyStatementNoCaseNoDefault -> MixinStatement
Rule 303   NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement
Rule 304   NonEmptyStatementNoCaseNoDefault -> ImportDeclaration
Rule 305   ScopeStatement -> NonEmptyStatement
Rule 306   ScopeStatement -> BlockStatement
Rule 307   ScopeBlockStatement -> BlockStatement
Rule 308   LabeledStatement -> IDENTIFIER COLON
Rule 309   LabeledStatement -> IDENTIFIER COLON NoScopeStatement
Rule 310   LabeledStatement -> IDENTIFIER COLON Statement
Rule 311   BlockStatement -> LBRACE RBRACE
Rule 312   BlockStatement -> LBRACE StatementList RBRACE
Rule 313   StatementList -> Statement
Rule 314   StatementList -> Statement StatementList
Rule 315   ExpressionStatement -> Expression SEMICOLON
Rule 316   DeclarationStatement -> Declaration
Rule 317   DeclarationStatement -> StorageClasses Declaration
Rule 318   IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
Rule 319   IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
Rule 320   ifmark4 -> empty
Rule 321   ifmark3 -> empty
Rule 322   ifmark2 -> empty
Rule 323   ifmark1 -> empty
Rule 324   IfCondition -> Expression
Rule 325   IfCondition -> AUTO IDENTIFIER ASSIGN Expression
Rule 326   IfCondition -> BasicType Declarator ASSIGN Expression
Rule 327   ThenStatement -> ScopeStatement
Rule 328   ElseStatement -> ScopeStatement
Rule 329   WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement
Rule 330   DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN
Rule 331   ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
Rule 332   for_M1 -> <empty>
Rule 333   for_M2 -> <empty>
Rule 334   for_M3 -> <empty>
Rule 335   Initialize -> SEMICOLON
Rule 336   Initialize -> NoScopeNonEmptyStatement
Rule 337   Test -> Expression
Rule 338   Test_opt -> Test
Rule 339   Test_opt -> empty
Rule 340   Increment -> Expression
Rule 341   Increment_opt -> Increment
Rule 342   Increment_opt -> empty
Rule 343   AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
Rule 344   ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement
Rule 345   Foreach -> FOREACH
Rule 346   Foreach -> FOREACH_REVERSE
Rule 347   ForeachTypeList -> ForeachType
Rule 348   ForeachTypeList -> ForeachType COMMA ForeachTypeList
Rule 349   ForeachType -> ForeachTypeAttributes_opt BasicType Declarator
Rule 350   ForeachType -> ForeachTypeAttributes_opt IDENTIFIER
Rule 351   ForeachType -> ForeachTypeAttributes_opt ALIAS IDENTIFIER
Rule 352   ForeachTypeAttributes_opt -> ForeachTypeAttributes
Rule 353   ForeachTypeAttributes_opt -> empty
Rule 354   ForeachTypeAttributes -> ForeachTypeAttribute
Rule 355   ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt
Rule 356   ForeachTypeAttribute -> ENUM
Rule 357   ForeachAggregate -> Expression
Rule 358   RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
Rule 359   LwrExpression -> Expression
Rule 360   UprExpression -> Expression
Rule 361   ForeachRangeStatement -> RangeForeach ScopeStatement
Rule 362   SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement
Rule 363   CaseStatement -> CASE ArgumentList COLON ScopeStatementList
Rule 364   CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
Rule 365   FirstExp -> AssignExpression
Rule 366   LastExp -> AssignExpression
Rule 367   DefaultStatement -> DEFAULT COLON ScopeStatementList
Rule 368   ScopeStatementList -> StatementListNoCaseNoDefault
Rule 369   StatementListNoCaseNoDefault -> StatementNoCaseNoDefault
Rule 370   StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault
Rule 371   StatementNoCaseNoDefault -> SEMICOLON
Rule 372   StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault
Rule 373   StatementNoCaseNoDefault -> ScopeBlockStatement
Rule 374   FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
Rule 375   IDENTIFIER_opt -> IDENTIFIER
Rule 376   IDENTIFIER_opt -> empty
Rule 377   Expression_opt -> Expression
Rule 378   Expression_opt -> empty
Rule 379   ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON
Rule 380   BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON
Rule 381   ReturnStatement -> RETURN Expression_opt SEMICOLON
Rule 382   GotoStatement -> GOTO IDENTIFIER SEMICOLON
Rule 383   GotoStatement -> GOTO DEFAULT SEMICOLON
Rule 384   GotoStatement -> GOTO CASE SEMICOLON
Rule 385   GotoStatement -> GOTO CASE Expression SEMICOLON
Rule 386   WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement
Rule 387   WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement
Rule 388   MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON
Rule 389   AggregateDeclaration -> ClassDeclaration
Rule 390   AggregateDeclaration -> UnionDeclaration
Rule 391   UnionDeclaration -> UNION IDENTIFIER SEMICOLON
Rule 392   UnionDeclaration -> UNION IDENTIFIER AggregateBody
Rule 393   UnionDeclaration -> AnonUnionDeclaration
Rule 394   AnonUnionDeclaration -> UNION AggregateBody
Rule 395   AggregateBody -> LBRACE DeclDefs_opt RBRACE
Rule 396   ClassDeclaration -> CLASS IDENTIFIER SEMICOLON
Rule 397   ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody
Rule 398   BaseClassList -> COLON SuperClass
Rule 399   BaseClassList -> COLON SuperClass COMMA Interfaces
Rule 400   BaseClassList -> COLON Interfaces
Rule 401   BaseClassList_opt -> BaseClassList
Rule 402   BaseClassList_opt -> empty
Rule 403   SuperClass -> BasicType
Rule 404   Interfaces -> Interface
Rule 405   Interfaces -> Interface COMMA Interfaces
Rule 406   Interface -> BasicType
Rule 407   Allocator -> NEW Parameters SEMICOLON
Rule 408   Allocator -> NEW Parameters FunctionBody
Rule 409   Deallocator -> DELETE Parameters SEMICOLON
Rule 410   Deallocator -> DELETE Parameters FunctionBody
Rule 411   AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON
Rule 412   NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
Rule 413   ClassArguments -> LPAREN ArgumentList_opt RPAREN
Rule 414   ClassArguments_opt -> ClassArguments
Rule 415   ClassArguments_opt -> empty
Rule 416   SuperClass_opt -> SuperClass
Rule 417   SuperClass_opt -> empty
Rule 418   Interfaces_opt -> Interfaces
Rule 419   Interfaces_opt -> empty
Rule 420   EnumDeclaration -> ENUM IDENTIFIER EnumBody
Rule 421   EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody
Rule 422   EnumDeclaration -> AnonymousEnumDeclaration
Rule 423   EnumBaseType -> Type
Rule 424   EnumBody -> LBRACE EnumMembers RBRACE
Rule 425   EnumBody -> SEMICOLON
Rule 426   EnumMembers -> EnumMember
Rule 427   EnumMembers -> EnumMember COMMA
Rule 428   EnumMembers -> EnumMember COMMA EnumMembers
Rule 429   EnumMember -> IDENTIFIER
Rule 430   EnumMember -> IDENTIFIER ASSIGN AssignExpression
Rule 431   AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
Rule 432   AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE
Rule 433   AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE
Rule 434   AnonymousEnumMembers -> AnonymousEnumMember
Rule 435   AnonymousEnumMembers -> AnonymousEnumMember COMMA
Rule 436   AnonymousEnumMembers -> AnonymousEnumMember COMMA AnonymousEnumMembers
Rule 437   AnonymousEnumMember -> EnumMember
Rule 438   AnonymousEnumMember -> Type IDENTIFIER ASSIGN AssignExpression
Rule 439   FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody
Rule 440   FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON
Rule 441   FuncDeclaration -> AutoFuncDeclaration
Rule 442   AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
Rule 443   FuncDeclarator -> BasicType2_opt IDENTIFIER FuncDeclaratorSuffix
Rule 444   FuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt
Rule 445   Parameters -> LPAREN ParameterList_opt RPAREN
Rule 446   ParameterList -> Parameter
Rule 447   ParameterList -> Parameter COMMA ParameterList
Rule 448   ParameterList -> ELLIPSIS
Rule 449   ParameterList_opt -> ParameterList
Rule 450   ParameterList_opt -> empty
Rule 451   Parameter -> InOut_opt BasicType Declarator
Rule 452   Parameter -> InOut_opt BasicType Declarator ELLIPSIS
Rule 453   Parameter -> InOut_opt BasicType Declarator ASSIGN AssignExpression
Rule 454   Parameter -> InOut_opt Type
Rule 455   Parameter -> InOut_opt Type ELLIPSIS
Rule 456   InOut -> InOutX
Rule 457   InOut -> InOut InOutX
Rule 458   InOutX -> AUTO
Rule 459   InOutX -> FINAL
Rule 460   InOutX -> SCOPE
Rule 461   InOut_opt -> InOut
Rule 462   InOut_opt -> empty
Rule 463   MemberFunctionAttributes -> MemberFunctionAttribute
Rule 464   MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes
Rule 465   MemberFunctionAttributes_opt -> MemberFunctionAttributes
Rule 466   MemberFunctionAttributes_opt -> empty
Rule 467   MemberFunctionAttribute -> CONST
Rule 468   MemberFunctionAttribute -> IMMUTABLE
Rule 469   MemberFunctionAttribute -> RETURN
Rule 470   FunctionBody -> BlockStatement
Rule 471   FunctionBody -> BodyStatement
Rule 472   BodyStatement -> BODY BlockStatement
Rule 473   Symbol -> SymbolTail
Rule 474   Symbol -> DOT SymbolTail
Rule 475   SymbolTail -> IDENTIFIER
Rule 476   SymbolTail -> IDENTIFIER DOT SymbolTail
Rule 477   empty -> <empty>

Terminals, with rules where they appear

ALIAS                : 133 134 135 351 411
AMPERSAND            : 177 197
ARROW                : 
ASSIGN               : 26 31 44 45 52 54 56 130 138 139 155 325 326 430 438 453
AUTO                 : 111 325 458
BACK_SLASH           : 
BODY                 : 472
BOOL                 : 83
BREAK                : 380
CARET                : 175
CASE                 : 363 364 384 385
CAST                 : 222 223
CHAR                 : 90
CLASS                : 396 397 412
COLON                : 27 126 143 167 308 309 310 363 364 364 367 398 399 400 421 431
COMMA                : 24 29 42 48 121 122 129 137 153 220 221 348 399 405 427 428 435 436 447
COMMENT              : 
CONST                : 112 467
CONTINUE             : 379
DEFAULT              : 367 383
DELEGATE             : 
DELETE               : 409 410
DIV                  : 195
DNUMBER              : 242
DO                   : 330
DOLLAR               : 240
DOT                  : 15 18 79 82 103 104 205 227 228 235 250 474 476
DOUBLE               : 
DOUBLE_AMPERSAND     : 171
DOUBLE_PIPE          : 169
DOUBLE_QUOTE         : 
ELLIPSIS             : 448 452 455
ELSE                 : 319
EMPTY                : 
ENUM                 : 107 356 420 421 431 432 433
EQ_AND_BIT           : 161
EQ_DIV               : 159
EQ_LEFT              : 164
EQ_MINUS             : 157
EQ_MODULO            : 160
EQ_OR_BIT            : 162
EQ_PLUS              : 156
EQ_RIGHT             : 165
EQ_TIMES             : 158
EQ_XOR_BIT           : 163
EXCLAMATION          : 203
EXTERN               : 109
FALSE                : 239
FINAL                : 110 374 459
FLOAT                : 91
FOR                  : 331
FOREACH              : 345
FOREACH_REVERSE      : 346
FUNCTION             : 101 258
GOTO                 : 382 383 384 385
GREATER              : 185
GREATER_DIFF         : 
GREATER_EQ           : 184
GREATER_EQ_DIFF      : 
IDENTIFIER           : 16 19 30 31 31 32 51 52 53 54 55 56 59 60 64 65 102 103 104 130 138 139 205 227 233 235 250 256 257 308 309 310 325 350 351 375 382 391 392 396 397 411 420 421 429 430 438 442 443 475 476
IF                   : 318 319
IMMUTABLE            : 113 468
IMPORT               : 20 21 270
INT                  : 86
INUMBER              : 241 256
IS_EQ                : 181
IS_EQ_DIFF           : 
IdentifierOrTemplateInstance : 
LBRACE               : 147 311 312 395 424 431 432 433
LBRACKET             : 71 72 73 97 98 99 100 104 119 211 255 256 257
LEFT_SHIFT           : 188
LESS                 : 183
LESS_DIFF            : 
LESS_EQ              : 186
LESS_EQ_DIFF         : 
LIT_CHAR             : 243
LIT_STR              : 267 268
LONG                 : 88
LPAREN               : 33 61 62 63 140 141 205 212 214 222 223 231 232 251 253 269 270 271 272 318 319 329 330 331 343 358 362 374 386 387 388 413 445
MINUS                : 192 201
MINUS_MINUS          : 199 230
MIXIN                : 33 269 388
MODULO               : 196
NEW                  : 209 211 212 407 408 412
NOT_EQ               : 182
NOT_EQ_DIFF          : 
NULL                 : 237
PIPE                 : 173
PLUS                 : 191 202
PLUS_PLUS            : 198 229
POST_MINUS_MINUS     : 
POST_PLUS_PLUS       : 
POWER                : 225
PRIVATE              : 148
PROTECTED            : 149
PUBLIC               : 150
QUESTION             : 167
RANGE                : 99 358 364
RBRACE               : 147 311 312 395 424 431 432 433
RBRACKET             : 71 72 73 97 98 99 100 104 119 211 255 256 257
RETURN               : 141 381 469
RIGHT_SHIFT          : 189
RPAREN               : 33 61 62 63 140 141 205 212 214 222 223 231 232 251 253 269 270 271 272 318 319 329 330 331 343 358 362 374 386 387 388 413 445
SCOPE                : 460
SEMICOLON            : 13 20 21 33 40 127 133 134 135 273 278 315 331 335 343 358 371 379 380 381 382 383 384 385 388 391 396 407 409 411 425 440
SHORT                : 84
SINGLE_QUOTE         : 
SIZEOF               : 
STATIC               : 21 108
SWITCH               : 362 374
THIS                 : 236 411
TILDE                : 208
TIMES                : 96 194 200
TRUE                 : 238
TYPEDEF              : 
TYPEID               : 271 272
TYPEOF               : 140 141
UAMPERSAND           : 
UINT                 : 87
ULONG                : 89
UMINUS               : 
UNION                : 391 392 394
UPLUS                : 
USHORT               : 85
UTIMES               : 
VOID                 : 92 142
WHILE                : 329 330
WITH                 : 386 387
error                : 

Nonterminals, with rules where they appear

AddExpression        : 187 188 189 191 192
AggregateBody        : 392 394 397 412
AggregateDeclaration : 37
AggregateForeach     : 344
AliasDeclaration     : 36
AliasDeclarationX    : 135 137
AliasDeclarationY    : 136 137
AliasThis            : 11
Allocator            : 9
AllocatorArguments   : 215
AllocatorArguments_opt : 209 211 212 412
AltDeclarator        : 45 46 58 66
AltDeclaratorIdentifier : 50
AltDeclaratorSuffix  : 67 68
AltDeclaratorSuffixes : 55 56 60 63 68 69
AltDeclaratorSuffixes_opt : 53 54
AltDeclaratorX       : 61 62 63
AltFuncDeclaratorSuffix : 62 65
AndAndExpression     : 168 169 171
AndExpression        : 174 175 177
AnonUnionDeclaration : 393
AnonymousEnumDeclaration : 422
AnonymousEnumMember  : 434 435 436
AnonymousEnumMembers : 433 436
ArgumentList         : 217 221 231 363
ArgumentList_opt     : 212 214 232 251 255 413
ArrayInitializer     : 117
ArrayLiteral         : 245
ArrayMemberInitialization : 120 121 122
ArrayMemberInitializations : 122 123
ArrayMemberInitializations_opt : 119
AssignExpression     : 33 72 98 99 99 104 118 126 152 153 155 156 157 158 159 160 161 162 163 164 165 211 219 220 221 257 269 270 365 366 388 430 438 453
Attribute            : 143 144
AttributeSpecifier   : 7
AutoDeclaration      : 
AutoDeclarationX     : 127 129
AutoDeclarationY     : 128 129
AutoFuncDeclaration  : 441
BaseClassList        : 401
BaseClassList_opt    : 397
BasicType            : 40 75 133 134 232 326 349 403 406 439 440 451 452 453
BasicType2           : 53 54 94
BasicType2X          : 93
BasicType2_opt       : 55 56 59 60 61 62 63 64 65 75 93 443
BasicTypeX           : 78 250 251
BlockStatement       : 265 277 280 306 307 470 472
BodyStatement        : 266 471
BreakStatement       : 298
CaseRangeStatement   : 285
CaseStatement        : 284
CastExpression       : 206
ClassArguments       : 414
ClassArguments_opt   : 412
ClassDeclaration     : 389
CmpExpression        : 176 177
CommaExpression      : 151 153
ComplementExpression : 204
ConditionalExpression : 154 155 156 157 158 159 160 161 162 163 164 165 167
ContinueStatement    : 297
Deallocator          : 10
DeclDef              : 3 4 146
DeclDefs             : 4 5
DeclDefs_opt         : 147 395
Declaration          : 1 8 316 317
DeclarationBlock     : 144
DeclarationStatement : 289
Declaration_mult     : 1 0
Declarator           : 326 349 451 452 453
DeclaratorIdentifier : 47 48
DeclaratorIdentifierList : 42 48
DeclaratorInitializer : 41 42
Declarators          : 40 133
DefaultStatement     : 286
DoStatement          : 292
ElseStatement        : 319
EnumBaseType         : 421 431
EnumBody             : 420 421
EnumDeclaration      : 38
EnumMember           : 426 427 428 437
EnumMembers          : 424 428 431 432
EqualExpression      : 179
ExpInitializer       : 116
Expression           : 140 167 253 272 315 324 325 326 329 330 337 340 357 359 360 362 374 377 385 386
ExpressionStatement  : 288
Expression_opt       : 381
FinalSwitchStatement : 296
FirstExp             : 364
ForStatement         : 293
Foreach              : 343
ForeachAggregate     : 343
ForeachRangeStatement : 303
ForeachStatement     : 294
ForeachType          : 347 348 358
ForeachTypeAttribute : 354 355
ForeachTypeAttributes : 352
ForeachTypeAttributes_opt : 349 350 351 355
ForeachTypeList      : 343 348
FuncDeclaration      : 34
FuncDeclarator       : 134 439 440
FuncDeclaratorSuffix : 442 443
FunctionBody         : 408 410 439 442
FunctionLiteral      : 139 246
FunctionLiteralBody  : 258 259 260
GotoStatement        : 300
IDENTIFIER_opt       : 379 380
IdentifierList       : 79 80 82 103 104 234
IfCondition          : 318 319
IfStatement          : 290
Import               : 22 24 27
ImportBind           : 28 29
ImportBindList       : 27 29
ImportBindings       : 23
ImportDeclaration    : 39 304
ImportExpression     : 248
ImportList           : 20 21 24
InOut                : 457 461
InOutX               : 456 457
InOut_opt            : 451 452 453 454 455
Increment            : 341
Increment_opt        : 331
Initialize           : 331
Initializer          : 44 45 52 54 56 130
Interface            : 404 405
Interfaces           : 399 400 405 418
Interfaces_opt       : 412
LIT_STRPlus          : 244 267
LabeledStatement     : 287
LastExp              : 364
LwrExpression        : 358
MemberFunctionAttribute : 463 464
MemberFunctionAttributes : 464 465
MemberFunctionAttributes_opt : 74 264 444
MixinDeclaration     : 12
MixinExpression      : 247
MixinStatement       : 302
ModuleAliasIdentifier : 26
ModuleFullyQualifiedName : 25 26
ModuleName           : 14 15
MulExpression        : 190 191 192 194 195 196
NewAnonClassExpression : 213
NewExpression        : 228
NewExpressionWithArgs : 210 249
NoScopeNonEmptyStatement : 336 344
NoScopeStatement     : 309
NonEmptyOrScopeBlockStatement : 
NonEmptyStatement    : 274 276 279 281 305
NonEmptyStatementNoCaseNoDefault : 283 372
NonVoidInitializer   : 115 125 126
OrExpression         : 170 171 173
OrOrExpression       : 166 167 169
PackageName          : 17 18
Packages             : 15 18
Parameter            : 446 447
ParameterAttributes  : 
ParameterAttributes_opt : 258 262
ParameterList        : 447 449
ParameterList_opt    : 445
ParameterMemberAttributes : 259
Parameters           : 74 101 261 264 407 408 409 410 444
PostfixExpression    : 224 225 227 228 229 230 231
PowExpression        : 207
PrimaryExpression    : 226
RangeForeach         : 361
RelExpression        : 180
ReturnStatement      : 299
ScopeBlockStatement  : 275 282 373
ScopeStatement       : 327 328 329 330 331 361 362 374 386 387
ScopeStatementList   : 363 364 367
ShiftExpression      : 178 181 181 182 182 183 183 184 184 185 185 186 186 188 189
Statement            : 310 313 314
StatementList        : 312 314
StatementListNoCaseNoDefault : 368 370
StatementNoCaseNoDefault : 369 370
StorageClass         : 105 106
StorageClasses       : 106 127 131 317 442
StorageClasses_opt   : 40 133 134 138 439 440
SuperClass           : 398 399 416
SuperClass_opt       : 412
SwitchStatement      : 295
Symbol               : 387
SymbolTail           : 473 474 476
Test                 : 338
Test_opt             : 331
ThenStatement        : 318 319
Type                 : 73 76 100 138 205 209 211 212 222 271 423 438 454 455
Type_opt             : 258
TypeidExpression     : 254
Typeof               : 81 82 252
UnaryExpression      : 193 194 195 196 197 198 199 200 201 202 203 208 222 223 225
UnionDeclaration     : 390
UprExpression        : 358
VarDeclarations      : 35
VarDeclarator        : 43 44 57
VarDeclaratorIdentifier : 49
VisibilityAttribute  : 145
VoidInitializer      : 114
WhileStatement       : 291
WithStatement        : 301
XorExpression        : 172 173 175
empty                : 2 6 70 77 95 124 132 216 218 263 320 321 322 323 339 342 353 376 378 402 415 417 419 450 462 466
for_M1               : 331
for_M2               : 331
for_M3               : 331
ifmark1              : 318 319
ifmark2              : 318
ifmark3              : 319
ifmark4              : 319

Parsing method: LALR

state 0

    (0) S' -> . Declaration_mult
    (1) Declaration_mult -> . Declaration Declaration_mult
    (2) Declaration_mult -> . empty
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (477) empty -> .
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

    $end            reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 18
    IMPORT          shift and go to state 27
    STATIC          shift and go to state 5
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

    AggregateDeclaration           shift and go to state 4
    FuncDeclaration                shift and go to state 6
    Declaration_mult               shift and go to state 8
    StorageClasses_opt             shift and go to state 9
    ImportDeclaration              shift and go to state 10
    Declaration                    shift and go to state 11
    AliasDeclaration               shift and go to state 12
    ClassDeclaration               shift and go to state 26
    VarDeclarations                shift and go to state 23
    empty                          shift and go to state 14
    AutoFuncDeclaration            shift and go to state 16
    StorageClasses                 shift and go to state 1
    AnonymousEnumDeclaration       shift and go to state 20
    AnonUnionDeclaration           shift and go to state 22
    EnumDeclaration                shift and go to state 24
    UnionDeclaration               shift and go to state 25
    StorageClass                   shift and go to state 28

state 1

    (131) StorageClasses_opt -> StorageClasses .
    (442) AutoFuncDeclaration -> StorageClasses . IDENTIFIER FuncDeclaratorSuffix FunctionBody

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    DOT             reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    BOOL            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    SHORT           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    USHORT          reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    INT             reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    UINT            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    LONG            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    ULONG           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    CHAR            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    FLOAT           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    VOID            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    TYPEOF          reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    IDENTIFIER      shift and go to state 29

  ! IDENTIFIER      [ reduce using rule 131 (StorageClasses_opt -> StorageClasses .) ]


state 2

    (111) StorageClass -> AUTO .

    ENUM            reduce using rule 111 (StorageClass -> AUTO .)
    STATIC          reduce using rule 111 (StorageClass -> AUTO .)
    EXTERN          reduce using rule 111 (StorageClass -> AUTO .)
    FINAL           reduce using rule 111 (StorageClass -> AUTO .)
    AUTO            reduce using rule 111 (StorageClass -> AUTO .)
    CONST           reduce using rule 111 (StorageClass -> AUTO .)
    IMMUTABLE       reduce using rule 111 (StorageClass -> AUTO .)
    DOT             reduce using rule 111 (StorageClass -> AUTO .)
    BOOL            reduce using rule 111 (StorageClass -> AUTO .)
    SHORT           reduce using rule 111 (StorageClass -> AUTO .)
    USHORT          reduce using rule 111 (StorageClass -> AUTO .)
    INT             reduce using rule 111 (StorageClass -> AUTO .)
    UINT            reduce using rule 111 (StorageClass -> AUTO .)
    LONG            reduce using rule 111 (StorageClass -> AUTO .)
    ULONG           reduce using rule 111 (StorageClass -> AUTO .)
    CHAR            reduce using rule 111 (StorageClass -> AUTO .)
    FLOAT           reduce using rule 111 (StorageClass -> AUTO .)
    VOID            reduce using rule 111 (StorageClass -> AUTO .)
    IDENTIFIER      reduce using rule 111 (StorageClass -> AUTO .)
    TYPEOF          reduce using rule 111 (StorageClass -> AUTO .)
    ALIAS           reduce using rule 111 (StorageClass -> AUTO .)
    IMPORT          reduce using rule 111 (StorageClass -> AUTO .)
    CLASS           reduce using rule 111 (StorageClass -> AUTO .)
    UNION           reduce using rule 111 (StorageClass -> AUTO .)


state 3

    (112) StorageClass -> CONST .

    ENUM            reduce using rule 112 (StorageClass -> CONST .)
    STATIC          reduce using rule 112 (StorageClass -> CONST .)
    EXTERN          reduce using rule 112 (StorageClass -> CONST .)
    FINAL           reduce using rule 112 (StorageClass -> CONST .)
    AUTO            reduce using rule 112 (StorageClass -> CONST .)
    CONST           reduce using rule 112 (StorageClass -> CONST .)
    IMMUTABLE       reduce using rule 112 (StorageClass -> CONST .)
    DOT             reduce using rule 112 (StorageClass -> CONST .)
    BOOL            reduce using rule 112 (StorageClass -> CONST .)
    SHORT           reduce using rule 112 (StorageClass -> CONST .)
    USHORT          reduce using rule 112 (StorageClass -> CONST .)
    INT             reduce using rule 112 (StorageClass -> CONST .)
    UINT            reduce using rule 112 (StorageClass -> CONST .)
    LONG            reduce using rule 112 (StorageClass -> CONST .)
    ULONG           reduce using rule 112 (StorageClass -> CONST .)
    CHAR            reduce using rule 112 (StorageClass -> CONST .)
    FLOAT           reduce using rule 112 (StorageClass -> CONST .)
    VOID            reduce using rule 112 (StorageClass -> CONST .)
    IDENTIFIER      reduce using rule 112 (StorageClass -> CONST .)
    TYPEOF          reduce using rule 112 (StorageClass -> CONST .)
    ALIAS           reduce using rule 112 (StorageClass -> CONST .)
    IMPORT          reduce using rule 112 (StorageClass -> CONST .)
    CLASS           reduce using rule 112 (StorageClass -> CONST .)
    UNION           reduce using rule 112 (StorageClass -> CONST .)


state 4

    (37) Declaration -> AggregateDeclaration .

    AMPERSAND       reduce using rule 37 (Declaration -> AggregateDeclaration .)
    PLUS_PLUS       reduce using rule 37 (Declaration -> AggregateDeclaration .)
    MINUS_MINUS     reduce using rule 37 (Declaration -> AggregateDeclaration .)
    TIMES           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    MINUS           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    PLUS            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    EXCLAMATION     reduce using rule 37 (Declaration -> AggregateDeclaration .)
    LPAREN          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    TILDE           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    CAST            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    IDENTIFIER      reduce using rule 37 (Declaration -> AggregateDeclaration .)
    DOT             reduce using rule 37 (Declaration -> AggregateDeclaration .)
    THIS            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    NULL            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    TRUE            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    FALSE           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    DOLLAR          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    INUMBER         reduce using rule 37 (Declaration -> AggregateDeclaration .)
    DNUMBER         reduce using rule 37 (Declaration -> AggregateDeclaration .)
    LIT_CHAR        reduce using rule 37 (Declaration -> AggregateDeclaration .)
    LIT_STR         reduce using rule 37 (Declaration -> AggregateDeclaration .)
    LBRACKET        reduce using rule 37 (Declaration -> AggregateDeclaration .)
    FUNCTION        reduce using rule 37 (Declaration -> AggregateDeclaration .)
    MIXIN           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    IMPORT          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    NEW             reduce using rule 37 (Declaration -> AggregateDeclaration .)
    BOOL            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    SHORT           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    USHORT          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    INT             reduce using rule 37 (Declaration -> AggregateDeclaration .)
    UINT            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    LONG            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    ULONG           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    CHAR            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    FLOAT           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    VOID            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    TYPEOF          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    TYPEID          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    LBRACE          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    BODY            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    SEMICOLON       reduce using rule 37 (Declaration -> AggregateDeclaration .)
    CASE            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    DEFAULT         reduce using rule 37 (Declaration -> AggregateDeclaration .)
    IF              reduce using rule 37 (Declaration -> AggregateDeclaration .)
    WHILE           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    DO              reduce using rule 37 (Declaration -> AggregateDeclaration .)
    FOR             reduce using rule 37 (Declaration -> AggregateDeclaration .)
    SWITCH          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    FINAL           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    CONTINUE        reduce using rule 37 (Declaration -> AggregateDeclaration .)
    BREAK           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    RETURN          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    GOTO            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    WITH            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    STATIC          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    ALIAS           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    ENUM            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    EXTERN          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    AUTO            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    CONST           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    IMMUTABLE       reduce using rule 37 (Declaration -> AggregateDeclaration .)
    FOREACH         reduce using rule 37 (Declaration -> AggregateDeclaration .)
    FOREACH_REVERSE reduce using rule 37 (Declaration -> AggregateDeclaration .)
    CLASS           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    UNION           reduce using rule 37 (Declaration -> AggregateDeclaration .)
    RBRACE          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    DELETE          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    PRIVATE         reduce using rule 37 (Declaration -> AggregateDeclaration .)
    PROTECTED       reduce using rule 37 (Declaration -> AggregateDeclaration .)
    PUBLIC          reduce using rule 37 (Declaration -> AggregateDeclaration .)
    ELSE            reduce using rule 37 (Declaration -> AggregateDeclaration .)
    $end            reduce using rule 37 (Declaration -> AggregateDeclaration .)


state 5

    (21) ImportDeclaration -> STATIC . IMPORT ImportList SEMICOLON
    (108) StorageClass -> STATIC .

  ! shift/reduce conflict for IMPORT resolved as shift
    IMPORT          shift and go to state 30
    ENUM            reduce using rule 108 (StorageClass -> STATIC .)
    STATIC          reduce using rule 108 (StorageClass -> STATIC .)
    EXTERN          reduce using rule 108 (StorageClass -> STATIC .)
    FINAL           reduce using rule 108 (StorageClass -> STATIC .)
    AUTO            reduce using rule 108 (StorageClass -> STATIC .)
    CONST           reduce using rule 108 (StorageClass -> STATIC .)
    IMMUTABLE       reduce using rule 108 (StorageClass -> STATIC .)
    IDENTIFIER      reduce using rule 108 (StorageClass -> STATIC .)
    DOT             reduce using rule 108 (StorageClass -> STATIC .)
    BOOL            reduce using rule 108 (StorageClass -> STATIC .)
    SHORT           reduce using rule 108 (StorageClass -> STATIC .)
    USHORT          reduce using rule 108 (StorageClass -> STATIC .)
    INT             reduce using rule 108 (StorageClass -> STATIC .)
    UINT            reduce using rule 108 (StorageClass -> STATIC .)
    LONG            reduce using rule 108 (StorageClass -> STATIC .)
    ULONG           reduce using rule 108 (StorageClass -> STATIC .)
    CHAR            reduce using rule 108 (StorageClass -> STATIC .)
    FLOAT           reduce using rule 108 (StorageClass -> STATIC .)
    VOID            reduce using rule 108 (StorageClass -> STATIC .)
    TYPEOF          reduce using rule 108 (StorageClass -> STATIC .)
    ALIAS           reduce using rule 108 (StorageClass -> STATIC .)
    CLASS           reduce using rule 108 (StorageClass -> STATIC .)
    UNION           reduce using rule 108 (StorageClass -> STATIC .)

  ! IMPORT          [ reduce using rule 108 (StorageClass -> STATIC .) ]


state 6

    (34) Declaration -> FuncDeclaration .

    AMPERSAND       reduce using rule 34 (Declaration -> FuncDeclaration .)
    PLUS_PLUS       reduce using rule 34 (Declaration -> FuncDeclaration .)
    MINUS_MINUS     reduce using rule 34 (Declaration -> FuncDeclaration .)
    TIMES           reduce using rule 34 (Declaration -> FuncDeclaration .)
    MINUS           reduce using rule 34 (Declaration -> FuncDeclaration .)
    PLUS            reduce using rule 34 (Declaration -> FuncDeclaration .)
    EXCLAMATION     reduce using rule 34 (Declaration -> FuncDeclaration .)
    LPAREN          reduce using rule 34 (Declaration -> FuncDeclaration .)
    TILDE           reduce using rule 34 (Declaration -> FuncDeclaration .)
    CAST            reduce using rule 34 (Declaration -> FuncDeclaration .)
    IDENTIFIER      reduce using rule 34 (Declaration -> FuncDeclaration .)
    DOT             reduce using rule 34 (Declaration -> FuncDeclaration .)
    THIS            reduce using rule 34 (Declaration -> FuncDeclaration .)
    NULL            reduce using rule 34 (Declaration -> FuncDeclaration .)
    TRUE            reduce using rule 34 (Declaration -> FuncDeclaration .)
    FALSE           reduce using rule 34 (Declaration -> FuncDeclaration .)
    DOLLAR          reduce using rule 34 (Declaration -> FuncDeclaration .)
    INUMBER         reduce using rule 34 (Declaration -> FuncDeclaration .)
    DNUMBER         reduce using rule 34 (Declaration -> FuncDeclaration .)
    LIT_CHAR        reduce using rule 34 (Declaration -> FuncDeclaration .)
    LIT_STR         reduce using rule 34 (Declaration -> FuncDeclaration .)
    LBRACKET        reduce using rule 34 (Declaration -> FuncDeclaration .)
    FUNCTION        reduce using rule 34 (Declaration -> FuncDeclaration .)
    MIXIN           reduce using rule 34 (Declaration -> FuncDeclaration .)
    IMPORT          reduce using rule 34 (Declaration -> FuncDeclaration .)
    NEW             reduce using rule 34 (Declaration -> FuncDeclaration .)
    BOOL            reduce using rule 34 (Declaration -> FuncDeclaration .)
    SHORT           reduce using rule 34 (Declaration -> FuncDeclaration .)
    USHORT          reduce using rule 34 (Declaration -> FuncDeclaration .)
    INT             reduce using rule 34 (Declaration -> FuncDeclaration .)
    UINT            reduce using rule 34 (Declaration -> FuncDeclaration .)
    LONG            reduce using rule 34 (Declaration -> FuncDeclaration .)
    ULONG           reduce using rule 34 (Declaration -> FuncDeclaration .)
    CHAR            reduce using rule 34 (Declaration -> FuncDeclaration .)
    FLOAT           reduce using rule 34 (Declaration -> FuncDeclaration .)
    VOID            reduce using rule 34 (Declaration -> FuncDeclaration .)
    TYPEOF          reduce using rule 34 (Declaration -> FuncDeclaration .)
    TYPEID          reduce using rule 34 (Declaration -> FuncDeclaration .)
    LBRACE          reduce using rule 34 (Declaration -> FuncDeclaration .)
    BODY            reduce using rule 34 (Declaration -> FuncDeclaration .)
    SEMICOLON       reduce using rule 34 (Declaration -> FuncDeclaration .)
    CASE            reduce using rule 34 (Declaration -> FuncDeclaration .)
    DEFAULT         reduce using rule 34 (Declaration -> FuncDeclaration .)
    IF              reduce using rule 34 (Declaration -> FuncDeclaration .)
    WHILE           reduce using rule 34 (Declaration -> FuncDeclaration .)
    DO              reduce using rule 34 (Declaration -> FuncDeclaration .)
    FOR             reduce using rule 34 (Declaration -> FuncDeclaration .)
    SWITCH          reduce using rule 34 (Declaration -> FuncDeclaration .)
    FINAL           reduce using rule 34 (Declaration -> FuncDeclaration .)
    CONTINUE        reduce using rule 34 (Declaration -> FuncDeclaration .)
    BREAK           reduce using rule 34 (Declaration -> FuncDeclaration .)
    RETURN          reduce using rule 34 (Declaration -> FuncDeclaration .)
    GOTO            reduce using rule 34 (Declaration -> FuncDeclaration .)
    WITH            reduce using rule 34 (Declaration -> FuncDeclaration .)
    STATIC          reduce using rule 34 (Declaration -> FuncDeclaration .)
    ALIAS           reduce using rule 34 (Declaration -> FuncDeclaration .)
    ENUM            reduce using rule 34 (Declaration -> FuncDeclaration .)
    EXTERN          reduce using rule 34 (Declaration -> FuncDeclaration .)
    AUTO            reduce using rule 34 (Declaration -> FuncDeclaration .)
    CONST           reduce using rule 34 (Declaration -> FuncDeclaration .)
    IMMUTABLE       reduce using rule 34 (Declaration -> FuncDeclaration .)
    FOREACH         reduce using rule 34 (Declaration -> FuncDeclaration .)
    FOREACH_REVERSE reduce using rule 34 (Declaration -> FuncDeclaration .)
    CLASS           reduce using rule 34 (Declaration -> FuncDeclaration .)
    UNION           reduce using rule 34 (Declaration -> FuncDeclaration .)
    RBRACE          reduce using rule 34 (Declaration -> FuncDeclaration .)
    DELETE          reduce using rule 34 (Declaration -> FuncDeclaration .)
    PRIVATE         reduce using rule 34 (Declaration -> FuncDeclaration .)
    PROTECTED       reduce using rule 34 (Declaration -> FuncDeclaration .)
    PUBLIC          reduce using rule 34 (Declaration -> FuncDeclaration .)
    ELSE            reduce using rule 34 (Declaration -> FuncDeclaration .)
    $end            reduce using rule 34 (Declaration -> FuncDeclaration .)


state 7

    (109) StorageClass -> EXTERN .

    ENUM            reduce using rule 109 (StorageClass -> EXTERN .)
    STATIC          reduce using rule 109 (StorageClass -> EXTERN .)
    EXTERN          reduce using rule 109 (StorageClass -> EXTERN .)
    FINAL           reduce using rule 109 (StorageClass -> EXTERN .)
    AUTO            reduce using rule 109 (StorageClass -> EXTERN .)
    CONST           reduce using rule 109 (StorageClass -> EXTERN .)
    IMMUTABLE       reduce using rule 109 (StorageClass -> EXTERN .)
    DOT             reduce using rule 109 (StorageClass -> EXTERN .)
    BOOL            reduce using rule 109 (StorageClass -> EXTERN .)
    SHORT           reduce using rule 109 (StorageClass -> EXTERN .)
    USHORT          reduce using rule 109 (StorageClass -> EXTERN .)
    INT             reduce using rule 109 (StorageClass -> EXTERN .)
    UINT            reduce using rule 109 (StorageClass -> EXTERN .)
    LONG            reduce using rule 109 (StorageClass -> EXTERN .)
    ULONG           reduce using rule 109 (StorageClass -> EXTERN .)
    CHAR            reduce using rule 109 (StorageClass -> EXTERN .)
    FLOAT           reduce using rule 109 (StorageClass -> EXTERN .)
    VOID            reduce using rule 109 (StorageClass -> EXTERN .)
    IDENTIFIER      reduce using rule 109 (StorageClass -> EXTERN .)
    TYPEOF          reduce using rule 109 (StorageClass -> EXTERN .)
    ALIAS           reduce using rule 109 (StorageClass -> EXTERN .)
    IMPORT          reduce using rule 109 (StorageClass -> EXTERN .)
    CLASS           reduce using rule 109 (StorageClass -> EXTERN .)
    UNION           reduce using rule 109 (StorageClass -> EXTERN .)


state 8

    (0) S' -> Declaration_mult .



state 9

    (439) FuncDeclaration -> StorageClasses_opt . BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> StorageClasses_opt . BasicType FuncDeclarator SEMICOLON
    (40) VarDeclarations -> StorageClasses_opt . BasicType Declarators SEMICOLON
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 36
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33

state 10

    (39) Declaration -> ImportDeclaration .

    SEMICOLON       reduce using rule 39 (Declaration -> ImportDeclaration .)
    NEW             reduce using rule 39 (Declaration -> ImportDeclaration .)
    DELETE          reduce using rule 39 (Declaration -> ImportDeclaration .)
    ALIAS           reduce using rule 39 (Declaration -> ImportDeclaration .)
    MIXIN           reduce using rule 39 (Declaration -> ImportDeclaration .)
    ENUM            reduce using rule 39 (Declaration -> ImportDeclaration .)
    IMPORT          reduce using rule 39 (Declaration -> ImportDeclaration .)
    STATIC          reduce using rule 39 (Declaration -> ImportDeclaration .)
    PRIVATE         reduce using rule 39 (Declaration -> ImportDeclaration .)
    PROTECTED       reduce using rule 39 (Declaration -> ImportDeclaration .)
    PUBLIC          reduce using rule 39 (Declaration -> ImportDeclaration .)
    CLASS           reduce using rule 39 (Declaration -> ImportDeclaration .)
    UNION           reduce using rule 39 (Declaration -> ImportDeclaration .)
    EXTERN          reduce using rule 39 (Declaration -> ImportDeclaration .)
    FINAL           reduce using rule 39 (Declaration -> ImportDeclaration .)
    AUTO            reduce using rule 39 (Declaration -> ImportDeclaration .)
    CONST           reduce using rule 39 (Declaration -> ImportDeclaration .)
    IMMUTABLE       reduce using rule 39 (Declaration -> ImportDeclaration .)
    DOT             reduce using rule 39 (Declaration -> ImportDeclaration .)
    BOOL            reduce using rule 39 (Declaration -> ImportDeclaration .)
    SHORT           reduce using rule 39 (Declaration -> ImportDeclaration .)
    USHORT          reduce using rule 39 (Declaration -> ImportDeclaration .)
    INT             reduce using rule 39 (Declaration -> ImportDeclaration .)
    UINT            reduce using rule 39 (Declaration -> ImportDeclaration .)
    LONG            reduce using rule 39 (Declaration -> ImportDeclaration .)
    ULONG           reduce using rule 39 (Declaration -> ImportDeclaration .)
    CHAR            reduce using rule 39 (Declaration -> ImportDeclaration .)
    FLOAT           reduce using rule 39 (Declaration -> ImportDeclaration .)
    VOID            reduce using rule 39 (Declaration -> ImportDeclaration .)
    IDENTIFIER      reduce using rule 39 (Declaration -> ImportDeclaration .)
    TYPEOF          reduce using rule 39 (Declaration -> ImportDeclaration .)
    RBRACE          reduce using rule 39 (Declaration -> ImportDeclaration .)
    CASE            reduce using rule 39 (Declaration -> ImportDeclaration .)
    DEFAULT         reduce using rule 39 (Declaration -> ImportDeclaration .)
    LBRACE          reduce using rule 39 (Declaration -> ImportDeclaration .)
    IF              reduce using rule 39 (Declaration -> ImportDeclaration .)
    WHILE           reduce using rule 39 (Declaration -> ImportDeclaration .)
    DO              reduce using rule 39 (Declaration -> ImportDeclaration .)
    FOR             reduce using rule 39 (Declaration -> ImportDeclaration .)
    SWITCH          reduce using rule 39 (Declaration -> ImportDeclaration .)
    CONTINUE        reduce using rule 39 (Declaration -> ImportDeclaration .)
    BREAK           reduce using rule 39 (Declaration -> ImportDeclaration .)
    RETURN          reduce using rule 39 (Declaration -> ImportDeclaration .)
    GOTO            reduce using rule 39 (Declaration -> ImportDeclaration .)
    WITH            reduce using rule 39 (Declaration -> ImportDeclaration .)
    LPAREN          reduce using rule 39 (Declaration -> ImportDeclaration .)
    FOREACH         reduce using rule 39 (Declaration -> ImportDeclaration .)
    FOREACH_REVERSE reduce using rule 39 (Declaration -> ImportDeclaration .)
    AMPERSAND       reduce using rule 39 (Declaration -> ImportDeclaration .)
    PLUS_PLUS       reduce using rule 39 (Declaration -> ImportDeclaration .)
    MINUS_MINUS     reduce using rule 39 (Declaration -> ImportDeclaration .)
    TIMES           reduce using rule 39 (Declaration -> ImportDeclaration .)
    MINUS           reduce using rule 39 (Declaration -> ImportDeclaration .)
    PLUS            reduce using rule 39 (Declaration -> ImportDeclaration .)
    EXCLAMATION     reduce using rule 39 (Declaration -> ImportDeclaration .)
    TILDE           reduce using rule 39 (Declaration -> ImportDeclaration .)
    CAST            reduce using rule 39 (Declaration -> ImportDeclaration .)
    THIS            reduce using rule 39 (Declaration -> ImportDeclaration .)
    NULL            reduce using rule 39 (Declaration -> ImportDeclaration .)
    TRUE            reduce using rule 39 (Declaration -> ImportDeclaration .)
    FALSE           reduce using rule 39 (Declaration -> ImportDeclaration .)
    DOLLAR          reduce using rule 39 (Declaration -> ImportDeclaration .)
    INUMBER         reduce using rule 39 (Declaration -> ImportDeclaration .)
    DNUMBER         reduce using rule 39 (Declaration -> ImportDeclaration .)
    LIT_CHAR        reduce using rule 39 (Declaration -> ImportDeclaration .)
    LIT_STR         reduce using rule 39 (Declaration -> ImportDeclaration .)
    LBRACKET        reduce using rule 39 (Declaration -> ImportDeclaration .)
    FUNCTION        reduce using rule 39 (Declaration -> ImportDeclaration .)
    TYPEID          reduce using rule 39 (Declaration -> ImportDeclaration .)
    BODY            reduce using rule 39 (Declaration -> ImportDeclaration .)
    ELSE            reduce using rule 39 (Declaration -> ImportDeclaration .)
    $end            reduce using rule 39 (Declaration -> ImportDeclaration .)


state 11

    (1) Declaration_mult -> Declaration . Declaration_mult
    (1) Declaration_mult -> . Declaration Declaration_mult
    (2) Declaration_mult -> . empty
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (477) empty -> .
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

    $end            reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 18
    IMPORT          shift and go to state 27
    STATIC          shift and go to state 5
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

    AggregateDeclaration           shift and go to state 4
    FuncDeclaration                shift and go to state 6
    Declaration_mult               shift and go to state 48
    StorageClasses_opt             shift and go to state 9
    ImportDeclaration              shift and go to state 10
    Declaration                    shift and go to state 11
    AliasDeclaration               shift and go to state 12
    ClassDeclaration               shift and go to state 26
    VarDeclarations                shift and go to state 23
    empty                          shift and go to state 14
    AutoFuncDeclaration            shift and go to state 16
    StorageClasses                 shift and go to state 1
    AnonymousEnumDeclaration       shift and go to state 20
    AnonUnionDeclaration           shift and go to state 22
    EnumDeclaration                shift and go to state 24
    UnionDeclaration               shift and go to state 25
    StorageClass                   shift and go to state 28

state 12

    (36) Declaration -> AliasDeclaration .

    AMPERSAND       reduce using rule 36 (Declaration -> AliasDeclaration .)
    PLUS_PLUS       reduce using rule 36 (Declaration -> AliasDeclaration .)
    MINUS_MINUS     reduce using rule 36 (Declaration -> AliasDeclaration .)
    TIMES           reduce using rule 36 (Declaration -> AliasDeclaration .)
    MINUS           reduce using rule 36 (Declaration -> AliasDeclaration .)
    PLUS            reduce using rule 36 (Declaration -> AliasDeclaration .)
    EXCLAMATION     reduce using rule 36 (Declaration -> AliasDeclaration .)
    LPAREN          reduce using rule 36 (Declaration -> AliasDeclaration .)
    TILDE           reduce using rule 36 (Declaration -> AliasDeclaration .)
    CAST            reduce using rule 36 (Declaration -> AliasDeclaration .)
    IDENTIFIER      reduce using rule 36 (Declaration -> AliasDeclaration .)
    DOT             reduce using rule 36 (Declaration -> AliasDeclaration .)
    THIS            reduce using rule 36 (Declaration -> AliasDeclaration .)
    NULL            reduce using rule 36 (Declaration -> AliasDeclaration .)
    TRUE            reduce using rule 36 (Declaration -> AliasDeclaration .)
    FALSE           reduce using rule 36 (Declaration -> AliasDeclaration .)
    DOLLAR          reduce using rule 36 (Declaration -> AliasDeclaration .)
    INUMBER         reduce using rule 36 (Declaration -> AliasDeclaration .)
    DNUMBER         reduce using rule 36 (Declaration -> AliasDeclaration .)
    LIT_CHAR        reduce using rule 36 (Declaration -> AliasDeclaration .)
    LIT_STR         reduce using rule 36 (Declaration -> AliasDeclaration .)
    LBRACKET        reduce using rule 36 (Declaration -> AliasDeclaration .)
    FUNCTION        reduce using rule 36 (Declaration -> AliasDeclaration .)
    MIXIN           reduce using rule 36 (Declaration -> AliasDeclaration .)
    IMPORT          reduce using rule 36 (Declaration -> AliasDeclaration .)
    NEW             reduce using rule 36 (Declaration -> AliasDeclaration .)
    BOOL            reduce using rule 36 (Declaration -> AliasDeclaration .)
    SHORT           reduce using rule 36 (Declaration -> AliasDeclaration .)
    USHORT          reduce using rule 36 (Declaration -> AliasDeclaration .)
    INT             reduce using rule 36 (Declaration -> AliasDeclaration .)
    UINT            reduce using rule 36 (Declaration -> AliasDeclaration .)
    LONG            reduce using rule 36 (Declaration -> AliasDeclaration .)
    ULONG           reduce using rule 36 (Declaration -> AliasDeclaration .)
    CHAR            reduce using rule 36 (Declaration -> AliasDeclaration .)
    FLOAT           reduce using rule 36 (Declaration -> AliasDeclaration .)
    VOID            reduce using rule 36 (Declaration -> AliasDeclaration .)
    TYPEOF          reduce using rule 36 (Declaration -> AliasDeclaration .)
    TYPEID          reduce using rule 36 (Declaration -> AliasDeclaration .)
    LBRACE          reduce using rule 36 (Declaration -> AliasDeclaration .)
    BODY            reduce using rule 36 (Declaration -> AliasDeclaration .)
    SEMICOLON       reduce using rule 36 (Declaration -> AliasDeclaration .)
    CASE            reduce using rule 36 (Declaration -> AliasDeclaration .)
    DEFAULT         reduce using rule 36 (Declaration -> AliasDeclaration .)
    IF              reduce using rule 36 (Declaration -> AliasDeclaration .)
    WHILE           reduce using rule 36 (Declaration -> AliasDeclaration .)
    DO              reduce using rule 36 (Declaration -> AliasDeclaration .)
    FOR             reduce using rule 36 (Declaration -> AliasDeclaration .)
    SWITCH          reduce using rule 36 (Declaration -> AliasDeclaration .)
    FINAL           reduce using rule 36 (Declaration -> AliasDeclaration .)
    CONTINUE        reduce using rule 36 (Declaration -> AliasDeclaration .)
    BREAK           reduce using rule 36 (Declaration -> AliasDeclaration .)
    RETURN          reduce using rule 36 (Declaration -> AliasDeclaration .)
    GOTO            reduce using rule 36 (Declaration -> AliasDeclaration .)
    WITH            reduce using rule 36 (Declaration -> AliasDeclaration .)
    STATIC          reduce using rule 36 (Declaration -> AliasDeclaration .)
    ALIAS           reduce using rule 36 (Declaration -> AliasDeclaration .)
    ENUM            reduce using rule 36 (Declaration -> AliasDeclaration .)
    EXTERN          reduce using rule 36 (Declaration -> AliasDeclaration .)
    AUTO            reduce using rule 36 (Declaration -> AliasDeclaration .)
    CONST           reduce using rule 36 (Declaration -> AliasDeclaration .)
    IMMUTABLE       reduce using rule 36 (Declaration -> AliasDeclaration .)
    FOREACH         reduce using rule 36 (Declaration -> AliasDeclaration .)
    FOREACH_REVERSE reduce using rule 36 (Declaration -> AliasDeclaration .)
    CLASS           reduce using rule 36 (Declaration -> AliasDeclaration .)
    UNION           reduce using rule 36 (Declaration -> AliasDeclaration .)
    RBRACE          reduce using rule 36 (Declaration -> AliasDeclaration .)
    DELETE          reduce using rule 36 (Declaration -> AliasDeclaration .)
    PRIVATE         reduce using rule 36 (Declaration -> AliasDeclaration .)
    PROTECTED       reduce using rule 36 (Declaration -> AliasDeclaration .)
    PUBLIC          reduce using rule 36 (Declaration -> AliasDeclaration .)
    ELSE            reduce using rule 36 (Declaration -> AliasDeclaration .)
    $end            reduce using rule 36 (Declaration -> AliasDeclaration .)


state 13

    (396) ClassDeclaration -> CLASS . IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> CLASS . IDENTIFIER BaseClassList_opt AggregateBody

    IDENTIFIER      shift and go to state 49


state 14

    (2) Declaration_mult -> empty .
    (132) StorageClasses_opt -> empty .

    $end            reduce using rule 2 (Declaration_mult -> empty .)
    DOT             reduce using rule 132 (StorageClasses_opt -> empty .)
    BOOL            reduce using rule 132 (StorageClasses_opt -> empty .)
    SHORT           reduce using rule 132 (StorageClasses_opt -> empty .)
    USHORT          reduce using rule 132 (StorageClasses_opt -> empty .)
    INT             reduce using rule 132 (StorageClasses_opt -> empty .)
    UINT            reduce using rule 132 (StorageClasses_opt -> empty .)
    LONG            reduce using rule 132 (StorageClasses_opt -> empty .)
    ULONG           reduce using rule 132 (StorageClasses_opt -> empty .)
    CHAR            reduce using rule 132 (StorageClasses_opt -> empty .)
    FLOAT           reduce using rule 132 (StorageClasses_opt -> empty .)
    VOID            reduce using rule 132 (StorageClasses_opt -> empty .)
    IDENTIFIER      reduce using rule 132 (StorageClasses_opt -> empty .)
    TYPEOF          reduce using rule 132 (StorageClasses_opt -> empty .)


state 15

    (110) StorageClass -> FINAL .

    ENUM            reduce using rule 110 (StorageClass -> FINAL .)
    STATIC          reduce using rule 110 (StorageClass -> FINAL .)
    EXTERN          reduce using rule 110 (StorageClass -> FINAL .)
    FINAL           reduce using rule 110 (StorageClass -> FINAL .)
    AUTO            reduce using rule 110 (StorageClass -> FINAL .)
    CONST           reduce using rule 110 (StorageClass -> FINAL .)
    IMMUTABLE       reduce using rule 110 (StorageClass -> FINAL .)
    DOT             reduce using rule 110 (StorageClass -> FINAL .)
    BOOL            reduce using rule 110 (StorageClass -> FINAL .)
    SHORT           reduce using rule 110 (StorageClass -> FINAL .)
    USHORT          reduce using rule 110 (StorageClass -> FINAL .)
    INT             reduce using rule 110 (StorageClass -> FINAL .)
    UINT            reduce using rule 110 (StorageClass -> FINAL .)
    LONG            reduce using rule 110 (StorageClass -> FINAL .)
    ULONG           reduce using rule 110 (StorageClass -> FINAL .)
    CHAR            reduce using rule 110 (StorageClass -> FINAL .)
    FLOAT           reduce using rule 110 (StorageClass -> FINAL .)
    VOID            reduce using rule 110 (StorageClass -> FINAL .)
    IDENTIFIER      reduce using rule 110 (StorageClass -> FINAL .)
    TYPEOF          reduce using rule 110 (StorageClass -> FINAL .)
    ALIAS           reduce using rule 110 (StorageClass -> FINAL .)
    IMPORT          reduce using rule 110 (StorageClass -> FINAL .)
    CLASS           reduce using rule 110 (StorageClass -> FINAL .)
    UNION           reduce using rule 110 (StorageClass -> FINAL .)


state 16

    (441) FuncDeclaration -> AutoFuncDeclaration .

    SEMICOLON       reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    CASE            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    DEFAULT         reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    LBRACE          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    IDENTIFIER      reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    IF              reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    WHILE           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    DO              reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    FOR             reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    SWITCH          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    FINAL           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    CONTINUE        reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    BREAK           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    RETURN          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    GOTO            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    WITH            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    MIXIN           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    IMPORT          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    STATIC          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    LPAREN          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    ALIAS           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    ENUM            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    EXTERN          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    AUTO            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    CONST           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    IMMUTABLE       reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    FOREACH         reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    FOREACH_REVERSE reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    CLASS           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    UNION           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    AMPERSAND       reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    PLUS_PLUS       reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    MINUS_MINUS     reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    TIMES           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    MINUS           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    PLUS            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    EXCLAMATION     reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    TILDE           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    CAST            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    DOT             reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    THIS            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    NULL            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    TRUE            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    FALSE           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    DOLLAR          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    INUMBER         reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    DNUMBER         reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    LIT_CHAR        reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    LIT_STR         reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    LBRACKET        reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    FUNCTION        reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    NEW             reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    BOOL            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    SHORT           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    USHORT          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    INT             reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    UINT            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    LONG            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    ULONG           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    CHAR            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    FLOAT           reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    VOID            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    TYPEOF          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    TYPEID          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    BODY            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    RBRACE          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    ELSE            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    DELETE          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    PRIVATE         reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    PROTECTED       reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    PUBLIC          reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)
    $end            reduce using rule 441 (FuncDeclaration -> AutoFuncDeclaration .)


state 17

    (391) UnionDeclaration -> UNION . IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> UNION . IDENTIFIER AggregateBody
    (394) AnonUnionDeclaration -> UNION . AggregateBody
    (395) AggregateBody -> . LBRACE DeclDefs_opt RBRACE

    IDENTIFIER      shift and go to state 52
    LBRACE          shift and go to state 50

    AggregateBody                  shift and go to state 51

state 18

    (420) EnumDeclaration -> ENUM . IDENTIFIER EnumBody
    (421) EnumDeclaration -> ENUM . IDENTIFIER COLON EnumBaseType EnumBody
    (431) AnonymousEnumDeclaration -> ENUM . COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> ENUM . LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> ENUM . LBRACE AnonymousEnumMembers RBRACE
    (107) StorageClass -> ENUM .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 55
    COLON           shift and go to state 54
    LBRACE          shift and go to state 53
    ENUM            reduce using rule 107 (StorageClass -> ENUM .)
    STATIC          reduce using rule 107 (StorageClass -> ENUM .)
    EXTERN          reduce using rule 107 (StorageClass -> ENUM .)
    FINAL           reduce using rule 107 (StorageClass -> ENUM .)
    AUTO            reduce using rule 107 (StorageClass -> ENUM .)
    CONST           reduce using rule 107 (StorageClass -> ENUM .)
    IMMUTABLE       reduce using rule 107 (StorageClass -> ENUM .)
    DOT             reduce using rule 107 (StorageClass -> ENUM .)
    BOOL            reduce using rule 107 (StorageClass -> ENUM .)
    SHORT           reduce using rule 107 (StorageClass -> ENUM .)
    USHORT          reduce using rule 107 (StorageClass -> ENUM .)
    INT             reduce using rule 107 (StorageClass -> ENUM .)
    UINT            reduce using rule 107 (StorageClass -> ENUM .)
    LONG            reduce using rule 107 (StorageClass -> ENUM .)
    ULONG           reduce using rule 107 (StorageClass -> ENUM .)
    CHAR            reduce using rule 107 (StorageClass -> ENUM .)
    FLOAT           reduce using rule 107 (StorageClass -> ENUM .)
    VOID            reduce using rule 107 (StorageClass -> ENUM .)
    TYPEOF          reduce using rule 107 (StorageClass -> ENUM .)

  ! IDENTIFIER      [ reduce using rule 107 (StorageClass -> ENUM .) ]


state 19

    (133) AliasDeclaration -> ALIAS . StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> ALIAS . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> ALIAS . AliasDeclarationX SEMICOLON
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (136) AliasDeclarationX -> . AliasDeclarationY
    (137) AliasDeclarationX -> . AliasDeclarationX COMMA AliasDeclarationY
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (477) empty -> .
    (138) AliasDeclarationY -> . IDENTIFIER ASSIGN StorageClasses_opt Type
    (139) AliasDeclarationY -> . IDENTIFIER ASSIGN FunctionLiteral
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ENUM            shift and go to state 63
    STATIC          shift and go to state 56
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

  ! IDENTIFIER      [ shift and go to state 61 ]

    AliasDeclarationY              shift and go to state 58
    AliasDeclarationX              shift and go to state 59
    StorageClass                   shift and go to state 28
    StorageClasses                 shift and go to state 60
    StorageClasses_opt             shift and go to state 57
    empty                          shift and go to state 62

state 20

    (422) EnumDeclaration -> AnonymousEnumDeclaration .

    SEMICOLON       reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    CASE            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    DEFAULT         reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    LBRACE          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    IDENTIFIER      reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    IF              reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    WHILE           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    DO              reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    FOR             reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    SWITCH          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    FINAL           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    CONTINUE        reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    BREAK           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    RETURN          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    GOTO            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    WITH            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    MIXIN           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    IMPORT          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    STATIC          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    LPAREN          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    ALIAS           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    ENUM            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    EXTERN          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    AUTO            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    CONST           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    IMMUTABLE       reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    FOREACH         reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    FOREACH_REVERSE reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    CLASS           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    UNION           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    AMPERSAND       reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    PLUS_PLUS       reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    MINUS_MINUS     reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    TIMES           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    MINUS           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    PLUS            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    EXCLAMATION     reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    TILDE           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    CAST            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    DOT             reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    THIS            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    NULL            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    TRUE            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    FALSE           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    DOLLAR          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    INUMBER         reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    DNUMBER         reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    LIT_CHAR        reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    LIT_STR         reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    LBRACKET        reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    FUNCTION        reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    NEW             reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    BOOL            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    SHORT           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    USHORT          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    INT             reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    UINT            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    LONG            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    ULONG           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    CHAR            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    FLOAT           reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    VOID            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    TYPEOF          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    TYPEID          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    BODY            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    RBRACE          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    DELETE          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    PRIVATE         reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    PROTECTED       reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    PUBLIC          reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    ELSE            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)
    $end            reduce using rule 422 (EnumDeclaration -> AnonymousEnumDeclaration .)


state 21

    (113) StorageClass -> IMMUTABLE .

    ENUM            reduce using rule 113 (StorageClass -> IMMUTABLE .)
    STATIC          reduce using rule 113 (StorageClass -> IMMUTABLE .)
    EXTERN          reduce using rule 113 (StorageClass -> IMMUTABLE .)
    FINAL           reduce using rule 113 (StorageClass -> IMMUTABLE .)
    AUTO            reduce using rule 113 (StorageClass -> IMMUTABLE .)
    CONST           reduce using rule 113 (StorageClass -> IMMUTABLE .)
    IMMUTABLE       reduce using rule 113 (StorageClass -> IMMUTABLE .)
    DOT             reduce using rule 113 (StorageClass -> IMMUTABLE .)
    BOOL            reduce using rule 113 (StorageClass -> IMMUTABLE .)
    SHORT           reduce using rule 113 (StorageClass -> IMMUTABLE .)
    USHORT          reduce using rule 113 (StorageClass -> IMMUTABLE .)
    INT             reduce using rule 113 (StorageClass -> IMMUTABLE .)
    UINT            reduce using rule 113 (StorageClass -> IMMUTABLE .)
    LONG            reduce using rule 113 (StorageClass -> IMMUTABLE .)
    ULONG           reduce using rule 113 (StorageClass -> IMMUTABLE .)
    CHAR            reduce using rule 113 (StorageClass -> IMMUTABLE .)
    FLOAT           reduce using rule 113 (StorageClass -> IMMUTABLE .)
    VOID            reduce using rule 113 (StorageClass -> IMMUTABLE .)
    IDENTIFIER      reduce using rule 113 (StorageClass -> IMMUTABLE .)
    TYPEOF          reduce using rule 113 (StorageClass -> IMMUTABLE .)
    ALIAS           reduce using rule 113 (StorageClass -> IMMUTABLE .)
    IMPORT          reduce using rule 113 (StorageClass -> IMMUTABLE .)
    CLASS           reduce using rule 113 (StorageClass -> IMMUTABLE .)
    UNION           reduce using rule 113 (StorageClass -> IMMUTABLE .)


state 22

    (393) UnionDeclaration -> AnonUnionDeclaration .

    ALIAS           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    ENUM            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    IMPORT          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    STATIC          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    CLASS           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    UNION           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    EXTERN          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    FINAL           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    AUTO            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    CONST           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    IMMUTABLE       reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    DOT             reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    BOOL            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    SHORT           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    USHORT          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    INT             reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    UINT            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    LONG            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    ULONG           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    CHAR            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    FLOAT           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    VOID            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    IDENTIFIER      reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    TYPEOF          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    $end            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    SEMICOLON       reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    CASE            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    DEFAULT         reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    LBRACE          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    IF              reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    WHILE           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    DO              reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    FOR             reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    SWITCH          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    CONTINUE        reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    BREAK           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    RETURN          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    GOTO            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    WITH            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    MIXIN           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    LPAREN          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    FOREACH         reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    FOREACH_REVERSE reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    AMPERSAND       reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    PLUS_PLUS       reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    MINUS_MINUS     reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    TIMES           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    MINUS           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    PLUS            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    EXCLAMATION     reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    TILDE           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    CAST            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    THIS            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    NULL            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    TRUE            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    FALSE           reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    DOLLAR          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    INUMBER         reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    DNUMBER         reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    LIT_CHAR        reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    LIT_STR         reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    LBRACKET        reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    FUNCTION        reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    NEW             reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    TYPEID          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    BODY            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    RBRACE          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    ELSE            reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    DELETE          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    PRIVATE         reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    PROTECTED       reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)
    PUBLIC          reduce using rule 393 (UnionDeclaration -> AnonUnionDeclaration .)


state 23

    (35) Declaration -> VarDeclarations .

    AMPERSAND       reduce using rule 35 (Declaration -> VarDeclarations .)
    PLUS_PLUS       reduce using rule 35 (Declaration -> VarDeclarations .)
    MINUS_MINUS     reduce using rule 35 (Declaration -> VarDeclarations .)
    TIMES           reduce using rule 35 (Declaration -> VarDeclarations .)
    MINUS           reduce using rule 35 (Declaration -> VarDeclarations .)
    PLUS            reduce using rule 35 (Declaration -> VarDeclarations .)
    EXCLAMATION     reduce using rule 35 (Declaration -> VarDeclarations .)
    LPAREN          reduce using rule 35 (Declaration -> VarDeclarations .)
    TILDE           reduce using rule 35 (Declaration -> VarDeclarations .)
    CAST            reduce using rule 35 (Declaration -> VarDeclarations .)
    IDENTIFIER      reduce using rule 35 (Declaration -> VarDeclarations .)
    DOT             reduce using rule 35 (Declaration -> VarDeclarations .)
    THIS            reduce using rule 35 (Declaration -> VarDeclarations .)
    NULL            reduce using rule 35 (Declaration -> VarDeclarations .)
    TRUE            reduce using rule 35 (Declaration -> VarDeclarations .)
    FALSE           reduce using rule 35 (Declaration -> VarDeclarations .)
    DOLLAR          reduce using rule 35 (Declaration -> VarDeclarations .)
    INUMBER         reduce using rule 35 (Declaration -> VarDeclarations .)
    DNUMBER         reduce using rule 35 (Declaration -> VarDeclarations .)
    LIT_CHAR        reduce using rule 35 (Declaration -> VarDeclarations .)
    LIT_STR         reduce using rule 35 (Declaration -> VarDeclarations .)
    LBRACKET        reduce using rule 35 (Declaration -> VarDeclarations .)
    FUNCTION        reduce using rule 35 (Declaration -> VarDeclarations .)
    MIXIN           reduce using rule 35 (Declaration -> VarDeclarations .)
    IMPORT          reduce using rule 35 (Declaration -> VarDeclarations .)
    NEW             reduce using rule 35 (Declaration -> VarDeclarations .)
    BOOL            reduce using rule 35 (Declaration -> VarDeclarations .)
    SHORT           reduce using rule 35 (Declaration -> VarDeclarations .)
    USHORT          reduce using rule 35 (Declaration -> VarDeclarations .)
    INT             reduce using rule 35 (Declaration -> VarDeclarations .)
    UINT            reduce using rule 35 (Declaration -> VarDeclarations .)
    LONG            reduce using rule 35 (Declaration -> VarDeclarations .)
    ULONG           reduce using rule 35 (Declaration -> VarDeclarations .)
    CHAR            reduce using rule 35 (Declaration -> VarDeclarations .)
    FLOAT           reduce using rule 35 (Declaration -> VarDeclarations .)
    VOID            reduce using rule 35 (Declaration -> VarDeclarations .)
    TYPEOF          reduce using rule 35 (Declaration -> VarDeclarations .)
    TYPEID          reduce using rule 35 (Declaration -> VarDeclarations .)
    LBRACE          reduce using rule 35 (Declaration -> VarDeclarations .)
    BODY            reduce using rule 35 (Declaration -> VarDeclarations .)
    SEMICOLON       reduce using rule 35 (Declaration -> VarDeclarations .)
    CASE            reduce using rule 35 (Declaration -> VarDeclarations .)
    DEFAULT         reduce using rule 35 (Declaration -> VarDeclarations .)
    IF              reduce using rule 35 (Declaration -> VarDeclarations .)
    WHILE           reduce using rule 35 (Declaration -> VarDeclarations .)
    DO              reduce using rule 35 (Declaration -> VarDeclarations .)
    FOR             reduce using rule 35 (Declaration -> VarDeclarations .)
    SWITCH          reduce using rule 35 (Declaration -> VarDeclarations .)
    FINAL           reduce using rule 35 (Declaration -> VarDeclarations .)
    CONTINUE        reduce using rule 35 (Declaration -> VarDeclarations .)
    BREAK           reduce using rule 35 (Declaration -> VarDeclarations .)
    RETURN          reduce using rule 35 (Declaration -> VarDeclarations .)
    GOTO            reduce using rule 35 (Declaration -> VarDeclarations .)
    WITH            reduce using rule 35 (Declaration -> VarDeclarations .)
    STATIC          reduce using rule 35 (Declaration -> VarDeclarations .)
    ALIAS           reduce using rule 35 (Declaration -> VarDeclarations .)
    ENUM            reduce using rule 35 (Declaration -> VarDeclarations .)
    EXTERN          reduce using rule 35 (Declaration -> VarDeclarations .)
    AUTO            reduce using rule 35 (Declaration -> VarDeclarations .)
    CONST           reduce using rule 35 (Declaration -> VarDeclarations .)
    IMMUTABLE       reduce using rule 35 (Declaration -> VarDeclarations .)
    FOREACH         reduce using rule 35 (Declaration -> VarDeclarations .)
    FOREACH_REVERSE reduce using rule 35 (Declaration -> VarDeclarations .)
    CLASS           reduce using rule 35 (Declaration -> VarDeclarations .)
    UNION           reduce using rule 35 (Declaration -> VarDeclarations .)
    RBRACE          reduce using rule 35 (Declaration -> VarDeclarations .)
    DELETE          reduce using rule 35 (Declaration -> VarDeclarations .)
    PRIVATE         reduce using rule 35 (Declaration -> VarDeclarations .)
    PROTECTED       reduce using rule 35 (Declaration -> VarDeclarations .)
    PUBLIC          reduce using rule 35 (Declaration -> VarDeclarations .)
    ELSE            reduce using rule 35 (Declaration -> VarDeclarations .)
    $end            reduce using rule 35 (Declaration -> VarDeclarations .)


state 24

    (38) Declaration -> EnumDeclaration .

    AMPERSAND       reduce using rule 38 (Declaration -> EnumDeclaration .)
    PLUS_PLUS       reduce using rule 38 (Declaration -> EnumDeclaration .)
    MINUS_MINUS     reduce using rule 38 (Declaration -> EnumDeclaration .)
    TIMES           reduce using rule 38 (Declaration -> EnumDeclaration .)
    MINUS           reduce using rule 38 (Declaration -> EnumDeclaration .)
    PLUS            reduce using rule 38 (Declaration -> EnumDeclaration .)
    EXCLAMATION     reduce using rule 38 (Declaration -> EnumDeclaration .)
    LPAREN          reduce using rule 38 (Declaration -> EnumDeclaration .)
    TILDE           reduce using rule 38 (Declaration -> EnumDeclaration .)
    CAST            reduce using rule 38 (Declaration -> EnumDeclaration .)
    IDENTIFIER      reduce using rule 38 (Declaration -> EnumDeclaration .)
    DOT             reduce using rule 38 (Declaration -> EnumDeclaration .)
    THIS            reduce using rule 38 (Declaration -> EnumDeclaration .)
    NULL            reduce using rule 38 (Declaration -> EnumDeclaration .)
    TRUE            reduce using rule 38 (Declaration -> EnumDeclaration .)
    FALSE           reduce using rule 38 (Declaration -> EnumDeclaration .)
    DOLLAR          reduce using rule 38 (Declaration -> EnumDeclaration .)
    INUMBER         reduce using rule 38 (Declaration -> EnumDeclaration .)
    DNUMBER         reduce using rule 38 (Declaration -> EnumDeclaration .)
    LIT_CHAR        reduce using rule 38 (Declaration -> EnumDeclaration .)
    LIT_STR         reduce using rule 38 (Declaration -> EnumDeclaration .)
    LBRACKET        reduce using rule 38 (Declaration -> EnumDeclaration .)
    FUNCTION        reduce using rule 38 (Declaration -> EnumDeclaration .)
    MIXIN           reduce using rule 38 (Declaration -> EnumDeclaration .)
    IMPORT          reduce using rule 38 (Declaration -> EnumDeclaration .)
    NEW             reduce using rule 38 (Declaration -> EnumDeclaration .)
    BOOL            reduce using rule 38 (Declaration -> EnumDeclaration .)
    SHORT           reduce using rule 38 (Declaration -> EnumDeclaration .)
    USHORT          reduce using rule 38 (Declaration -> EnumDeclaration .)
    INT             reduce using rule 38 (Declaration -> EnumDeclaration .)
    UINT            reduce using rule 38 (Declaration -> EnumDeclaration .)
    LONG            reduce using rule 38 (Declaration -> EnumDeclaration .)
    ULONG           reduce using rule 38 (Declaration -> EnumDeclaration .)
    CHAR            reduce using rule 38 (Declaration -> EnumDeclaration .)
    FLOAT           reduce using rule 38 (Declaration -> EnumDeclaration .)
    VOID            reduce using rule 38 (Declaration -> EnumDeclaration .)
    TYPEOF          reduce using rule 38 (Declaration -> EnumDeclaration .)
    TYPEID          reduce using rule 38 (Declaration -> EnumDeclaration .)
    LBRACE          reduce using rule 38 (Declaration -> EnumDeclaration .)
    BODY            reduce using rule 38 (Declaration -> EnumDeclaration .)
    SEMICOLON       reduce using rule 38 (Declaration -> EnumDeclaration .)
    CASE            reduce using rule 38 (Declaration -> EnumDeclaration .)
    DEFAULT         reduce using rule 38 (Declaration -> EnumDeclaration .)
    IF              reduce using rule 38 (Declaration -> EnumDeclaration .)
    WHILE           reduce using rule 38 (Declaration -> EnumDeclaration .)
    DO              reduce using rule 38 (Declaration -> EnumDeclaration .)
    FOR             reduce using rule 38 (Declaration -> EnumDeclaration .)
    SWITCH          reduce using rule 38 (Declaration -> EnumDeclaration .)
    FINAL           reduce using rule 38 (Declaration -> EnumDeclaration .)
    CONTINUE        reduce using rule 38 (Declaration -> EnumDeclaration .)
    BREAK           reduce using rule 38 (Declaration -> EnumDeclaration .)
    RETURN          reduce using rule 38 (Declaration -> EnumDeclaration .)
    GOTO            reduce using rule 38 (Declaration -> EnumDeclaration .)
    WITH            reduce using rule 38 (Declaration -> EnumDeclaration .)
    STATIC          reduce using rule 38 (Declaration -> EnumDeclaration .)
    ALIAS           reduce using rule 38 (Declaration -> EnumDeclaration .)
    ENUM            reduce using rule 38 (Declaration -> EnumDeclaration .)
    EXTERN          reduce using rule 38 (Declaration -> EnumDeclaration .)
    AUTO            reduce using rule 38 (Declaration -> EnumDeclaration .)
    CONST           reduce using rule 38 (Declaration -> EnumDeclaration .)
    IMMUTABLE       reduce using rule 38 (Declaration -> EnumDeclaration .)
    FOREACH         reduce using rule 38 (Declaration -> EnumDeclaration .)
    FOREACH_REVERSE reduce using rule 38 (Declaration -> EnumDeclaration .)
    CLASS           reduce using rule 38 (Declaration -> EnumDeclaration .)
    UNION           reduce using rule 38 (Declaration -> EnumDeclaration .)
    RBRACE          reduce using rule 38 (Declaration -> EnumDeclaration .)
    DELETE          reduce using rule 38 (Declaration -> EnumDeclaration .)
    PRIVATE         reduce using rule 38 (Declaration -> EnumDeclaration .)
    PROTECTED       reduce using rule 38 (Declaration -> EnumDeclaration .)
    PUBLIC          reduce using rule 38 (Declaration -> EnumDeclaration .)
    ELSE            reduce using rule 38 (Declaration -> EnumDeclaration .)
    $end            reduce using rule 38 (Declaration -> EnumDeclaration .)


state 25

    (390) AggregateDeclaration -> UnionDeclaration .

    SEMICOLON       reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    NEW             reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    DELETE          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    ALIAS           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    MIXIN           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    ENUM            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    IMPORT          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    STATIC          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    PRIVATE         reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    PROTECTED       reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    PUBLIC          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    CLASS           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    UNION           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    EXTERN          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    FINAL           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    AUTO            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    CONST           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    IMMUTABLE       reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    DOT             reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    BOOL            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    SHORT           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    USHORT          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    INT             reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    UINT            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    LONG            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    ULONG           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    CHAR            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    FLOAT           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    VOID            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    IDENTIFIER      reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    TYPEOF          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    RBRACE          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    WHILE           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    CASE            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    DEFAULT         reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    LBRACE          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    IF              reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    DO              reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    FOR             reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    SWITCH          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    CONTINUE        reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    BREAK           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    RETURN          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    GOTO            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    WITH            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    LPAREN          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    FOREACH         reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    FOREACH_REVERSE reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    AMPERSAND       reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    PLUS_PLUS       reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    MINUS_MINUS     reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    TIMES           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    MINUS           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    PLUS            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    EXCLAMATION     reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    TILDE           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    CAST            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    THIS            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    NULL            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    TRUE            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    FALSE           reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    DOLLAR          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    INUMBER         reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    DNUMBER         reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    LIT_CHAR        reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    LIT_STR         reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    LBRACKET        reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    FUNCTION        reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    TYPEID          reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    BODY            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    ELSE            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)
    $end            reduce using rule 390 (AggregateDeclaration -> UnionDeclaration .)


state 26

    (389) AggregateDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    NEW             reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    DELETE          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    ALIAS           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    MIXIN           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    IMPORT          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    UNION           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    EXTERN          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    AUTO            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    CONST           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    IMMUTABLE       reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    DOT             reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    BOOL            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    SHORT           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    USHORT          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    INT             reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    UINT            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    LONG            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    ULONG           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    CHAR            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    FLOAT           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    VOID            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    IDENTIFIER      reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    TYPEOF          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    RBRACE          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    WHILE           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    CASE            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    DEFAULT         reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    IF              reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    DO              reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    FOR             reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    SWITCH          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    CONTINUE        reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    BREAK           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    RETURN          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    GOTO            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    WITH            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    LPAREN          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    FOREACH         reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    FOREACH_REVERSE reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    AMPERSAND       reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    PLUS_PLUS       reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    MINUS_MINUS     reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    TIMES           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    MINUS           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    PLUS            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    EXCLAMATION     reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    TILDE           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    CAST            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    THIS            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    NULL            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    TRUE            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    FALSE           reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    DOLLAR          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    INUMBER         reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    DNUMBER         reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    LIT_CHAR        reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    LIT_STR         reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    LBRACKET        reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    FUNCTION        reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    TYPEID          reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    BODY            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    ELSE            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)
    $end            reduce using rule 389 (AggregateDeclaration -> ClassDeclaration .)


state 27

    (20) ImportDeclaration -> IMPORT . ImportList SEMICOLON
    (22) ImportList -> . Import
    (23) ImportList -> . ImportBindings
    (24) ImportList -> . Import COMMA ImportList
    (25) Import -> . ModuleFullyQualifiedName
    (26) Import -> . ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName
    (27) ImportBindings -> . Import COLON ImportBindList
    (14) ModuleFullyQualifiedName -> . ModuleName
    (15) ModuleFullyQualifiedName -> . Packages DOT ModuleName
    (32) ModuleAliasIdentifier -> . IDENTIFIER
    (16) ModuleName -> . IDENTIFIER
    (17) Packages -> . PackageName
    (18) Packages -> . Packages DOT PackageName
    (19) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 69

    ModuleFullyQualifiedName       shift and go to state 64
    ImportBindings                 shift and go to state 65
    ModuleAliasIdentifier          shift and go to state 66
    ImportList                     shift and go to state 67
    PackageName                    shift and go to state 68
    ModuleName                     shift and go to state 72
    Import                         shift and go to state 70
    Packages                       shift and go to state 71

state 28

    (105) StorageClasses -> StorageClass .
    (106) StorageClasses -> StorageClass . StorageClasses
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for EXTERN resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for IMMUTABLE resolved as shift
    IDENTIFIER      reduce using rule 105 (StorageClasses -> StorageClass .)
    ALIAS           reduce using rule 105 (StorageClasses -> StorageClass .)
    IMPORT          reduce using rule 105 (StorageClasses -> StorageClass .)
    CLASS           reduce using rule 105 (StorageClasses -> StorageClass .)
    UNION           reduce using rule 105 (StorageClasses -> StorageClass .)
    DOT             reduce using rule 105 (StorageClasses -> StorageClass .)
    BOOL            reduce using rule 105 (StorageClasses -> StorageClass .)
    SHORT           reduce using rule 105 (StorageClasses -> StorageClass .)
    USHORT          reduce using rule 105 (StorageClasses -> StorageClass .)
    INT             reduce using rule 105 (StorageClasses -> StorageClass .)
    UINT            reduce using rule 105 (StorageClasses -> StorageClass .)
    LONG            reduce using rule 105 (StorageClasses -> StorageClass .)
    ULONG           reduce using rule 105 (StorageClasses -> StorageClass .)
    CHAR            reduce using rule 105 (StorageClasses -> StorageClass .)
    FLOAT           reduce using rule 105 (StorageClasses -> StorageClass .)
    VOID            reduce using rule 105 (StorageClasses -> StorageClass .)
    TYPEOF          reduce using rule 105 (StorageClasses -> StorageClass .)
    ENUM            shift and go to state 63
    STATIC          shift and go to state 56
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

  ! ENUM            [ reduce using rule 105 (StorageClasses -> StorageClass .) ]
  ! STATIC          [ reduce using rule 105 (StorageClasses -> StorageClass .) ]
  ! EXTERN          [ reduce using rule 105 (StorageClasses -> StorageClass .) ]
  ! FINAL           [ reduce using rule 105 (StorageClasses -> StorageClass .) ]
  ! AUTO            [ reduce using rule 105 (StorageClasses -> StorageClass .) ]
  ! CONST           [ reduce using rule 105 (StorageClasses -> StorageClass .) ]
  ! IMMUTABLE       [ reduce using rule 105 (StorageClasses -> StorageClass .) ]

    StorageClass                   shift and go to state 28
    StorageClasses                 shift and go to state 73

state 29

    (442) AutoFuncDeclaration -> StorageClasses IDENTIFIER . FuncDeclaratorSuffix FunctionBody
    (444) FuncDeclaratorSuffix -> . Parameters MemberFunctionAttributes_opt
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN

    LPAREN          shift and go to state 76

    FuncDeclaratorSuffix           shift and go to state 74
    Parameters                     shift and go to state 75

state 30

    (21) ImportDeclaration -> STATIC IMPORT . ImportList SEMICOLON
    (22) ImportList -> . Import
    (23) ImportList -> . ImportBindings
    (24) ImportList -> . Import COMMA ImportList
    (25) Import -> . ModuleFullyQualifiedName
    (26) Import -> . ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName
    (27) ImportBindings -> . Import COLON ImportBindList
    (14) ModuleFullyQualifiedName -> . ModuleName
    (15) ModuleFullyQualifiedName -> . Packages DOT ModuleName
    (32) ModuleAliasIdentifier -> . IDENTIFIER
    (16) ModuleName -> . IDENTIFIER
    (17) Packages -> . PackageName
    (18) Packages -> . Packages DOT PackageName
    (19) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 69

    ModuleFullyQualifiedName       shift and go to state 64
    ImportBindings                 shift and go to state 65
    ModuleAliasIdentifier          shift and go to state 66
    ImportList                     shift and go to state 77
    PackageName                    shift and go to state 68
    ModuleName                     shift and go to state 72
    Import                         shift and go to state 70
    Packages                       shift and go to state 71

state 31

    (84) BasicTypeX -> SHORT .

    DOT             reduce using rule 84 (BasicTypeX -> SHORT .)
    LPAREN          reduce using rule 84 (BasicTypeX -> SHORT .)
    COMMA           reduce using rule 84 (BasicTypeX -> SHORT .)
    LBRACE          reduce using rule 84 (BasicTypeX -> SHORT .)
    TIMES           reduce using rule 84 (BasicTypeX -> SHORT .)
    LBRACKET        reduce using rule 84 (BasicTypeX -> SHORT .)
    FUNCTION        reduce using rule 84 (BasicTypeX -> SHORT .)
    IDENTIFIER      reduce using rule 84 (BasicTypeX -> SHORT .)
    POWER           reduce using rule 84 (BasicTypeX -> SHORT .)
    PLUS_PLUS       reduce using rule 84 (BasicTypeX -> SHORT .)
    MINUS_MINUS     reduce using rule 84 (BasicTypeX -> SHORT .)
    DIV             reduce using rule 84 (BasicTypeX -> SHORT .)
    MODULO          reduce using rule 84 (BasicTypeX -> SHORT .)
    PLUS            reduce using rule 84 (BasicTypeX -> SHORT .)
    MINUS           reduce using rule 84 (BasicTypeX -> SHORT .)
    LEFT_SHIFT      reduce using rule 84 (BasicTypeX -> SHORT .)
    RIGHT_SHIFT     reduce using rule 84 (BasicTypeX -> SHORT .)
    IS_EQ           reduce using rule 84 (BasicTypeX -> SHORT .)
    NOT_EQ          reduce using rule 84 (BasicTypeX -> SHORT .)
    LESS            reduce using rule 84 (BasicTypeX -> SHORT .)
    GREATER_EQ      reduce using rule 84 (BasicTypeX -> SHORT .)
    GREATER         reduce using rule 84 (BasicTypeX -> SHORT .)
    LESS_EQ         reduce using rule 84 (BasicTypeX -> SHORT .)
    AMPERSAND       reduce using rule 84 (BasicTypeX -> SHORT .)
    CARET           reduce using rule 84 (BasicTypeX -> SHORT .)
    PIPE            reduce using rule 84 (BasicTypeX -> SHORT .)
    DOUBLE_AMPERSAND reduce using rule 84 (BasicTypeX -> SHORT .)
    QUESTION        reduce using rule 84 (BasicTypeX -> SHORT .)
    DOUBLE_PIPE     reduce using rule 84 (BasicTypeX -> SHORT .)
    ASSIGN          reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_PLUS         reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_MINUS        reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_TIMES        reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_DIV          reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_MODULO       reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_AND_BIT      reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_OR_BIT       reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_XOR_BIT      reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_LEFT         reduce using rule 84 (BasicTypeX -> SHORT .)
    EQ_RIGHT        reduce using rule 84 (BasicTypeX -> SHORT .)
    RBRACKET        reduce using rule 84 (BasicTypeX -> SHORT .)
    RANGE           reduce using rule 84 (BasicTypeX -> SHORT .)
    RPAREN          reduce using rule 84 (BasicTypeX -> SHORT .)
    SEMICOLON       reduce using rule 84 (BasicTypeX -> SHORT .)
    RBRACE          reduce using rule 84 (BasicTypeX -> SHORT .)
    COLON           reduce using rule 84 (BasicTypeX -> SHORT .)
    ELLIPSIS        reduce using rule 84 (BasicTypeX -> SHORT .)
    BOOL            reduce using rule 84 (BasicTypeX -> SHORT .)
    SHORT           reduce using rule 84 (BasicTypeX -> SHORT .)
    USHORT          reduce using rule 84 (BasicTypeX -> SHORT .)
    INT             reduce using rule 84 (BasicTypeX -> SHORT .)
    UINT            reduce using rule 84 (BasicTypeX -> SHORT .)
    LONG            reduce using rule 84 (BasicTypeX -> SHORT .)
    ULONG           reduce using rule 84 (BasicTypeX -> SHORT .)
    CHAR            reduce using rule 84 (BasicTypeX -> SHORT .)
    FLOAT           reduce using rule 84 (BasicTypeX -> SHORT .)
    VOID            reduce using rule 84 (BasicTypeX -> SHORT .)
    TYPEOF          reduce using rule 84 (BasicTypeX -> SHORT .)
    BODY            reduce using rule 84 (BasicTypeX -> SHORT .)


state 32

    (92) BasicTypeX -> VOID .

    DOT             reduce using rule 92 (BasicTypeX -> VOID .)
    LPAREN          reduce using rule 92 (BasicTypeX -> VOID .)
    COMMA           reduce using rule 92 (BasicTypeX -> VOID .)
    LBRACE          reduce using rule 92 (BasicTypeX -> VOID .)
    TIMES           reduce using rule 92 (BasicTypeX -> VOID .)
    LBRACKET        reduce using rule 92 (BasicTypeX -> VOID .)
    FUNCTION        reduce using rule 92 (BasicTypeX -> VOID .)
    IDENTIFIER      reduce using rule 92 (BasicTypeX -> VOID .)
    POWER           reduce using rule 92 (BasicTypeX -> VOID .)
    PLUS_PLUS       reduce using rule 92 (BasicTypeX -> VOID .)
    MINUS_MINUS     reduce using rule 92 (BasicTypeX -> VOID .)
    DIV             reduce using rule 92 (BasicTypeX -> VOID .)
    MODULO          reduce using rule 92 (BasicTypeX -> VOID .)
    PLUS            reduce using rule 92 (BasicTypeX -> VOID .)
    MINUS           reduce using rule 92 (BasicTypeX -> VOID .)
    LEFT_SHIFT      reduce using rule 92 (BasicTypeX -> VOID .)
    RIGHT_SHIFT     reduce using rule 92 (BasicTypeX -> VOID .)
    IS_EQ           reduce using rule 92 (BasicTypeX -> VOID .)
    NOT_EQ          reduce using rule 92 (BasicTypeX -> VOID .)
    LESS            reduce using rule 92 (BasicTypeX -> VOID .)
    GREATER_EQ      reduce using rule 92 (BasicTypeX -> VOID .)
    GREATER         reduce using rule 92 (BasicTypeX -> VOID .)
    LESS_EQ         reduce using rule 92 (BasicTypeX -> VOID .)
    AMPERSAND       reduce using rule 92 (BasicTypeX -> VOID .)
    CARET           reduce using rule 92 (BasicTypeX -> VOID .)
    PIPE            reduce using rule 92 (BasicTypeX -> VOID .)
    DOUBLE_AMPERSAND reduce using rule 92 (BasicTypeX -> VOID .)
    QUESTION        reduce using rule 92 (BasicTypeX -> VOID .)
    DOUBLE_PIPE     reduce using rule 92 (BasicTypeX -> VOID .)
    ASSIGN          reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_PLUS         reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_MINUS        reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_TIMES        reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_DIV          reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_MODULO       reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_AND_BIT      reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_OR_BIT       reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_XOR_BIT      reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_LEFT         reduce using rule 92 (BasicTypeX -> VOID .)
    EQ_RIGHT        reduce using rule 92 (BasicTypeX -> VOID .)
    RBRACKET        reduce using rule 92 (BasicTypeX -> VOID .)
    RANGE           reduce using rule 92 (BasicTypeX -> VOID .)
    RPAREN          reduce using rule 92 (BasicTypeX -> VOID .)
    SEMICOLON       reduce using rule 92 (BasicTypeX -> VOID .)
    RBRACE          reduce using rule 92 (BasicTypeX -> VOID .)
    COLON           reduce using rule 92 (BasicTypeX -> VOID .)
    ELLIPSIS        reduce using rule 92 (BasicTypeX -> VOID .)
    BOOL            reduce using rule 92 (BasicTypeX -> VOID .)
    SHORT           reduce using rule 92 (BasicTypeX -> VOID .)
    USHORT          reduce using rule 92 (BasicTypeX -> VOID .)
    INT             reduce using rule 92 (BasicTypeX -> VOID .)
    UINT            reduce using rule 92 (BasicTypeX -> VOID .)
    LONG            reduce using rule 92 (BasicTypeX -> VOID .)
    ULONG           reduce using rule 92 (BasicTypeX -> VOID .)
    CHAR            reduce using rule 92 (BasicTypeX -> VOID .)
    FLOAT           reduce using rule 92 (BasicTypeX -> VOID .)
    VOID            reduce using rule 92 (BasicTypeX -> VOID .)
    TYPEOF          reduce using rule 92 (BasicTypeX -> VOID .)
    BODY            reduce using rule 92 (BasicTypeX -> VOID .)


state 33

    (80) BasicType -> IdentifierList .

    TIMES           reduce using rule 80 (BasicType -> IdentifierList .)
    LBRACKET        reduce using rule 80 (BasicType -> IdentifierList .)
    FUNCTION        reduce using rule 80 (BasicType -> IdentifierList .)
    IDENTIFIER      reduce using rule 80 (BasicType -> IdentifierList .)
    LPAREN          reduce using rule 80 (BasicType -> IdentifierList .)
    COMMA           reduce using rule 80 (BasicType -> IdentifierList .)
    LBRACE          reduce using rule 80 (BasicType -> IdentifierList .)
    ELLIPSIS        reduce using rule 80 (BasicType -> IdentifierList .)
    RPAREN          reduce using rule 80 (BasicType -> IdentifierList .)
    DOT             reduce using rule 80 (BasicType -> IdentifierList .)
    BOOL            reduce using rule 80 (BasicType -> IdentifierList .)
    SHORT           reduce using rule 80 (BasicType -> IdentifierList .)
    USHORT          reduce using rule 80 (BasicType -> IdentifierList .)
    INT             reduce using rule 80 (BasicType -> IdentifierList .)
    UINT            reduce using rule 80 (BasicType -> IdentifierList .)
    LONG            reduce using rule 80 (BasicType -> IdentifierList .)
    ULONG           reduce using rule 80 (BasicType -> IdentifierList .)
    CHAR            reduce using rule 80 (BasicType -> IdentifierList .)
    FLOAT           reduce using rule 80 (BasicType -> IdentifierList .)
    VOID            reduce using rule 80 (BasicType -> IdentifierList .)
    TYPEOF          reduce using rule 80 (BasicType -> IdentifierList .)
    POWER           reduce using rule 80 (BasicType -> IdentifierList .)
    PLUS_PLUS       reduce using rule 80 (BasicType -> IdentifierList .)
    MINUS_MINUS     reduce using rule 80 (BasicType -> IdentifierList .)
    DIV             reduce using rule 80 (BasicType -> IdentifierList .)
    MODULO          reduce using rule 80 (BasicType -> IdentifierList .)
    PLUS            reduce using rule 80 (BasicType -> IdentifierList .)
    MINUS           reduce using rule 80 (BasicType -> IdentifierList .)
    LEFT_SHIFT      reduce using rule 80 (BasicType -> IdentifierList .)
    RIGHT_SHIFT     reduce using rule 80 (BasicType -> IdentifierList .)
    IS_EQ           reduce using rule 80 (BasicType -> IdentifierList .)
    NOT_EQ          reduce using rule 80 (BasicType -> IdentifierList .)
    LESS            reduce using rule 80 (BasicType -> IdentifierList .)
    GREATER_EQ      reduce using rule 80 (BasicType -> IdentifierList .)
    GREATER         reduce using rule 80 (BasicType -> IdentifierList .)
    LESS_EQ         reduce using rule 80 (BasicType -> IdentifierList .)
    AMPERSAND       reduce using rule 80 (BasicType -> IdentifierList .)
    CARET           reduce using rule 80 (BasicType -> IdentifierList .)
    PIPE            reduce using rule 80 (BasicType -> IdentifierList .)
    DOUBLE_AMPERSAND reduce using rule 80 (BasicType -> IdentifierList .)
    QUESTION        reduce using rule 80 (BasicType -> IdentifierList .)
    DOUBLE_PIPE     reduce using rule 80 (BasicType -> IdentifierList .)
    ASSIGN          reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_PLUS         reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_MINUS        reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_TIMES        reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_DIV          reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_MODULO       reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_AND_BIT      reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_OR_BIT       reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_XOR_BIT      reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_LEFT         reduce using rule 80 (BasicType -> IdentifierList .)
    EQ_RIGHT        reduce using rule 80 (BasicType -> IdentifierList .)
    RBRACKET        reduce using rule 80 (BasicType -> IdentifierList .)
    RANGE           reduce using rule 80 (BasicType -> IdentifierList .)
    SEMICOLON       reduce using rule 80 (BasicType -> IdentifierList .)
    RBRACE          reduce using rule 80 (BasicType -> IdentifierList .)
    COLON           reduce using rule 80 (BasicType -> IdentifierList .)
    BODY            reduce using rule 80 (BasicType -> IdentifierList .)


state 34

    (79) BasicType -> DOT . IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 39

    IdentifierList                 shift and go to state 78

state 35

    (89) BasicTypeX -> ULONG .

    DOT             reduce using rule 89 (BasicTypeX -> ULONG .)
    LPAREN          reduce using rule 89 (BasicTypeX -> ULONG .)
    COMMA           reduce using rule 89 (BasicTypeX -> ULONG .)
    LBRACE          reduce using rule 89 (BasicTypeX -> ULONG .)
    TIMES           reduce using rule 89 (BasicTypeX -> ULONG .)
    LBRACKET        reduce using rule 89 (BasicTypeX -> ULONG .)
    FUNCTION        reduce using rule 89 (BasicTypeX -> ULONG .)
    IDENTIFIER      reduce using rule 89 (BasicTypeX -> ULONG .)
    POWER           reduce using rule 89 (BasicTypeX -> ULONG .)
    PLUS_PLUS       reduce using rule 89 (BasicTypeX -> ULONG .)
    MINUS_MINUS     reduce using rule 89 (BasicTypeX -> ULONG .)
    DIV             reduce using rule 89 (BasicTypeX -> ULONG .)
    MODULO          reduce using rule 89 (BasicTypeX -> ULONG .)
    PLUS            reduce using rule 89 (BasicTypeX -> ULONG .)
    MINUS           reduce using rule 89 (BasicTypeX -> ULONG .)
    LEFT_SHIFT      reduce using rule 89 (BasicTypeX -> ULONG .)
    RIGHT_SHIFT     reduce using rule 89 (BasicTypeX -> ULONG .)
    IS_EQ           reduce using rule 89 (BasicTypeX -> ULONG .)
    NOT_EQ          reduce using rule 89 (BasicTypeX -> ULONG .)
    LESS            reduce using rule 89 (BasicTypeX -> ULONG .)
    GREATER_EQ      reduce using rule 89 (BasicTypeX -> ULONG .)
    GREATER         reduce using rule 89 (BasicTypeX -> ULONG .)
    LESS_EQ         reduce using rule 89 (BasicTypeX -> ULONG .)
    AMPERSAND       reduce using rule 89 (BasicTypeX -> ULONG .)
    CARET           reduce using rule 89 (BasicTypeX -> ULONG .)
    PIPE            reduce using rule 89 (BasicTypeX -> ULONG .)
    DOUBLE_AMPERSAND reduce using rule 89 (BasicTypeX -> ULONG .)
    QUESTION        reduce using rule 89 (BasicTypeX -> ULONG .)
    DOUBLE_PIPE     reduce using rule 89 (BasicTypeX -> ULONG .)
    ASSIGN          reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_PLUS         reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_MINUS        reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_TIMES        reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_DIV          reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_MODULO       reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_AND_BIT      reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_OR_BIT       reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_XOR_BIT      reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_LEFT         reduce using rule 89 (BasicTypeX -> ULONG .)
    EQ_RIGHT        reduce using rule 89 (BasicTypeX -> ULONG .)
    RBRACKET        reduce using rule 89 (BasicTypeX -> ULONG .)
    RANGE           reduce using rule 89 (BasicTypeX -> ULONG .)
    RPAREN          reduce using rule 89 (BasicTypeX -> ULONG .)
    SEMICOLON       reduce using rule 89 (BasicTypeX -> ULONG .)
    RBRACE          reduce using rule 89 (BasicTypeX -> ULONG .)
    COLON           reduce using rule 89 (BasicTypeX -> ULONG .)
    ELLIPSIS        reduce using rule 89 (BasicTypeX -> ULONG .)
    BOOL            reduce using rule 89 (BasicTypeX -> ULONG .)
    SHORT           reduce using rule 89 (BasicTypeX -> ULONG .)
    USHORT          reduce using rule 89 (BasicTypeX -> ULONG .)
    INT             reduce using rule 89 (BasicTypeX -> ULONG .)
    UINT            reduce using rule 89 (BasicTypeX -> ULONG .)
    LONG            reduce using rule 89 (BasicTypeX -> ULONG .)
    ULONG           reduce using rule 89 (BasicTypeX -> ULONG .)
    CHAR            reduce using rule 89 (BasicTypeX -> ULONG .)
    FLOAT           reduce using rule 89 (BasicTypeX -> ULONG .)
    VOID            reduce using rule 89 (BasicTypeX -> ULONG .)
    TYPEOF          reduce using rule 89 (BasicTypeX -> ULONG .)
    BODY            reduce using rule 89 (BasicTypeX -> ULONG .)


state 36

    (439) FuncDeclaration -> StorageClasses_opt BasicType . FuncDeclarator FunctionBody
    (440) FuncDeclaration -> StorageClasses_opt BasicType . FuncDeclarator SEMICOLON
    (40) VarDeclarations -> StorageClasses_opt BasicType . Declarators SEMICOLON
    (443) FuncDeclarator -> . BasicType2_opt IDENTIFIER FuncDeclaratorSuffix
    (41) Declarators -> . DeclaratorInitializer
    (42) Declarators -> . DeclaratorInitializer COMMA DeclaratorIdentifierList
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (43) DeclaratorInitializer -> . VarDeclarator
    (44) DeclaratorInitializer -> . VarDeclarator ASSIGN Initializer
    (45) DeclaratorInitializer -> . AltDeclarator ASSIGN Initializer
    (46) DeclaratorInitializer -> . AltDeclarator
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (59) VarDeclarator -> . BasicType2_opt IDENTIFIER
    (60) AltDeclarator -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

    VarDeclarator                  shift and go to state 79
    BasicType2X                    shift and go to state 81
    DeclaratorInitializer          shift and go to state 83
    Declarators                    shift and go to state 84
    AltDeclarator                  shift and go to state 85
    empty                          shift and go to state 86
    FuncDeclarator                 shift and go to state 89
    BasicType2_opt                 shift and go to state 82
    BasicType2                     shift and go to state 90

state 37

    (88) BasicTypeX -> LONG .

    DOT             reduce using rule 88 (BasicTypeX -> LONG .)
    LPAREN          reduce using rule 88 (BasicTypeX -> LONG .)
    COMMA           reduce using rule 88 (BasicTypeX -> LONG .)
    LBRACE          reduce using rule 88 (BasicTypeX -> LONG .)
    TIMES           reduce using rule 88 (BasicTypeX -> LONG .)
    LBRACKET        reduce using rule 88 (BasicTypeX -> LONG .)
    FUNCTION        reduce using rule 88 (BasicTypeX -> LONG .)
    IDENTIFIER      reduce using rule 88 (BasicTypeX -> LONG .)
    POWER           reduce using rule 88 (BasicTypeX -> LONG .)
    PLUS_PLUS       reduce using rule 88 (BasicTypeX -> LONG .)
    MINUS_MINUS     reduce using rule 88 (BasicTypeX -> LONG .)
    DIV             reduce using rule 88 (BasicTypeX -> LONG .)
    MODULO          reduce using rule 88 (BasicTypeX -> LONG .)
    PLUS            reduce using rule 88 (BasicTypeX -> LONG .)
    MINUS           reduce using rule 88 (BasicTypeX -> LONG .)
    LEFT_SHIFT      reduce using rule 88 (BasicTypeX -> LONG .)
    RIGHT_SHIFT     reduce using rule 88 (BasicTypeX -> LONG .)
    IS_EQ           reduce using rule 88 (BasicTypeX -> LONG .)
    NOT_EQ          reduce using rule 88 (BasicTypeX -> LONG .)
    LESS            reduce using rule 88 (BasicTypeX -> LONG .)
    GREATER_EQ      reduce using rule 88 (BasicTypeX -> LONG .)
    GREATER         reduce using rule 88 (BasicTypeX -> LONG .)
    LESS_EQ         reduce using rule 88 (BasicTypeX -> LONG .)
    AMPERSAND       reduce using rule 88 (BasicTypeX -> LONG .)
    CARET           reduce using rule 88 (BasicTypeX -> LONG .)
    PIPE            reduce using rule 88 (BasicTypeX -> LONG .)
    DOUBLE_AMPERSAND reduce using rule 88 (BasicTypeX -> LONG .)
    QUESTION        reduce using rule 88 (BasicTypeX -> LONG .)
    DOUBLE_PIPE     reduce using rule 88 (BasicTypeX -> LONG .)
    ASSIGN          reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_PLUS         reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_MINUS        reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_TIMES        reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_DIV          reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_MODULO       reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_AND_BIT      reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_OR_BIT       reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_XOR_BIT      reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_LEFT         reduce using rule 88 (BasicTypeX -> LONG .)
    EQ_RIGHT        reduce using rule 88 (BasicTypeX -> LONG .)
    RBRACKET        reduce using rule 88 (BasicTypeX -> LONG .)
    RANGE           reduce using rule 88 (BasicTypeX -> LONG .)
    RPAREN          reduce using rule 88 (BasicTypeX -> LONG .)
    SEMICOLON       reduce using rule 88 (BasicTypeX -> LONG .)
    RBRACE          reduce using rule 88 (BasicTypeX -> LONG .)
    COLON           reduce using rule 88 (BasicTypeX -> LONG .)
    ELLIPSIS        reduce using rule 88 (BasicTypeX -> LONG .)
    BOOL            reduce using rule 88 (BasicTypeX -> LONG .)
    SHORT           reduce using rule 88 (BasicTypeX -> LONG .)
    USHORT          reduce using rule 88 (BasicTypeX -> LONG .)
    INT             reduce using rule 88 (BasicTypeX -> LONG .)
    UINT            reduce using rule 88 (BasicTypeX -> LONG .)
    LONG            reduce using rule 88 (BasicTypeX -> LONG .)
    ULONG           reduce using rule 88 (BasicTypeX -> LONG .)
    CHAR            reduce using rule 88 (BasicTypeX -> LONG .)
    FLOAT           reduce using rule 88 (BasicTypeX -> LONG .)
    VOID            reduce using rule 88 (BasicTypeX -> LONG .)
    TYPEOF          reduce using rule 88 (BasicTypeX -> LONG .)
    BODY            reduce using rule 88 (BasicTypeX -> LONG .)


state 38

    (78) BasicType -> BasicTypeX .

    TIMES           reduce using rule 78 (BasicType -> BasicTypeX .)
    LBRACKET        reduce using rule 78 (BasicType -> BasicTypeX .)
    FUNCTION        reduce using rule 78 (BasicType -> BasicTypeX .)
    IDENTIFIER      reduce using rule 78 (BasicType -> BasicTypeX .)
    LPAREN          reduce using rule 78 (BasicType -> BasicTypeX .)
    COMMA           reduce using rule 78 (BasicType -> BasicTypeX .)
    LBRACE          reduce using rule 78 (BasicType -> BasicTypeX .)
    ELLIPSIS        reduce using rule 78 (BasicType -> BasicTypeX .)
    RPAREN          reduce using rule 78 (BasicType -> BasicTypeX .)
    DOT             reduce using rule 78 (BasicType -> BasicTypeX .)
    BOOL            reduce using rule 78 (BasicType -> BasicTypeX .)
    SHORT           reduce using rule 78 (BasicType -> BasicTypeX .)
    USHORT          reduce using rule 78 (BasicType -> BasicTypeX .)
    INT             reduce using rule 78 (BasicType -> BasicTypeX .)
    UINT            reduce using rule 78 (BasicType -> BasicTypeX .)
    LONG            reduce using rule 78 (BasicType -> BasicTypeX .)
    ULONG           reduce using rule 78 (BasicType -> BasicTypeX .)
    CHAR            reduce using rule 78 (BasicType -> BasicTypeX .)
    FLOAT           reduce using rule 78 (BasicType -> BasicTypeX .)
    VOID            reduce using rule 78 (BasicType -> BasicTypeX .)
    TYPEOF          reduce using rule 78 (BasicType -> BasicTypeX .)
    POWER           reduce using rule 78 (BasicType -> BasicTypeX .)
    PLUS_PLUS       reduce using rule 78 (BasicType -> BasicTypeX .)
    MINUS_MINUS     reduce using rule 78 (BasicType -> BasicTypeX .)
    DIV             reduce using rule 78 (BasicType -> BasicTypeX .)
    MODULO          reduce using rule 78 (BasicType -> BasicTypeX .)
    PLUS            reduce using rule 78 (BasicType -> BasicTypeX .)
    MINUS           reduce using rule 78 (BasicType -> BasicTypeX .)
    LEFT_SHIFT      reduce using rule 78 (BasicType -> BasicTypeX .)
    RIGHT_SHIFT     reduce using rule 78 (BasicType -> BasicTypeX .)
    IS_EQ           reduce using rule 78 (BasicType -> BasicTypeX .)
    NOT_EQ          reduce using rule 78 (BasicType -> BasicTypeX .)
    LESS            reduce using rule 78 (BasicType -> BasicTypeX .)
    GREATER_EQ      reduce using rule 78 (BasicType -> BasicTypeX .)
    GREATER         reduce using rule 78 (BasicType -> BasicTypeX .)
    LESS_EQ         reduce using rule 78 (BasicType -> BasicTypeX .)
    AMPERSAND       reduce using rule 78 (BasicType -> BasicTypeX .)
    CARET           reduce using rule 78 (BasicType -> BasicTypeX .)
    PIPE            reduce using rule 78 (BasicType -> BasicTypeX .)
    DOUBLE_AMPERSAND reduce using rule 78 (BasicType -> BasicTypeX .)
    QUESTION        reduce using rule 78 (BasicType -> BasicTypeX .)
    DOUBLE_PIPE     reduce using rule 78 (BasicType -> BasicTypeX .)
    ASSIGN          reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_PLUS         reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_MINUS        reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_TIMES        reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_DIV          reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_MODULO       reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_AND_BIT      reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_OR_BIT       reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_XOR_BIT      reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_LEFT         reduce using rule 78 (BasicType -> BasicTypeX .)
    EQ_RIGHT        reduce using rule 78 (BasicType -> BasicTypeX .)
    RBRACKET        reduce using rule 78 (BasicType -> BasicTypeX .)
    RANGE           reduce using rule 78 (BasicType -> BasicTypeX .)
    SEMICOLON       reduce using rule 78 (BasicType -> BasicTypeX .)
    RBRACE          reduce using rule 78 (BasicType -> BasicTypeX .)
    COLON           reduce using rule 78 (BasicType -> BasicTypeX .)
    BODY            reduce using rule 78 (BasicType -> BasicTypeX .)


state 39

    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    FUNCTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LBRACE          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    BODY            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COMMA           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ELLIPSIS        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RBRACKET        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    SEMICOLON       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    POWER           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS_PLUS       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS_MINUS     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DIV             reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MODULO          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IS_EQ           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    NOT_EQ          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER_EQ      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS_EQ         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    AMPERSAND       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    CARET           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PIPE            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    QUESTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_PLUS         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MINUS        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_TIMES        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_DIV          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MODULO       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_LEFT         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_RIGHT        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RANGE           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RBRACE          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COLON           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    BOOL            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    SHORT           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    USHORT          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    INT             reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    UINT            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LONG            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ULONG           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    CHAR            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    FLOAT           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    VOID            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    TYPEOF          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 91

  ! LBRACKET        [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 40

    (85) BasicTypeX -> USHORT .

    DOT             reduce using rule 85 (BasicTypeX -> USHORT .)
    LPAREN          reduce using rule 85 (BasicTypeX -> USHORT .)
    COMMA           reduce using rule 85 (BasicTypeX -> USHORT .)
    LBRACE          reduce using rule 85 (BasicTypeX -> USHORT .)
    TIMES           reduce using rule 85 (BasicTypeX -> USHORT .)
    LBRACKET        reduce using rule 85 (BasicTypeX -> USHORT .)
    FUNCTION        reduce using rule 85 (BasicTypeX -> USHORT .)
    IDENTIFIER      reduce using rule 85 (BasicTypeX -> USHORT .)
    POWER           reduce using rule 85 (BasicTypeX -> USHORT .)
    PLUS_PLUS       reduce using rule 85 (BasicTypeX -> USHORT .)
    MINUS_MINUS     reduce using rule 85 (BasicTypeX -> USHORT .)
    DIV             reduce using rule 85 (BasicTypeX -> USHORT .)
    MODULO          reduce using rule 85 (BasicTypeX -> USHORT .)
    PLUS            reduce using rule 85 (BasicTypeX -> USHORT .)
    MINUS           reduce using rule 85 (BasicTypeX -> USHORT .)
    LEFT_SHIFT      reduce using rule 85 (BasicTypeX -> USHORT .)
    RIGHT_SHIFT     reduce using rule 85 (BasicTypeX -> USHORT .)
    IS_EQ           reduce using rule 85 (BasicTypeX -> USHORT .)
    NOT_EQ          reduce using rule 85 (BasicTypeX -> USHORT .)
    LESS            reduce using rule 85 (BasicTypeX -> USHORT .)
    GREATER_EQ      reduce using rule 85 (BasicTypeX -> USHORT .)
    GREATER         reduce using rule 85 (BasicTypeX -> USHORT .)
    LESS_EQ         reduce using rule 85 (BasicTypeX -> USHORT .)
    AMPERSAND       reduce using rule 85 (BasicTypeX -> USHORT .)
    CARET           reduce using rule 85 (BasicTypeX -> USHORT .)
    PIPE            reduce using rule 85 (BasicTypeX -> USHORT .)
    DOUBLE_AMPERSAND reduce using rule 85 (BasicTypeX -> USHORT .)
    QUESTION        reduce using rule 85 (BasicTypeX -> USHORT .)
    DOUBLE_PIPE     reduce using rule 85 (BasicTypeX -> USHORT .)
    ASSIGN          reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_PLUS         reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_MINUS        reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_TIMES        reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_DIV          reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_MODULO       reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_AND_BIT      reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_OR_BIT       reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_XOR_BIT      reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_LEFT         reduce using rule 85 (BasicTypeX -> USHORT .)
    EQ_RIGHT        reduce using rule 85 (BasicTypeX -> USHORT .)
    RBRACKET        reduce using rule 85 (BasicTypeX -> USHORT .)
    RANGE           reduce using rule 85 (BasicTypeX -> USHORT .)
    RPAREN          reduce using rule 85 (BasicTypeX -> USHORT .)
    SEMICOLON       reduce using rule 85 (BasicTypeX -> USHORT .)
    RBRACE          reduce using rule 85 (BasicTypeX -> USHORT .)
    COLON           reduce using rule 85 (BasicTypeX -> USHORT .)
    ELLIPSIS        reduce using rule 85 (BasicTypeX -> USHORT .)
    BOOL            reduce using rule 85 (BasicTypeX -> USHORT .)
    SHORT           reduce using rule 85 (BasicTypeX -> USHORT .)
    USHORT          reduce using rule 85 (BasicTypeX -> USHORT .)
    INT             reduce using rule 85 (BasicTypeX -> USHORT .)
    UINT            reduce using rule 85 (BasicTypeX -> USHORT .)
    LONG            reduce using rule 85 (BasicTypeX -> USHORT .)
    ULONG           reduce using rule 85 (BasicTypeX -> USHORT .)
    CHAR            reduce using rule 85 (BasicTypeX -> USHORT .)
    FLOAT           reduce using rule 85 (BasicTypeX -> USHORT .)
    VOID            reduce using rule 85 (BasicTypeX -> USHORT .)
    TYPEOF          reduce using rule 85 (BasicTypeX -> USHORT .)
    BODY            reduce using rule 85 (BasicTypeX -> USHORT .)


state 41

    (87) BasicTypeX -> UINT .

    DOT             reduce using rule 87 (BasicTypeX -> UINT .)
    LPAREN          reduce using rule 87 (BasicTypeX -> UINT .)
    COMMA           reduce using rule 87 (BasicTypeX -> UINT .)
    LBRACE          reduce using rule 87 (BasicTypeX -> UINT .)
    TIMES           reduce using rule 87 (BasicTypeX -> UINT .)
    LBRACKET        reduce using rule 87 (BasicTypeX -> UINT .)
    FUNCTION        reduce using rule 87 (BasicTypeX -> UINT .)
    IDENTIFIER      reduce using rule 87 (BasicTypeX -> UINT .)
    POWER           reduce using rule 87 (BasicTypeX -> UINT .)
    PLUS_PLUS       reduce using rule 87 (BasicTypeX -> UINT .)
    MINUS_MINUS     reduce using rule 87 (BasicTypeX -> UINT .)
    DIV             reduce using rule 87 (BasicTypeX -> UINT .)
    MODULO          reduce using rule 87 (BasicTypeX -> UINT .)
    PLUS            reduce using rule 87 (BasicTypeX -> UINT .)
    MINUS           reduce using rule 87 (BasicTypeX -> UINT .)
    LEFT_SHIFT      reduce using rule 87 (BasicTypeX -> UINT .)
    RIGHT_SHIFT     reduce using rule 87 (BasicTypeX -> UINT .)
    IS_EQ           reduce using rule 87 (BasicTypeX -> UINT .)
    NOT_EQ          reduce using rule 87 (BasicTypeX -> UINT .)
    LESS            reduce using rule 87 (BasicTypeX -> UINT .)
    GREATER_EQ      reduce using rule 87 (BasicTypeX -> UINT .)
    GREATER         reduce using rule 87 (BasicTypeX -> UINT .)
    LESS_EQ         reduce using rule 87 (BasicTypeX -> UINT .)
    AMPERSAND       reduce using rule 87 (BasicTypeX -> UINT .)
    CARET           reduce using rule 87 (BasicTypeX -> UINT .)
    PIPE            reduce using rule 87 (BasicTypeX -> UINT .)
    DOUBLE_AMPERSAND reduce using rule 87 (BasicTypeX -> UINT .)
    QUESTION        reduce using rule 87 (BasicTypeX -> UINT .)
    DOUBLE_PIPE     reduce using rule 87 (BasicTypeX -> UINT .)
    ASSIGN          reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_PLUS         reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_MINUS        reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_TIMES        reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_DIV          reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_MODULO       reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_AND_BIT      reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_OR_BIT       reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_XOR_BIT      reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_LEFT         reduce using rule 87 (BasicTypeX -> UINT .)
    EQ_RIGHT        reduce using rule 87 (BasicTypeX -> UINT .)
    RBRACKET        reduce using rule 87 (BasicTypeX -> UINT .)
    RANGE           reduce using rule 87 (BasicTypeX -> UINT .)
    RPAREN          reduce using rule 87 (BasicTypeX -> UINT .)
    SEMICOLON       reduce using rule 87 (BasicTypeX -> UINT .)
    RBRACE          reduce using rule 87 (BasicTypeX -> UINT .)
    COLON           reduce using rule 87 (BasicTypeX -> UINT .)
    ELLIPSIS        reduce using rule 87 (BasicTypeX -> UINT .)
    BOOL            reduce using rule 87 (BasicTypeX -> UINT .)
    SHORT           reduce using rule 87 (BasicTypeX -> UINT .)
    USHORT          reduce using rule 87 (BasicTypeX -> UINT .)
    INT             reduce using rule 87 (BasicTypeX -> UINT .)
    UINT            reduce using rule 87 (BasicTypeX -> UINT .)
    LONG            reduce using rule 87 (BasicTypeX -> UINT .)
    ULONG           reduce using rule 87 (BasicTypeX -> UINT .)
    CHAR            reduce using rule 87 (BasicTypeX -> UINT .)
    FLOAT           reduce using rule 87 (BasicTypeX -> UINT .)
    VOID            reduce using rule 87 (BasicTypeX -> UINT .)
    TYPEOF          reduce using rule 87 (BasicTypeX -> UINT .)
    BODY            reduce using rule 87 (BasicTypeX -> UINT .)


state 42

    (81) BasicType -> Typeof .
    (82) BasicType -> Typeof . DOT IdentifierList

  ! shift/reduce conflict for DOT resolved as shift
    TIMES           reduce using rule 81 (BasicType -> Typeof .)
    LBRACKET        reduce using rule 81 (BasicType -> Typeof .)
    FUNCTION        reduce using rule 81 (BasicType -> Typeof .)
    IDENTIFIER      reduce using rule 81 (BasicType -> Typeof .)
    LPAREN          reduce using rule 81 (BasicType -> Typeof .)
    COMMA           reduce using rule 81 (BasicType -> Typeof .)
    LBRACE          reduce using rule 81 (BasicType -> Typeof .)
    ELLIPSIS        reduce using rule 81 (BasicType -> Typeof .)
    RPAREN          reduce using rule 81 (BasicType -> Typeof .)
    BOOL            reduce using rule 81 (BasicType -> Typeof .)
    SHORT           reduce using rule 81 (BasicType -> Typeof .)
    USHORT          reduce using rule 81 (BasicType -> Typeof .)
    INT             reduce using rule 81 (BasicType -> Typeof .)
    UINT            reduce using rule 81 (BasicType -> Typeof .)
    LONG            reduce using rule 81 (BasicType -> Typeof .)
    ULONG           reduce using rule 81 (BasicType -> Typeof .)
    CHAR            reduce using rule 81 (BasicType -> Typeof .)
    FLOAT           reduce using rule 81 (BasicType -> Typeof .)
    VOID            reduce using rule 81 (BasicType -> Typeof .)
    TYPEOF          reduce using rule 81 (BasicType -> Typeof .)
    POWER           reduce using rule 81 (BasicType -> Typeof .)
    PLUS_PLUS       reduce using rule 81 (BasicType -> Typeof .)
    MINUS_MINUS     reduce using rule 81 (BasicType -> Typeof .)
    DIV             reduce using rule 81 (BasicType -> Typeof .)
    MODULO          reduce using rule 81 (BasicType -> Typeof .)
    PLUS            reduce using rule 81 (BasicType -> Typeof .)
    MINUS           reduce using rule 81 (BasicType -> Typeof .)
    LEFT_SHIFT      reduce using rule 81 (BasicType -> Typeof .)
    RIGHT_SHIFT     reduce using rule 81 (BasicType -> Typeof .)
    IS_EQ           reduce using rule 81 (BasicType -> Typeof .)
    NOT_EQ          reduce using rule 81 (BasicType -> Typeof .)
    LESS            reduce using rule 81 (BasicType -> Typeof .)
    GREATER_EQ      reduce using rule 81 (BasicType -> Typeof .)
    GREATER         reduce using rule 81 (BasicType -> Typeof .)
    LESS_EQ         reduce using rule 81 (BasicType -> Typeof .)
    AMPERSAND       reduce using rule 81 (BasicType -> Typeof .)
    CARET           reduce using rule 81 (BasicType -> Typeof .)
    PIPE            reduce using rule 81 (BasicType -> Typeof .)
    DOUBLE_AMPERSAND reduce using rule 81 (BasicType -> Typeof .)
    QUESTION        reduce using rule 81 (BasicType -> Typeof .)
    DOUBLE_PIPE     reduce using rule 81 (BasicType -> Typeof .)
    ASSIGN          reduce using rule 81 (BasicType -> Typeof .)
    EQ_PLUS         reduce using rule 81 (BasicType -> Typeof .)
    EQ_MINUS        reduce using rule 81 (BasicType -> Typeof .)
    EQ_TIMES        reduce using rule 81 (BasicType -> Typeof .)
    EQ_DIV          reduce using rule 81 (BasicType -> Typeof .)
    EQ_MODULO       reduce using rule 81 (BasicType -> Typeof .)
    EQ_AND_BIT      reduce using rule 81 (BasicType -> Typeof .)
    EQ_OR_BIT       reduce using rule 81 (BasicType -> Typeof .)
    EQ_XOR_BIT      reduce using rule 81 (BasicType -> Typeof .)
    EQ_LEFT         reduce using rule 81 (BasicType -> Typeof .)
    EQ_RIGHT        reduce using rule 81 (BasicType -> Typeof .)
    RBRACKET        reduce using rule 81 (BasicType -> Typeof .)
    RANGE           reduce using rule 81 (BasicType -> Typeof .)
    SEMICOLON       reduce using rule 81 (BasicType -> Typeof .)
    RBRACE          reduce using rule 81 (BasicType -> Typeof .)
    COLON           reduce using rule 81 (BasicType -> Typeof .)
    BODY            reduce using rule 81 (BasicType -> Typeof .)
    DOT             shift and go to state 93

  ! DOT             [ reduce using rule 81 (BasicType -> Typeof .) ]


state 43

    (90) BasicTypeX -> CHAR .

    DOT             reduce using rule 90 (BasicTypeX -> CHAR .)
    LPAREN          reduce using rule 90 (BasicTypeX -> CHAR .)
    COMMA           reduce using rule 90 (BasicTypeX -> CHAR .)
    LBRACE          reduce using rule 90 (BasicTypeX -> CHAR .)
    TIMES           reduce using rule 90 (BasicTypeX -> CHAR .)
    LBRACKET        reduce using rule 90 (BasicTypeX -> CHAR .)
    FUNCTION        reduce using rule 90 (BasicTypeX -> CHAR .)
    IDENTIFIER      reduce using rule 90 (BasicTypeX -> CHAR .)
    POWER           reduce using rule 90 (BasicTypeX -> CHAR .)
    PLUS_PLUS       reduce using rule 90 (BasicTypeX -> CHAR .)
    MINUS_MINUS     reduce using rule 90 (BasicTypeX -> CHAR .)
    DIV             reduce using rule 90 (BasicTypeX -> CHAR .)
    MODULO          reduce using rule 90 (BasicTypeX -> CHAR .)
    PLUS            reduce using rule 90 (BasicTypeX -> CHAR .)
    MINUS           reduce using rule 90 (BasicTypeX -> CHAR .)
    LEFT_SHIFT      reduce using rule 90 (BasicTypeX -> CHAR .)
    RIGHT_SHIFT     reduce using rule 90 (BasicTypeX -> CHAR .)
    IS_EQ           reduce using rule 90 (BasicTypeX -> CHAR .)
    NOT_EQ          reduce using rule 90 (BasicTypeX -> CHAR .)
    LESS            reduce using rule 90 (BasicTypeX -> CHAR .)
    GREATER_EQ      reduce using rule 90 (BasicTypeX -> CHAR .)
    GREATER         reduce using rule 90 (BasicTypeX -> CHAR .)
    LESS_EQ         reduce using rule 90 (BasicTypeX -> CHAR .)
    AMPERSAND       reduce using rule 90 (BasicTypeX -> CHAR .)
    CARET           reduce using rule 90 (BasicTypeX -> CHAR .)
    PIPE            reduce using rule 90 (BasicTypeX -> CHAR .)
    DOUBLE_AMPERSAND reduce using rule 90 (BasicTypeX -> CHAR .)
    QUESTION        reduce using rule 90 (BasicTypeX -> CHAR .)
    DOUBLE_PIPE     reduce using rule 90 (BasicTypeX -> CHAR .)
    ASSIGN          reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_PLUS         reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_MINUS        reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_TIMES        reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_DIV          reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_MODULO       reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_AND_BIT      reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_OR_BIT       reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_XOR_BIT      reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_LEFT         reduce using rule 90 (BasicTypeX -> CHAR .)
    EQ_RIGHT        reduce using rule 90 (BasicTypeX -> CHAR .)
    RBRACKET        reduce using rule 90 (BasicTypeX -> CHAR .)
    RANGE           reduce using rule 90 (BasicTypeX -> CHAR .)
    RPAREN          reduce using rule 90 (BasicTypeX -> CHAR .)
    SEMICOLON       reduce using rule 90 (BasicTypeX -> CHAR .)
    RBRACE          reduce using rule 90 (BasicTypeX -> CHAR .)
    COLON           reduce using rule 90 (BasicTypeX -> CHAR .)
    ELLIPSIS        reduce using rule 90 (BasicTypeX -> CHAR .)
    BOOL            reduce using rule 90 (BasicTypeX -> CHAR .)
    SHORT           reduce using rule 90 (BasicTypeX -> CHAR .)
    USHORT          reduce using rule 90 (BasicTypeX -> CHAR .)
    INT             reduce using rule 90 (BasicTypeX -> CHAR .)
    UINT            reduce using rule 90 (BasicTypeX -> CHAR .)
    LONG            reduce using rule 90 (BasicTypeX -> CHAR .)
    ULONG           reduce using rule 90 (BasicTypeX -> CHAR .)
    CHAR            reduce using rule 90 (BasicTypeX -> CHAR .)
    FLOAT           reduce using rule 90 (BasicTypeX -> CHAR .)
    VOID            reduce using rule 90 (BasicTypeX -> CHAR .)
    TYPEOF          reduce using rule 90 (BasicTypeX -> CHAR .)
    BODY            reduce using rule 90 (BasicTypeX -> CHAR .)


state 44

    (86) BasicTypeX -> INT .

    DOT             reduce using rule 86 (BasicTypeX -> INT .)
    LPAREN          reduce using rule 86 (BasicTypeX -> INT .)
    COMMA           reduce using rule 86 (BasicTypeX -> INT .)
    LBRACE          reduce using rule 86 (BasicTypeX -> INT .)
    TIMES           reduce using rule 86 (BasicTypeX -> INT .)
    LBRACKET        reduce using rule 86 (BasicTypeX -> INT .)
    FUNCTION        reduce using rule 86 (BasicTypeX -> INT .)
    IDENTIFIER      reduce using rule 86 (BasicTypeX -> INT .)
    POWER           reduce using rule 86 (BasicTypeX -> INT .)
    PLUS_PLUS       reduce using rule 86 (BasicTypeX -> INT .)
    MINUS_MINUS     reduce using rule 86 (BasicTypeX -> INT .)
    DIV             reduce using rule 86 (BasicTypeX -> INT .)
    MODULO          reduce using rule 86 (BasicTypeX -> INT .)
    PLUS            reduce using rule 86 (BasicTypeX -> INT .)
    MINUS           reduce using rule 86 (BasicTypeX -> INT .)
    LEFT_SHIFT      reduce using rule 86 (BasicTypeX -> INT .)
    RIGHT_SHIFT     reduce using rule 86 (BasicTypeX -> INT .)
    IS_EQ           reduce using rule 86 (BasicTypeX -> INT .)
    NOT_EQ          reduce using rule 86 (BasicTypeX -> INT .)
    LESS            reduce using rule 86 (BasicTypeX -> INT .)
    GREATER_EQ      reduce using rule 86 (BasicTypeX -> INT .)
    GREATER         reduce using rule 86 (BasicTypeX -> INT .)
    LESS_EQ         reduce using rule 86 (BasicTypeX -> INT .)
    AMPERSAND       reduce using rule 86 (BasicTypeX -> INT .)
    CARET           reduce using rule 86 (BasicTypeX -> INT .)
    PIPE            reduce using rule 86 (BasicTypeX -> INT .)
    DOUBLE_AMPERSAND reduce using rule 86 (BasicTypeX -> INT .)
    QUESTION        reduce using rule 86 (BasicTypeX -> INT .)
    DOUBLE_PIPE     reduce using rule 86 (BasicTypeX -> INT .)
    ASSIGN          reduce using rule 86 (BasicTypeX -> INT .)
    EQ_PLUS         reduce using rule 86 (BasicTypeX -> INT .)
    EQ_MINUS        reduce using rule 86 (BasicTypeX -> INT .)
    EQ_TIMES        reduce using rule 86 (BasicTypeX -> INT .)
    EQ_DIV          reduce using rule 86 (BasicTypeX -> INT .)
    EQ_MODULO       reduce using rule 86 (BasicTypeX -> INT .)
    EQ_AND_BIT      reduce using rule 86 (BasicTypeX -> INT .)
    EQ_OR_BIT       reduce using rule 86 (BasicTypeX -> INT .)
    EQ_XOR_BIT      reduce using rule 86 (BasicTypeX -> INT .)
    EQ_LEFT         reduce using rule 86 (BasicTypeX -> INT .)
    EQ_RIGHT        reduce using rule 86 (BasicTypeX -> INT .)
    RBRACKET        reduce using rule 86 (BasicTypeX -> INT .)
    RANGE           reduce using rule 86 (BasicTypeX -> INT .)
    RPAREN          reduce using rule 86 (BasicTypeX -> INT .)
    SEMICOLON       reduce using rule 86 (BasicTypeX -> INT .)
    RBRACE          reduce using rule 86 (BasicTypeX -> INT .)
    COLON           reduce using rule 86 (BasicTypeX -> INT .)
    ELLIPSIS        reduce using rule 86 (BasicTypeX -> INT .)
    BOOL            reduce using rule 86 (BasicTypeX -> INT .)
    SHORT           reduce using rule 86 (BasicTypeX -> INT .)
    USHORT          reduce using rule 86 (BasicTypeX -> INT .)
    INT             reduce using rule 86 (BasicTypeX -> INT .)
    UINT            reduce using rule 86 (BasicTypeX -> INT .)
    LONG            reduce using rule 86 (BasicTypeX -> INT .)
    ULONG           reduce using rule 86 (BasicTypeX -> INT .)
    CHAR            reduce using rule 86 (BasicTypeX -> INT .)
    FLOAT           reduce using rule 86 (BasicTypeX -> INT .)
    VOID            reduce using rule 86 (BasicTypeX -> INT .)
    TYPEOF          reduce using rule 86 (BasicTypeX -> INT .)
    BODY            reduce using rule 86 (BasicTypeX -> INT .)


state 45

    (91) BasicTypeX -> FLOAT .

    DOT             reduce using rule 91 (BasicTypeX -> FLOAT .)
    LPAREN          reduce using rule 91 (BasicTypeX -> FLOAT .)
    COMMA           reduce using rule 91 (BasicTypeX -> FLOAT .)
    LBRACE          reduce using rule 91 (BasicTypeX -> FLOAT .)
    TIMES           reduce using rule 91 (BasicTypeX -> FLOAT .)
    LBRACKET        reduce using rule 91 (BasicTypeX -> FLOAT .)
    FUNCTION        reduce using rule 91 (BasicTypeX -> FLOAT .)
    IDENTIFIER      reduce using rule 91 (BasicTypeX -> FLOAT .)
    POWER           reduce using rule 91 (BasicTypeX -> FLOAT .)
    PLUS_PLUS       reduce using rule 91 (BasicTypeX -> FLOAT .)
    MINUS_MINUS     reduce using rule 91 (BasicTypeX -> FLOAT .)
    DIV             reduce using rule 91 (BasicTypeX -> FLOAT .)
    MODULO          reduce using rule 91 (BasicTypeX -> FLOAT .)
    PLUS            reduce using rule 91 (BasicTypeX -> FLOAT .)
    MINUS           reduce using rule 91 (BasicTypeX -> FLOAT .)
    LEFT_SHIFT      reduce using rule 91 (BasicTypeX -> FLOAT .)
    RIGHT_SHIFT     reduce using rule 91 (BasicTypeX -> FLOAT .)
    IS_EQ           reduce using rule 91 (BasicTypeX -> FLOAT .)
    NOT_EQ          reduce using rule 91 (BasicTypeX -> FLOAT .)
    LESS            reduce using rule 91 (BasicTypeX -> FLOAT .)
    GREATER_EQ      reduce using rule 91 (BasicTypeX -> FLOAT .)
    GREATER         reduce using rule 91 (BasicTypeX -> FLOAT .)
    LESS_EQ         reduce using rule 91 (BasicTypeX -> FLOAT .)
    AMPERSAND       reduce using rule 91 (BasicTypeX -> FLOAT .)
    CARET           reduce using rule 91 (BasicTypeX -> FLOAT .)
    PIPE            reduce using rule 91 (BasicTypeX -> FLOAT .)
    DOUBLE_AMPERSAND reduce using rule 91 (BasicTypeX -> FLOAT .)
    QUESTION        reduce using rule 91 (BasicTypeX -> FLOAT .)
    DOUBLE_PIPE     reduce using rule 91 (BasicTypeX -> FLOAT .)
    ASSIGN          reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_PLUS         reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_MINUS        reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_TIMES        reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_DIV          reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_MODULO       reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_AND_BIT      reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_OR_BIT       reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_XOR_BIT      reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_LEFT         reduce using rule 91 (BasicTypeX -> FLOAT .)
    EQ_RIGHT        reduce using rule 91 (BasicTypeX -> FLOAT .)
    RBRACKET        reduce using rule 91 (BasicTypeX -> FLOAT .)
    RANGE           reduce using rule 91 (BasicTypeX -> FLOAT .)
    RPAREN          reduce using rule 91 (BasicTypeX -> FLOAT .)
    SEMICOLON       reduce using rule 91 (BasicTypeX -> FLOAT .)
    RBRACE          reduce using rule 91 (BasicTypeX -> FLOAT .)
    COLON           reduce using rule 91 (BasicTypeX -> FLOAT .)
    ELLIPSIS        reduce using rule 91 (BasicTypeX -> FLOAT .)
    BOOL            reduce using rule 91 (BasicTypeX -> FLOAT .)
    SHORT           reduce using rule 91 (BasicTypeX -> FLOAT .)
    USHORT          reduce using rule 91 (BasicTypeX -> FLOAT .)
    INT             reduce using rule 91 (BasicTypeX -> FLOAT .)
    UINT            reduce using rule 91 (BasicTypeX -> FLOAT .)
    LONG            reduce using rule 91 (BasicTypeX -> FLOAT .)
    ULONG           reduce using rule 91 (BasicTypeX -> FLOAT .)
    CHAR            reduce using rule 91 (BasicTypeX -> FLOAT .)
    FLOAT           reduce using rule 91 (BasicTypeX -> FLOAT .)
    VOID            reduce using rule 91 (BasicTypeX -> FLOAT .)
    TYPEOF          reduce using rule 91 (BasicTypeX -> FLOAT .)
    BODY            reduce using rule 91 (BasicTypeX -> FLOAT .)


state 46

    (83) BasicTypeX -> BOOL .

    DOT             reduce using rule 83 (BasicTypeX -> BOOL .)
    LPAREN          reduce using rule 83 (BasicTypeX -> BOOL .)
    COMMA           reduce using rule 83 (BasicTypeX -> BOOL .)
    LBRACE          reduce using rule 83 (BasicTypeX -> BOOL .)
    TIMES           reduce using rule 83 (BasicTypeX -> BOOL .)
    LBRACKET        reduce using rule 83 (BasicTypeX -> BOOL .)
    FUNCTION        reduce using rule 83 (BasicTypeX -> BOOL .)
    IDENTIFIER      reduce using rule 83 (BasicTypeX -> BOOL .)
    POWER           reduce using rule 83 (BasicTypeX -> BOOL .)
    PLUS_PLUS       reduce using rule 83 (BasicTypeX -> BOOL .)
    MINUS_MINUS     reduce using rule 83 (BasicTypeX -> BOOL .)
    DIV             reduce using rule 83 (BasicTypeX -> BOOL .)
    MODULO          reduce using rule 83 (BasicTypeX -> BOOL .)
    PLUS            reduce using rule 83 (BasicTypeX -> BOOL .)
    MINUS           reduce using rule 83 (BasicTypeX -> BOOL .)
    LEFT_SHIFT      reduce using rule 83 (BasicTypeX -> BOOL .)
    RIGHT_SHIFT     reduce using rule 83 (BasicTypeX -> BOOL .)
    IS_EQ           reduce using rule 83 (BasicTypeX -> BOOL .)
    NOT_EQ          reduce using rule 83 (BasicTypeX -> BOOL .)
    LESS            reduce using rule 83 (BasicTypeX -> BOOL .)
    GREATER_EQ      reduce using rule 83 (BasicTypeX -> BOOL .)
    GREATER         reduce using rule 83 (BasicTypeX -> BOOL .)
    LESS_EQ         reduce using rule 83 (BasicTypeX -> BOOL .)
    AMPERSAND       reduce using rule 83 (BasicTypeX -> BOOL .)
    CARET           reduce using rule 83 (BasicTypeX -> BOOL .)
    PIPE            reduce using rule 83 (BasicTypeX -> BOOL .)
    DOUBLE_AMPERSAND reduce using rule 83 (BasicTypeX -> BOOL .)
    QUESTION        reduce using rule 83 (BasicTypeX -> BOOL .)
    DOUBLE_PIPE     reduce using rule 83 (BasicTypeX -> BOOL .)
    ASSIGN          reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_PLUS         reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_MINUS        reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_TIMES        reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_DIV          reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_MODULO       reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_AND_BIT      reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_OR_BIT       reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_XOR_BIT      reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_LEFT         reduce using rule 83 (BasicTypeX -> BOOL .)
    EQ_RIGHT        reduce using rule 83 (BasicTypeX -> BOOL .)
    RBRACKET        reduce using rule 83 (BasicTypeX -> BOOL .)
    RANGE           reduce using rule 83 (BasicTypeX -> BOOL .)
    RPAREN          reduce using rule 83 (BasicTypeX -> BOOL .)
    SEMICOLON       reduce using rule 83 (BasicTypeX -> BOOL .)
    RBRACE          reduce using rule 83 (BasicTypeX -> BOOL .)
    COLON           reduce using rule 83 (BasicTypeX -> BOOL .)
    ELLIPSIS        reduce using rule 83 (BasicTypeX -> BOOL .)
    BOOL            reduce using rule 83 (BasicTypeX -> BOOL .)
    SHORT           reduce using rule 83 (BasicTypeX -> BOOL .)
    USHORT          reduce using rule 83 (BasicTypeX -> BOOL .)
    INT             reduce using rule 83 (BasicTypeX -> BOOL .)
    UINT            reduce using rule 83 (BasicTypeX -> BOOL .)
    LONG            reduce using rule 83 (BasicTypeX -> BOOL .)
    ULONG           reduce using rule 83 (BasicTypeX -> BOOL .)
    CHAR            reduce using rule 83 (BasicTypeX -> BOOL .)
    FLOAT           reduce using rule 83 (BasicTypeX -> BOOL .)
    VOID            reduce using rule 83 (BasicTypeX -> BOOL .)
    TYPEOF          reduce using rule 83 (BasicTypeX -> BOOL .)
    BODY            reduce using rule 83 (BasicTypeX -> BOOL .)


state 47

    (140) Typeof -> TYPEOF . LPAREN Expression RPAREN
    (141) Typeof -> TYPEOF . LPAREN RETURN RPAREN

    LPAREN          shift and go to state 94


state 48

    (1) Declaration_mult -> Declaration Declaration_mult .

    $end            reduce using rule 1 (Declaration_mult -> Declaration Declaration_mult .)


state 49

    (396) ClassDeclaration -> CLASS IDENTIFIER . SEMICOLON
    (397) ClassDeclaration -> CLASS IDENTIFIER . BaseClassList_opt AggregateBody
    (401) BaseClassList_opt -> . BaseClassList
    (402) BaseClassList_opt -> . empty
    (398) BaseClassList -> . COLON SuperClass
    (399) BaseClassList -> . COLON SuperClass COMMA Interfaces
    (400) BaseClassList -> . COLON Interfaces
    (477) empty -> .

    SEMICOLON       shift and go to state 95
    COLON           shift and go to state 97
    LBRACE          reduce using rule 477 (empty -> .)

    BaseClassList                  shift and go to state 96
    BaseClassList_opt              shift and go to state 98
    empty                          shift and go to state 99

state 50

    (395) AggregateBody -> LBRACE . DeclDefs_opt RBRACE
    (5) DeclDefs_opt -> . DeclDefs
    (6) DeclDefs_opt -> . empty
    (3) DeclDefs -> . DeclDef
    (4) DeclDefs -> . DeclDef DeclDefs
    (477) empty -> .
    (7) DeclDef -> . AttributeSpecifier
    (8) DeclDef -> . Declaration
    (9) DeclDef -> . Allocator
    (10) DeclDef -> . Deallocator
    (11) DeclDef -> . AliasThis
    (12) DeclDef -> . MixinDeclaration
    (13) DeclDef -> . SEMICOLON
    (143) AttributeSpecifier -> . Attribute COLON
    (144) AttributeSpecifier -> . Attribute DeclarationBlock
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (407) Allocator -> . NEW Parameters SEMICOLON
    (408) Allocator -> . NEW Parameters FunctionBody
    (409) Deallocator -> . DELETE Parameters SEMICOLON
    (410) Deallocator -> . DELETE Parameters FunctionBody
    (411) AliasThis -> . ALIAS IDENTIFIER THIS SEMICOLON
    (33) MixinDeclaration -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (145) Attribute -> . VisibilityAttribute
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (148) VisibilityAttribute -> . PRIVATE
    (149) VisibilityAttribute -> . PROTECTED
    (150) VisibilityAttribute -> . PUBLIC
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

    RBRACE          reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    SEMICOLON       shift and go to state 103
    NEW             shift and go to state 100
    DELETE          shift and go to state 119
    ALIAS           shift and go to state 113
    MIXIN           shift and go to state 117
    ENUM            shift and go to state 18
    IMPORT          shift and go to state 27
    STATIC          shift and go to state 5
    PRIVATE         shift and go to state 107
    PROTECTED       shift and go to state 116
    PUBLIC          shift and go to state 115
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

    StorageClasses                 shift and go to state 1
    AggregateDeclaration           shift and go to state 4
    FuncDeclaration                shift and go to state 6
    AttributeSpecifier             shift and go to state 101
    StorageClasses_opt             shift and go to state 9
    DeclDefs                       shift and go to state 104
    VisibilityAttribute            shift and go to state 105
    DeclDefs_opt                   shift and go to state 106
    AliasThis                      shift and go to state 108
    DeclDef                        shift and go to state 109
    Deallocator                    shift and go to state 110
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    empty                          shift and go to state 111
    AutoFuncDeclaration            shift and go to state 16
    MixinDeclaration               shift and go to state 102
    Declaration                    shift and go to state 112
    AnonymousEnumDeclaration       shift and go to state 20
    AnonUnionDeclaration           shift and go to state 22
    EnumDeclaration                shift and go to state 24
    Attribute                      shift and go to state 114
    UnionDeclaration               shift and go to state 25
    ImportDeclaration              shift and go to state 10
    ClassDeclaration               shift and go to state 26
    Allocator                      shift and go to state 118
    StorageClass                   shift and go to state 28

state 51

    (394) AnonUnionDeclaration -> UNION AggregateBody .

    SEMICOLON       reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    CASE            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    DEFAULT         reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    LBRACE          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    IDENTIFIER      reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    IF              reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    WHILE           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    DO              reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    FOR             reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    SWITCH          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    FINAL           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    CONTINUE        reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    BREAK           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    RETURN          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    GOTO            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    WITH            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    MIXIN           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    IMPORT          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    STATIC          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    LPAREN          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    ALIAS           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    ENUM            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    EXTERN          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    AUTO            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    CONST           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    IMMUTABLE       reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    FOREACH         reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    FOREACH_REVERSE reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    CLASS           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    UNION           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    AMPERSAND       reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    PLUS_PLUS       reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    MINUS_MINUS     reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    TIMES           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    MINUS           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    PLUS            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    EXCLAMATION     reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    TILDE           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    CAST            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    DOT             reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    THIS            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    NULL            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    TRUE            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    FALSE           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    DOLLAR          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    INUMBER         reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    DNUMBER         reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    LIT_CHAR        reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    LIT_STR         reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    LBRACKET        reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    FUNCTION        reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    NEW             reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    BOOL            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    SHORT           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    USHORT          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    INT             reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    UINT            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    LONG            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    ULONG           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    CHAR            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    FLOAT           reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    VOID            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    TYPEOF          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    TYPEID          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    BODY            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    RBRACE          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    ELSE            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    DELETE          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    PRIVATE         reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    PROTECTED       reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    PUBLIC          reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)
    $end            reduce using rule 394 (AnonUnionDeclaration -> UNION AggregateBody .)


state 52

    (391) UnionDeclaration -> UNION IDENTIFIER . SEMICOLON
    (392) UnionDeclaration -> UNION IDENTIFIER . AggregateBody
    (395) AggregateBody -> . LBRACE DeclDefs_opt RBRACE

    SEMICOLON       shift and go to state 121
    LBRACE          shift and go to state 50

    AggregateBody                  shift and go to state 120

state 53

    (432) AnonymousEnumDeclaration -> ENUM LBRACE . EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> ENUM LBRACE . AnonymousEnumMembers RBRACE
    (426) EnumMembers -> . EnumMember
    (427) EnumMembers -> . EnumMember COMMA
    (428) EnumMembers -> . EnumMember COMMA EnumMembers
    (434) AnonymousEnumMembers -> . AnonymousEnumMember
    (435) AnonymousEnumMembers -> . AnonymousEnumMember COMMA
    (436) AnonymousEnumMembers -> . AnonymousEnumMember COMMA AnonymousEnumMembers
    (429) EnumMember -> . IDENTIFIER
    (430) EnumMember -> . IDENTIFIER ASSIGN AssignExpression
    (437) AnonymousEnumMember -> . EnumMember
    (438) AnonymousEnumMember -> . Type IDENTIFIER ASSIGN AssignExpression
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    IDENTIFIER      shift and go to state 126
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47

    EnumMembers                    shift and go to state 122
    BasicType                      shift and go to state 124
    AnonymousEnumMembers           shift and go to state 125
    AnonymousEnumMember            shift and go to state 128
    EnumMember                     shift and go to state 127
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    Type                           shift and go to state 123

state 54

    (431) AnonymousEnumDeclaration -> ENUM COLON . EnumBaseType LBRACE EnumMembers RBRACE
    (423) EnumBaseType -> . Type
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 124
    EnumBaseType                   shift and go to state 130
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    BasicTypeX                     shift and go to state 38
    Type                           shift and go to state 129

state 55

    (420) EnumDeclaration -> ENUM IDENTIFIER . EnumBody
    (421) EnumDeclaration -> ENUM IDENTIFIER . COLON EnumBaseType EnumBody
    (424) EnumBody -> . LBRACE EnumMembers RBRACE
    (425) EnumBody -> . SEMICOLON

    COLON           shift and go to state 133
    LBRACE          shift and go to state 131
    SEMICOLON       shift and go to state 132

    EnumBody                       shift and go to state 134

state 56

    (108) StorageClass -> STATIC .

    ENUM            reduce using rule 108 (StorageClass -> STATIC .)
    STATIC          reduce using rule 108 (StorageClass -> STATIC .)
    EXTERN          reduce using rule 108 (StorageClass -> STATIC .)
    FINAL           reduce using rule 108 (StorageClass -> STATIC .)
    AUTO            reduce using rule 108 (StorageClass -> STATIC .)
    CONST           reduce using rule 108 (StorageClass -> STATIC .)
    IMMUTABLE       reduce using rule 108 (StorageClass -> STATIC .)
    DOT             reduce using rule 108 (StorageClass -> STATIC .)
    BOOL            reduce using rule 108 (StorageClass -> STATIC .)
    SHORT           reduce using rule 108 (StorageClass -> STATIC .)
    USHORT          reduce using rule 108 (StorageClass -> STATIC .)
    INT             reduce using rule 108 (StorageClass -> STATIC .)
    UINT            reduce using rule 108 (StorageClass -> STATIC .)
    LONG            reduce using rule 108 (StorageClass -> STATIC .)
    ULONG           reduce using rule 108 (StorageClass -> STATIC .)
    CHAR            reduce using rule 108 (StorageClass -> STATIC .)
    FLOAT           reduce using rule 108 (StorageClass -> STATIC .)
    VOID            reduce using rule 108 (StorageClass -> STATIC .)
    IDENTIFIER      reduce using rule 108 (StorageClass -> STATIC .)
    TYPEOF          reduce using rule 108 (StorageClass -> STATIC .)
    ALIAS           reduce using rule 108 (StorageClass -> STATIC .)
    IMPORT          reduce using rule 108 (StorageClass -> STATIC .)
    CLASS           reduce using rule 108 (StorageClass -> STATIC .)
    UNION           reduce using rule 108 (StorageClass -> STATIC .)


state 57

    (133) AliasDeclaration -> ALIAS StorageClasses_opt . BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> ALIAS StorageClasses_opt . BasicType FuncDeclarator SEMICOLON
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 135
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33

state 58

    (136) AliasDeclarationX -> AliasDeclarationY .

    SEMICOLON       reduce using rule 136 (AliasDeclarationX -> AliasDeclarationY .)
    COMMA           reduce using rule 136 (AliasDeclarationX -> AliasDeclarationY .)


state 59

    (135) AliasDeclaration -> ALIAS AliasDeclarationX . SEMICOLON
    (137) AliasDeclarationX -> AliasDeclarationX . COMMA AliasDeclarationY

    SEMICOLON       shift and go to state 137
    COMMA           shift and go to state 136


state 60

    (131) StorageClasses_opt -> StorageClasses .

    DOT             reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    BOOL            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    SHORT           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    USHORT          reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    INT             reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    UINT            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    LONG            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    ULONG           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    CHAR            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    FLOAT           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    VOID            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    IDENTIFIER      reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    TYPEOF          reduce using rule 131 (StorageClasses_opt -> StorageClasses .)


state 61

    (138) AliasDeclarationY -> IDENTIFIER . ASSIGN StorageClasses_opt Type
    (139) AliasDeclarationY -> IDENTIFIER . ASSIGN FunctionLiteral

    ASSIGN          shift and go to state 138


state 62

    (132) StorageClasses_opt -> empty .

    DOT             reduce using rule 132 (StorageClasses_opt -> empty .)
    BOOL            reduce using rule 132 (StorageClasses_opt -> empty .)
    SHORT           reduce using rule 132 (StorageClasses_opt -> empty .)
    USHORT          reduce using rule 132 (StorageClasses_opt -> empty .)
    INT             reduce using rule 132 (StorageClasses_opt -> empty .)
    UINT            reduce using rule 132 (StorageClasses_opt -> empty .)
    LONG            reduce using rule 132 (StorageClasses_opt -> empty .)
    ULONG           reduce using rule 132 (StorageClasses_opt -> empty .)
    CHAR            reduce using rule 132 (StorageClasses_opt -> empty .)
    FLOAT           reduce using rule 132 (StorageClasses_opt -> empty .)
    VOID            reduce using rule 132 (StorageClasses_opt -> empty .)
    IDENTIFIER      reduce using rule 132 (StorageClasses_opt -> empty .)
    TYPEOF          reduce using rule 132 (StorageClasses_opt -> empty .)


state 63

    (107) StorageClass -> ENUM .

    ENUM            reduce using rule 107 (StorageClass -> ENUM .)
    STATIC          reduce using rule 107 (StorageClass -> ENUM .)
    EXTERN          reduce using rule 107 (StorageClass -> ENUM .)
    FINAL           reduce using rule 107 (StorageClass -> ENUM .)
    AUTO            reduce using rule 107 (StorageClass -> ENUM .)
    CONST           reduce using rule 107 (StorageClass -> ENUM .)
    IMMUTABLE       reduce using rule 107 (StorageClass -> ENUM .)
    DOT             reduce using rule 107 (StorageClass -> ENUM .)
    BOOL            reduce using rule 107 (StorageClass -> ENUM .)
    SHORT           reduce using rule 107 (StorageClass -> ENUM .)
    USHORT          reduce using rule 107 (StorageClass -> ENUM .)
    INT             reduce using rule 107 (StorageClass -> ENUM .)
    UINT            reduce using rule 107 (StorageClass -> ENUM .)
    LONG            reduce using rule 107 (StorageClass -> ENUM .)
    ULONG           reduce using rule 107 (StorageClass -> ENUM .)
    CHAR            reduce using rule 107 (StorageClass -> ENUM .)
    FLOAT           reduce using rule 107 (StorageClass -> ENUM .)
    VOID            reduce using rule 107 (StorageClass -> ENUM .)
    IDENTIFIER      reduce using rule 107 (StorageClass -> ENUM .)
    TYPEOF          reduce using rule 107 (StorageClass -> ENUM .)
    ALIAS           reduce using rule 107 (StorageClass -> ENUM .)
    IMPORT          reduce using rule 107 (StorageClass -> ENUM .)
    CLASS           reduce using rule 107 (StorageClass -> ENUM .)
    UNION           reduce using rule 107 (StorageClass -> ENUM .)


state 64

    (25) Import -> ModuleFullyQualifiedName .

    COMMA           reduce using rule 25 (Import -> ModuleFullyQualifiedName .)
    COLON           reduce using rule 25 (Import -> ModuleFullyQualifiedName .)
    SEMICOLON       reduce using rule 25 (Import -> ModuleFullyQualifiedName .)


state 65

    (23) ImportList -> ImportBindings .

    SEMICOLON       reduce using rule 23 (ImportList -> ImportBindings .)


state 66

    (26) Import -> ModuleAliasIdentifier . ASSIGN ModuleFullyQualifiedName

    ASSIGN          shift and go to state 139


state 67

    (20) ImportDeclaration -> IMPORT ImportList . SEMICOLON

    SEMICOLON       shift and go to state 140


state 68

    (17) Packages -> PackageName .

    DOT             reduce using rule 17 (Packages -> PackageName .)


state 69

    (32) ModuleAliasIdentifier -> IDENTIFIER .
    (16) ModuleName -> IDENTIFIER .
    (19) PackageName -> IDENTIFIER .

    ASSIGN          reduce using rule 32 (ModuleAliasIdentifier -> IDENTIFIER .)
    COMMA           reduce using rule 16 (ModuleName -> IDENTIFIER .)
    COLON           reduce using rule 16 (ModuleName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 16 (ModuleName -> IDENTIFIER .)
    DOT             reduce using rule 19 (PackageName -> IDENTIFIER .)


state 70

    (22) ImportList -> Import .
    (24) ImportList -> Import . COMMA ImportList
    (27) ImportBindings -> Import . COLON ImportBindList

    SEMICOLON       reduce using rule 22 (ImportList -> Import .)
    COMMA           shift and go to state 142
    COLON           shift and go to state 141


state 71

    (15) ModuleFullyQualifiedName -> Packages . DOT ModuleName
    (18) Packages -> Packages . DOT PackageName

    DOT             shift and go to state 143


state 72

    (14) ModuleFullyQualifiedName -> ModuleName .

    COMMA           reduce using rule 14 (ModuleFullyQualifiedName -> ModuleName .)
    COLON           reduce using rule 14 (ModuleFullyQualifiedName -> ModuleName .)
    SEMICOLON       reduce using rule 14 (ModuleFullyQualifiedName -> ModuleName .)


state 73

    (106) StorageClasses -> StorageClass StorageClasses .

    IDENTIFIER      reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    ALIAS           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    ENUM            reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    IMPORT          reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    STATIC          reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    CLASS           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    UNION           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    EXTERN          reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    FINAL           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    AUTO            reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    CONST           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    IMMUTABLE       reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    DOT             reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    BOOL            reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    SHORT           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    USHORT          reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    INT             reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    UINT            reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    LONG            reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    ULONG           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    CHAR            reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    FLOAT           reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    VOID            reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)
    TYPEOF          reduce using rule 106 (StorageClasses -> StorageClass StorageClasses .)


state 74

    (442) AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix . FunctionBody
    (470) FunctionBody -> . BlockStatement
    (471) FunctionBody -> . BodyStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    FunctionBody                   shift and go to state 144
    BlockStatement                 shift and go to state 147
    BodyStatement                  shift and go to state 148

state 75

    (444) FuncDeclaratorSuffix -> Parameters . MemberFunctionAttributes_opt
    (465) MemberFunctionAttributes_opt -> . MemberFunctionAttributes
    (466) MemberFunctionAttributes_opt -> . empty
    (463) MemberFunctionAttributes -> . MemberFunctionAttribute
    (464) MemberFunctionAttributes -> . MemberFunctionAttribute MemberFunctionAttributes
    (477) empty -> .
    (467) MemberFunctionAttribute -> . CONST
    (468) MemberFunctionAttribute -> . IMMUTABLE
    (469) MemberFunctionAttribute -> . RETURN

    LBRACE          reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)
    SEMICOLON       reduce using rule 477 (empty -> .)
    CONST           shift and go to state 150
    IMMUTABLE       shift and go to state 154
    RETURN          shift and go to state 149

    MemberFunctionAttributes       shift and go to state 153
    MemberFunctionAttributes_opt   shift and go to state 151
    empty                          shift and go to state 155
    MemberFunctionAttribute        shift and go to state 152

state 76

    (445) Parameters -> LPAREN . ParameterList_opt RPAREN
    (449) ParameterList_opt -> . ParameterList
    (450) ParameterList_opt -> . empty
    (446) ParameterList -> . Parameter
    (447) ParameterList -> . Parameter COMMA ParameterList
    (448) ParameterList -> . ELLIPSIS
    (477) empty -> .
    (451) Parameter -> . InOut_opt BasicType Declarator
    (452) Parameter -> . InOut_opt BasicType Declarator ELLIPSIS
    (453) Parameter -> . InOut_opt BasicType Declarator ASSIGN AssignExpression
    (454) Parameter -> . InOut_opt Type
    (455) Parameter -> . InOut_opt Type ELLIPSIS
    (461) InOut_opt -> . InOut
    (462) InOut_opt -> . empty
    (456) InOut -> . InOutX
    (457) InOut -> . InOut InOutX
    (458) InOutX -> . AUTO
    (459) InOutX -> . FINAL
    (460) InOutX -> . SCOPE

    ELLIPSIS        shift and go to state 162
    RPAREN          reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AUTO            shift and go to state 157
    FINAL           shift and go to state 159
    SCOPE           shift and go to state 158

    InOut_opt                      shift and go to state 156
    InOutX                         shift and go to state 164
    ParameterList                  shift and go to state 160
    InOut                          shift and go to state 161
    ParameterList_opt              shift and go to state 163
    Parameter                      shift and go to state 165
    empty                          shift and go to state 166

state 77

    (21) ImportDeclaration -> STATIC IMPORT ImportList . SEMICOLON

    SEMICOLON       shift and go to state 167


state 78

    (79) BasicType -> DOT IdentifierList .

    LPAREN          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    TIMES           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    LBRACKET        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    FUNCTION        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    IDENTIFIER      reduce using rule 79 (BasicType -> DOT IdentifierList .)
    RPAREN          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    COMMA           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    LBRACE          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    ELLIPSIS        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    DOT             reduce using rule 79 (BasicType -> DOT IdentifierList .)
    BOOL            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    SHORT           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    USHORT          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    INT             reduce using rule 79 (BasicType -> DOT IdentifierList .)
    UINT            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    LONG            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    ULONG           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    CHAR            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    FLOAT           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    VOID            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    TYPEOF          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    POWER           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    PLUS_PLUS       reduce using rule 79 (BasicType -> DOT IdentifierList .)
    MINUS_MINUS     reduce using rule 79 (BasicType -> DOT IdentifierList .)
    DIV             reduce using rule 79 (BasicType -> DOT IdentifierList .)
    MODULO          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    PLUS            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    MINUS           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    LEFT_SHIFT      reduce using rule 79 (BasicType -> DOT IdentifierList .)
    RIGHT_SHIFT     reduce using rule 79 (BasicType -> DOT IdentifierList .)
    IS_EQ           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    NOT_EQ          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    LESS            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    GREATER_EQ      reduce using rule 79 (BasicType -> DOT IdentifierList .)
    GREATER         reduce using rule 79 (BasicType -> DOT IdentifierList .)
    LESS_EQ         reduce using rule 79 (BasicType -> DOT IdentifierList .)
    AMPERSAND       reduce using rule 79 (BasicType -> DOT IdentifierList .)
    CARET           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    PIPE            reduce using rule 79 (BasicType -> DOT IdentifierList .)
    DOUBLE_AMPERSAND reduce using rule 79 (BasicType -> DOT IdentifierList .)
    QUESTION        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    DOUBLE_PIPE     reduce using rule 79 (BasicType -> DOT IdentifierList .)
    ASSIGN          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_PLUS         reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_MINUS        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_TIMES        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_DIV          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_MODULO       reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_AND_BIT      reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_OR_BIT       reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_XOR_BIT      reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_LEFT         reduce using rule 79 (BasicType -> DOT IdentifierList .)
    EQ_RIGHT        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    RBRACKET        reduce using rule 79 (BasicType -> DOT IdentifierList .)
    RANGE           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    SEMICOLON       reduce using rule 79 (BasicType -> DOT IdentifierList .)
    RBRACE          reduce using rule 79 (BasicType -> DOT IdentifierList .)
    COLON           reduce using rule 79 (BasicType -> DOT IdentifierList .)
    BODY            reduce using rule 79 (BasicType -> DOT IdentifierList .)


state 79

    (43) DeclaratorInitializer -> VarDeclarator .
    (44) DeclaratorInitializer -> VarDeclarator . ASSIGN Initializer

    COMMA           reduce using rule 43 (DeclaratorInitializer -> VarDeclarator .)
    SEMICOLON       reduce using rule 43 (DeclaratorInitializer -> VarDeclarator .)
    ASSIGN          shift and go to state 168


state 80

    (97) BasicType2X -> LBRACKET . RBRACKET
    (98) BasicType2X -> LBRACKET . AssignExpression RBRACKET
    (99) BasicType2X -> LBRACKET . AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> LBRACKET . Type RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (75) Type -> . BasicType BasicType2_opt
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RBRACKET        shift and go to state 232
    DOT             shift and go to state 203
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 214
    TYPEOF          shift and go to state 47
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 189
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    Type                           shift and go to state 191
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 207
    BasicTypeX                     shift and go to state 222
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 196
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 233

state 81

    (93) BasicType2 -> BasicType2X . BasicType2_opt
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    LBRACE          reduce using rule 477 (empty -> .)
    SEMICOLON       reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)
    COMMA           reduce using rule 477 (empty -> .)
    RPAREN          reduce using rule 477 (empty -> .)
    POWER           reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    PLUS_PLUS       reduce using rule 477 (empty -> .)
    MINUS_MINUS     reduce using rule 477 (empty -> .)
    DIV             reduce using rule 477 (empty -> .)
    MODULO          reduce using rule 477 (empty -> .)
    PLUS            reduce using rule 477 (empty -> .)
    MINUS           reduce using rule 477 (empty -> .)
    LEFT_SHIFT      reduce using rule 477 (empty -> .)
    RIGHT_SHIFT     reduce using rule 477 (empty -> .)
    IS_EQ           reduce using rule 477 (empty -> .)
    NOT_EQ          reduce using rule 477 (empty -> .)
    LESS            reduce using rule 477 (empty -> .)
    GREATER_EQ      reduce using rule 477 (empty -> .)
    GREATER         reduce using rule 477 (empty -> .)
    LESS_EQ         reduce using rule 477 (empty -> .)
    AMPERSAND       reduce using rule 477 (empty -> .)
    CARET           reduce using rule 477 (empty -> .)
    PIPE            reduce using rule 477 (empty -> .)
    DOUBLE_AMPERSAND reduce using rule 477 (empty -> .)
    QUESTION        reduce using rule 477 (empty -> .)
    DOUBLE_PIPE     reduce using rule 477 (empty -> .)
    ASSIGN          reduce using rule 477 (empty -> .)
    EQ_PLUS         reduce using rule 477 (empty -> .)
    EQ_MINUS        reduce using rule 477 (empty -> .)
    EQ_TIMES        reduce using rule 477 (empty -> .)
    EQ_DIV          reduce using rule 477 (empty -> .)
    EQ_MODULO       reduce using rule 477 (empty -> .)
    EQ_AND_BIT      reduce using rule 477 (empty -> .)
    EQ_OR_BIT       reduce using rule 477 (empty -> .)
    EQ_XOR_BIT      reduce using rule 477 (empty -> .)
    EQ_LEFT         reduce using rule 477 (empty -> .)
    EQ_RIGHT        reduce using rule 477 (empty -> .)
    RBRACKET        reduce using rule 477 (empty -> .)
    RANGE           reduce using rule 477 (empty -> .)
    RBRACE          reduce using rule 477 (empty -> .)
    COLON           reduce using rule 477 (empty -> .)
    ELLIPSIS        reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

  ! LBRACKET        [ reduce using rule 477 (empty -> .) ]
  ! TIMES           [ reduce using rule 477 (empty -> .) ]

    BasicType2_opt                 shift and go to state 234
    BasicType2X                    shift and go to state 81
    BasicType2                     shift and go to state 90
    empty                          shift and go to state 86

state 82

    (443) FuncDeclarator -> BasicType2_opt . IDENTIFIER FuncDeclaratorSuffix
    (59) VarDeclarator -> BasicType2_opt . IDENTIFIER
    (60) AltDeclarator -> BasicType2_opt . IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes

    IDENTIFIER      shift and go to state 236
    LPAREN          shift and go to state 235


state 83

    (41) Declarators -> DeclaratorInitializer .
    (42) Declarators -> DeclaratorInitializer . COMMA DeclaratorIdentifierList

    SEMICOLON       reduce using rule 41 (Declarators -> DeclaratorInitializer .)
    COMMA           shift and go to state 237


state 84

    (40) VarDeclarations -> StorageClasses_opt BasicType Declarators . SEMICOLON

    SEMICOLON       shift and go to state 238


state 85

    (45) DeclaratorInitializer -> AltDeclarator . ASSIGN Initializer
    (46) DeclaratorInitializer -> AltDeclarator .

    ASSIGN          shift and go to state 239
    COMMA           reduce using rule 46 (DeclaratorInitializer -> AltDeclarator .)
    SEMICOLON       reduce using rule 46 (DeclaratorInitializer -> AltDeclarator .)


state 86

    (95) BasicType2_opt -> empty .

    IDENTIFIER      reduce using rule 95 (BasicType2_opt -> empty .)
    LPAREN          reduce using rule 95 (BasicType2_opt -> empty .)
    RBRACKET        reduce using rule 95 (BasicType2_opt -> empty .)
    RPAREN          reduce using rule 95 (BasicType2_opt -> empty .)
    LBRACE          reduce using rule 95 (BasicType2_opt -> empty .)
    SEMICOLON       reduce using rule 95 (BasicType2_opt -> empty .)
    BODY            reduce using rule 95 (BasicType2_opt -> empty .)
    COMMA           reduce using rule 95 (BasicType2_opt -> empty .)
    LBRACKET        reduce using rule 95 (BasicType2_opt -> empty .)
    POWER           reduce using rule 95 (BasicType2_opt -> empty .)
    DOT             reduce using rule 95 (BasicType2_opt -> empty .)
    PLUS_PLUS       reduce using rule 95 (BasicType2_opt -> empty .)
    MINUS_MINUS     reduce using rule 95 (BasicType2_opt -> empty .)
    TIMES           reduce using rule 95 (BasicType2_opt -> empty .)
    DIV             reduce using rule 95 (BasicType2_opt -> empty .)
    MODULO          reduce using rule 95 (BasicType2_opt -> empty .)
    PLUS            reduce using rule 95 (BasicType2_opt -> empty .)
    MINUS           reduce using rule 95 (BasicType2_opt -> empty .)
    LEFT_SHIFT      reduce using rule 95 (BasicType2_opt -> empty .)
    RIGHT_SHIFT     reduce using rule 95 (BasicType2_opt -> empty .)
    IS_EQ           reduce using rule 95 (BasicType2_opt -> empty .)
    NOT_EQ          reduce using rule 95 (BasicType2_opt -> empty .)
    LESS            reduce using rule 95 (BasicType2_opt -> empty .)
    GREATER_EQ      reduce using rule 95 (BasicType2_opt -> empty .)
    GREATER         reduce using rule 95 (BasicType2_opt -> empty .)
    LESS_EQ         reduce using rule 95 (BasicType2_opt -> empty .)
    AMPERSAND       reduce using rule 95 (BasicType2_opt -> empty .)
    CARET           reduce using rule 95 (BasicType2_opt -> empty .)
    PIPE            reduce using rule 95 (BasicType2_opt -> empty .)
    DOUBLE_AMPERSAND reduce using rule 95 (BasicType2_opt -> empty .)
    QUESTION        reduce using rule 95 (BasicType2_opt -> empty .)
    DOUBLE_PIPE     reduce using rule 95 (BasicType2_opt -> empty .)
    ASSIGN          reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_PLUS         reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_MINUS        reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_TIMES        reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_DIV          reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_MODULO       reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_AND_BIT      reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_OR_BIT       reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_XOR_BIT      reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_LEFT         reduce using rule 95 (BasicType2_opt -> empty .)
    EQ_RIGHT        reduce using rule 95 (BasicType2_opt -> empty .)
    RANGE           reduce using rule 95 (BasicType2_opt -> empty .)
    RBRACE          reduce using rule 95 (BasicType2_opt -> empty .)
    COLON           reduce using rule 95 (BasicType2_opt -> empty .)
    ELLIPSIS        reduce using rule 95 (BasicType2_opt -> empty .)


state 87

    (101) BasicType2X -> FUNCTION . Parameters
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN

    LPAREN          shift and go to state 76

    Parameters                     shift and go to state 240

state 88

    (96) BasicType2X -> TIMES .

    TIMES           reduce using rule 96 (BasicType2X -> TIMES .)
    LBRACKET        reduce using rule 96 (BasicType2X -> TIMES .)
    FUNCTION        reduce using rule 96 (BasicType2X -> TIMES .)
    IDENTIFIER      reduce using rule 96 (BasicType2X -> TIMES .)
    LBRACE          reduce using rule 96 (BasicType2X -> TIMES .)
    SEMICOLON       reduce using rule 96 (BasicType2X -> TIMES .)
    BODY            reduce using rule 96 (BasicType2X -> TIMES .)
    COMMA           reduce using rule 96 (BasicType2X -> TIMES .)
    LPAREN          reduce using rule 96 (BasicType2X -> TIMES .)
    RPAREN          reduce using rule 96 (BasicType2X -> TIMES .)
    POWER           reduce using rule 96 (BasicType2X -> TIMES .)
    DOT             reduce using rule 96 (BasicType2X -> TIMES .)
    PLUS_PLUS       reduce using rule 96 (BasicType2X -> TIMES .)
    MINUS_MINUS     reduce using rule 96 (BasicType2X -> TIMES .)
    DIV             reduce using rule 96 (BasicType2X -> TIMES .)
    MODULO          reduce using rule 96 (BasicType2X -> TIMES .)
    PLUS            reduce using rule 96 (BasicType2X -> TIMES .)
    MINUS           reduce using rule 96 (BasicType2X -> TIMES .)
    LEFT_SHIFT      reduce using rule 96 (BasicType2X -> TIMES .)
    RIGHT_SHIFT     reduce using rule 96 (BasicType2X -> TIMES .)
    IS_EQ           reduce using rule 96 (BasicType2X -> TIMES .)
    NOT_EQ          reduce using rule 96 (BasicType2X -> TIMES .)
    LESS            reduce using rule 96 (BasicType2X -> TIMES .)
    GREATER_EQ      reduce using rule 96 (BasicType2X -> TIMES .)
    GREATER         reduce using rule 96 (BasicType2X -> TIMES .)
    LESS_EQ         reduce using rule 96 (BasicType2X -> TIMES .)
    AMPERSAND       reduce using rule 96 (BasicType2X -> TIMES .)
    CARET           reduce using rule 96 (BasicType2X -> TIMES .)
    PIPE            reduce using rule 96 (BasicType2X -> TIMES .)
    DOUBLE_AMPERSAND reduce using rule 96 (BasicType2X -> TIMES .)
    QUESTION        reduce using rule 96 (BasicType2X -> TIMES .)
    DOUBLE_PIPE     reduce using rule 96 (BasicType2X -> TIMES .)
    ASSIGN          reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_PLUS         reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_MINUS        reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_TIMES        reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_DIV          reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_MODULO       reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_AND_BIT      reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_OR_BIT       reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_XOR_BIT      reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_LEFT         reduce using rule 96 (BasicType2X -> TIMES .)
    EQ_RIGHT        reduce using rule 96 (BasicType2X -> TIMES .)
    RBRACKET        reduce using rule 96 (BasicType2X -> TIMES .)
    RANGE           reduce using rule 96 (BasicType2X -> TIMES .)
    RBRACE          reduce using rule 96 (BasicType2X -> TIMES .)
    COLON           reduce using rule 96 (BasicType2X -> TIMES .)
    ELLIPSIS        reduce using rule 96 (BasicType2X -> TIMES .)


state 89

    (439) FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator . FunctionBody
    (440) FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator . SEMICOLON
    (470) FunctionBody -> . BlockStatement
    (471) FunctionBody -> . BodyStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    SEMICOLON       shift and go to state 242
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    FunctionBody                   shift and go to state 241
    BlockStatement                 shift and go to state 147
    BodyStatement                  shift and go to state 148

state 90

    (94) BasicType2_opt -> BasicType2 .

    IDENTIFIER      reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    LPAREN          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    RBRACKET        reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    RPAREN          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    LBRACE          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    SEMICOLON       reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    BODY            reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    COMMA           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    LBRACKET        reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    POWER           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    DOT             reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    PLUS_PLUS       reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    MINUS_MINUS     reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    TIMES           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    DIV             reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    MODULO          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    PLUS            reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    MINUS           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    LEFT_SHIFT      reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    RIGHT_SHIFT     reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    IS_EQ           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    NOT_EQ          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    LESS            reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    GREATER_EQ      reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    GREATER         reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    LESS_EQ         reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    AMPERSAND       reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    CARET           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    PIPE            reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    DOUBLE_AMPERSAND reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    QUESTION        reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    DOUBLE_PIPE     reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    ASSIGN          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_PLUS         reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_MINUS        reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_TIMES        reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_DIV          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_MODULO       reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_AND_BIT      reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_OR_BIT       reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_XOR_BIT      reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_LEFT         reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    EQ_RIGHT        reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    RANGE           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    RBRACE          reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    COLON           reduce using rule 94 (BasicType2_opt -> BasicType2 .)
    ELLIPSIS        reduce using rule 94 (BasicType2_opt -> BasicType2 .)


state 91

    (104) IdentifierList -> IDENTIFIER LBRACKET . AssignExpression RBRACKET DOT IdentifierList
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 249

state 92

    (103) IdentifierList -> IDENTIFIER DOT . IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 39

    IdentifierList                 shift and go to state 250

state 93

    (82) BasicType -> Typeof DOT . IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 39

    IdentifierList                 shift and go to state 251

state 94

    (140) Typeof -> TYPEOF LPAREN . Expression RPAREN
    (141) Typeof -> TYPEOF LPAREN . RETURN RPAREN
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RETURN          shift and go to state 252
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 253
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 95

    (396) ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .

    SEMICOLON       reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    IF              reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    DO              reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    FINAL           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    CONTINUE        reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    GOTO            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    WITH            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    MIXIN           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    IMPORT          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    ALIAS           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    ENUM            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    EXTERN          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    AUTO            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    CONST           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    IMMUTABLE       reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    FOREACH         reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    FOREACH_REVERSE reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    CLASS           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    UNION           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    AMPERSAND       reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    PLUS_PLUS       reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    MINUS_MINUS     reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    TIMES           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    EXCLAMATION     reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    TILDE           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    CAST            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    DOT             reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    NULL            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    TRUE            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    FALSE           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    DOLLAR          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    INUMBER         reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    DNUMBER         reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    LIT_CHAR        reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    LIT_STR         reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    LBRACKET        reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    FUNCTION        reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    NEW             reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    SHORT           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    USHORT          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    INT             reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    UINT            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    LONG            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    ULONG           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    TYPEOF          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    TYPEID          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    BODY            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    DELETE          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    PRIVATE         reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    PROTECTED       reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    PUBLIC          reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)
    $end            reduce using rule 396 (ClassDeclaration -> CLASS IDENTIFIER SEMICOLON .)


state 96

    (401) BaseClassList_opt -> BaseClassList .

    LBRACE          reduce using rule 401 (BaseClassList_opt -> BaseClassList .)


state 97

    (398) BaseClassList -> COLON . SuperClass
    (399) BaseClassList -> COLON . SuperClass COMMA Interfaces
    (400) BaseClassList -> COLON . Interfaces
    (403) SuperClass -> . BasicType
    (404) Interfaces -> . Interface
    (405) Interfaces -> . Interface COMMA Interfaces
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (406) Interface -> . BasicType
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    Interfaces                     shift and go to state 257
    BasicType                      shift and go to state 258
    BasicTypeX                     shift and go to state 38
    SuperClass                     shift and go to state 256
    IdentifierList                 shift and go to state 33
    Interface                      shift and go to state 259
    Typeof                         shift and go to state 42

state 98

    (397) ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt . AggregateBody
    (395) AggregateBody -> . LBRACE DeclDefs_opt RBRACE

    LBRACE          shift and go to state 50

    AggregateBody                  shift and go to state 260

state 99

    (402) BaseClassList_opt -> empty .

    LBRACE          reduce using rule 402 (BaseClassList_opt -> empty .)


state 100

    (407) Allocator -> NEW . Parameters SEMICOLON
    (408) Allocator -> NEW . Parameters FunctionBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN

    LPAREN          shift and go to state 76

    Parameters                     shift and go to state 261

state 101

    (7) DeclDef -> AttributeSpecifier .

    SEMICOLON       reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    NEW             reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    DELETE          reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    ALIAS           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    MIXIN           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    ENUM            reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    IMPORT          reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    STATIC          reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    PRIVATE         reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    PROTECTED       reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    PUBLIC          reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    CLASS           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    UNION           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    EXTERN          reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    FINAL           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    AUTO            reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    CONST           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    IMMUTABLE       reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    DOT             reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    BOOL            reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    SHORT           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    USHORT          reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    INT             reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    UINT            reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    LONG            reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    ULONG           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    CHAR            reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    FLOAT           reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    VOID            reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    IDENTIFIER      reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    TYPEOF          reduce using rule 7 (DeclDef -> AttributeSpecifier .)
    RBRACE          reduce using rule 7 (DeclDef -> AttributeSpecifier .)


state 102

    (12) DeclDef -> MixinDeclaration .

    SEMICOLON       reduce using rule 12 (DeclDef -> MixinDeclaration .)
    NEW             reduce using rule 12 (DeclDef -> MixinDeclaration .)
    DELETE          reduce using rule 12 (DeclDef -> MixinDeclaration .)
    ALIAS           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    MIXIN           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    ENUM            reduce using rule 12 (DeclDef -> MixinDeclaration .)
    IMPORT          reduce using rule 12 (DeclDef -> MixinDeclaration .)
    STATIC          reduce using rule 12 (DeclDef -> MixinDeclaration .)
    PRIVATE         reduce using rule 12 (DeclDef -> MixinDeclaration .)
    PROTECTED       reduce using rule 12 (DeclDef -> MixinDeclaration .)
    PUBLIC          reduce using rule 12 (DeclDef -> MixinDeclaration .)
    CLASS           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    UNION           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    EXTERN          reduce using rule 12 (DeclDef -> MixinDeclaration .)
    FINAL           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    AUTO            reduce using rule 12 (DeclDef -> MixinDeclaration .)
    CONST           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    IMMUTABLE       reduce using rule 12 (DeclDef -> MixinDeclaration .)
    DOT             reduce using rule 12 (DeclDef -> MixinDeclaration .)
    BOOL            reduce using rule 12 (DeclDef -> MixinDeclaration .)
    SHORT           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    USHORT          reduce using rule 12 (DeclDef -> MixinDeclaration .)
    INT             reduce using rule 12 (DeclDef -> MixinDeclaration .)
    UINT            reduce using rule 12 (DeclDef -> MixinDeclaration .)
    LONG            reduce using rule 12 (DeclDef -> MixinDeclaration .)
    ULONG           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    CHAR            reduce using rule 12 (DeclDef -> MixinDeclaration .)
    FLOAT           reduce using rule 12 (DeclDef -> MixinDeclaration .)
    VOID            reduce using rule 12 (DeclDef -> MixinDeclaration .)
    IDENTIFIER      reduce using rule 12 (DeclDef -> MixinDeclaration .)
    TYPEOF          reduce using rule 12 (DeclDef -> MixinDeclaration .)
    RBRACE          reduce using rule 12 (DeclDef -> MixinDeclaration .)


state 103

    (13) DeclDef -> SEMICOLON .

    SEMICOLON       reduce using rule 13 (DeclDef -> SEMICOLON .)
    NEW             reduce using rule 13 (DeclDef -> SEMICOLON .)
    DELETE          reduce using rule 13 (DeclDef -> SEMICOLON .)
    ALIAS           reduce using rule 13 (DeclDef -> SEMICOLON .)
    MIXIN           reduce using rule 13 (DeclDef -> SEMICOLON .)
    ENUM            reduce using rule 13 (DeclDef -> SEMICOLON .)
    IMPORT          reduce using rule 13 (DeclDef -> SEMICOLON .)
    STATIC          reduce using rule 13 (DeclDef -> SEMICOLON .)
    PRIVATE         reduce using rule 13 (DeclDef -> SEMICOLON .)
    PROTECTED       reduce using rule 13 (DeclDef -> SEMICOLON .)
    PUBLIC          reduce using rule 13 (DeclDef -> SEMICOLON .)
    CLASS           reduce using rule 13 (DeclDef -> SEMICOLON .)
    UNION           reduce using rule 13 (DeclDef -> SEMICOLON .)
    EXTERN          reduce using rule 13 (DeclDef -> SEMICOLON .)
    FINAL           reduce using rule 13 (DeclDef -> SEMICOLON .)
    AUTO            reduce using rule 13 (DeclDef -> SEMICOLON .)
    CONST           reduce using rule 13 (DeclDef -> SEMICOLON .)
    IMMUTABLE       reduce using rule 13 (DeclDef -> SEMICOLON .)
    DOT             reduce using rule 13 (DeclDef -> SEMICOLON .)
    BOOL            reduce using rule 13 (DeclDef -> SEMICOLON .)
    SHORT           reduce using rule 13 (DeclDef -> SEMICOLON .)
    USHORT          reduce using rule 13 (DeclDef -> SEMICOLON .)
    INT             reduce using rule 13 (DeclDef -> SEMICOLON .)
    UINT            reduce using rule 13 (DeclDef -> SEMICOLON .)
    LONG            reduce using rule 13 (DeclDef -> SEMICOLON .)
    ULONG           reduce using rule 13 (DeclDef -> SEMICOLON .)
    CHAR            reduce using rule 13 (DeclDef -> SEMICOLON .)
    FLOAT           reduce using rule 13 (DeclDef -> SEMICOLON .)
    VOID            reduce using rule 13 (DeclDef -> SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (DeclDef -> SEMICOLON .)
    TYPEOF          reduce using rule 13 (DeclDef -> SEMICOLON .)
    RBRACE          reduce using rule 13 (DeclDef -> SEMICOLON .)


state 104

    (5) DeclDefs_opt -> DeclDefs .

    RBRACE          reduce using rule 5 (DeclDefs_opt -> DeclDefs .)


state 105

    (145) Attribute -> VisibilityAttribute .

    COLON           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    LBRACE          reduce using rule 145 (Attribute -> VisibilityAttribute .)
    SEMICOLON       reduce using rule 145 (Attribute -> VisibilityAttribute .)
    NEW             reduce using rule 145 (Attribute -> VisibilityAttribute .)
    DELETE          reduce using rule 145 (Attribute -> VisibilityAttribute .)
    ALIAS           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    MIXIN           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    ENUM            reduce using rule 145 (Attribute -> VisibilityAttribute .)
    IMPORT          reduce using rule 145 (Attribute -> VisibilityAttribute .)
    STATIC          reduce using rule 145 (Attribute -> VisibilityAttribute .)
    PRIVATE         reduce using rule 145 (Attribute -> VisibilityAttribute .)
    PROTECTED       reduce using rule 145 (Attribute -> VisibilityAttribute .)
    PUBLIC          reduce using rule 145 (Attribute -> VisibilityAttribute .)
    CLASS           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    UNION           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    EXTERN          reduce using rule 145 (Attribute -> VisibilityAttribute .)
    FINAL           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    AUTO            reduce using rule 145 (Attribute -> VisibilityAttribute .)
    CONST           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    IMMUTABLE       reduce using rule 145 (Attribute -> VisibilityAttribute .)
    DOT             reduce using rule 145 (Attribute -> VisibilityAttribute .)
    BOOL            reduce using rule 145 (Attribute -> VisibilityAttribute .)
    SHORT           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    USHORT          reduce using rule 145 (Attribute -> VisibilityAttribute .)
    INT             reduce using rule 145 (Attribute -> VisibilityAttribute .)
    UINT            reduce using rule 145 (Attribute -> VisibilityAttribute .)
    LONG            reduce using rule 145 (Attribute -> VisibilityAttribute .)
    ULONG           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    CHAR            reduce using rule 145 (Attribute -> VisibilityAttribute .)
    FLOAT           reduce using rule 145 (Attribute -> VisibilityAttribute .)
    VOID            reduce using rule 145 (Attribute -> VisibilityAttribute .)
    IDENTIFIER      reduce using rule 145 (Attribute -> VisibilityAttribute .)
    TYPEOF          reduce using rule 145 (Attribute -> VisibilityAttribute .)


state 106

    (395) AggregateBody -> LBRACE DeclDefs_opt . RBRACE

    RBRACE          shift and go to state 262


state 107

    (148) VisibilityAttribute -> PRIVATE .

    COLON           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    LBRACE          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    SEMICOLON       reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    NEW             reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    DELETE          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    ALIAS           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    MIXIN           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    ENUM            reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    IMPORT          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    STATIC          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    PRIVATE         reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    PROTECTED       reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    PUBLIC          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    CLASS           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    UNION           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    EXTERN          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    FINAL           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    AUTO            reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    CONST           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    IMMUTABLE       reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    DOT             reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    BOOL            reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    SHORT           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    USHORT          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    INT             reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    UINT            reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    LONG            reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    ULONG           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    CHAR            reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    FLOAT           reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    VOID            reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    IDENTIFIER      reduce using rule 148 (VisibilityAttribute -> PRIVATE .)
    TYPEOF          reduce using rule 148 (VisibilityAttribute -> PRIVATE .)


state 108

    (11) DeclDef -> AliasThis .

    SEMICOLON       reduce using rule 11 (DeclDef -> AliasThis .)
    NEW             reduce using rule 11 (DeclDef -> AliasThis .)
    DELETE          reduce using rule 11 (DeclDef -> AliasThis .)
    ALIAS           reduce using rule 11 (DeclDef -> AliasThis .)
    MIXIN           reduce using rule 11 (DeclDef -> AliasThis .)
    ENUM            reduce using rule 11 (DeclDef -> AliasThis .)
    IMPORT          reduce using rule 11 (DeclDef -> AliasThis .)
    STATIC          reduce using rule 11 (DeclDef -> AliasThis .)
    PRIVATE         reduce using rule 11 (DeclDef -> AliasThis .)
    PROTECTED       reduce using rule 11 (DeclDef -> AliasThis .)
    PUBLIC          reduce using rule 11 (DeclDef -> AliasThis .)
    CLASS           reduce using rule 11 (DeclDef -> AliasThis .)
    UNION           reduce using rule 11 (DeclDef -> AliasThis .)
    EXTERN          reduce using rule 11 (DeclDef -> AliasThis .)
    FINAL           reduce using rule 11 (DeclDef -> AliasThis .)
    AUTO            reduce using rule 11 (DeclDef -> AliasThis .)
    CONST           reduce using rule 11 (DeclDef -> AliasThis .)
    IMMUTABLE       reduce using rule 11 (DeclDef -> AliasThis .)
    DOT             reduce using rule 11 (DeclDef -> AliasThis .)
    BOOL            reduce using rule 11 (DeclDef -> AliasThis .)
    SHORT           reduce using rule 11 (DeclDef -> AliasThis .)
    USHORT          reduce using rule 11 (DeclDef -> AliasThis .)
    INT             reduce using rule 11 (DeclDef -> AliasThis .)
    UINT            reduce using rule 11 (DeclDef -> AliasThis .)
    LONG            reduce using rule 11 (DeclDef -> AliasThis .)
    ULONG           reduce using rule 11 (DeclDef -> AliasThis .)
    CHAR            reduce using rule 11 (DeclDef -> AliasThis .)
    FLOAT           reduce using rule 11 (DeclDef -> AliasThis .)
    VOID            reduce using rule 11 (DeclDef -> AliasThis .)
    IDENTIFIER      reduce using rule 11 (DeclDef -> AliasThis .)
    TYPEOF          reduce using rule 11 (DeclDef -> AliasThis .)
    RBRACE          reduce using rule 11 (DeclDef -> AliasThis .)


state 109

    (3) DeclDefs -> DeclDef .
    (4) DeclDefs -> DeclDef . DeclDefs
    (3) DeclDefs -> . DeclDef
    (4) DeclDefs -> . DeclDef DeclDefs
    (7) DeclDef -> . AttributeSpecifier
    (8) DeclDef -> . Declaration
    (9) DeclDef -> . Allocator
    (10) DeclDef -> . Deallocator
    (11) DeclDef -> . AliasThis
    (12) DeclDef -> . MixinDeclaration
    (13) DeclDef -> . SEMICOLON
    (143) AttributeSpecifier -> . Attribute COLON
    (144) AttributeSpecifier -> . Attribute DeclarationBlock
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (407) Allocator -> . NEW Parameters SEMICOLON
    (408) Allocator -> . NEW Parameters FunctionBody
    (409) Deallocator -> . DELETE Parameters SEMICOLON
    (410) Deallocator -> . DELETE Parameters FunctionBody
    (411) AliasThis -> . ALIAS IDENTIFIER THIS SEMICOLON
    (33) MixinDeclaration -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (145) Attribute -> . VisibilityAttribute
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (148) VisibilityAttribute -> . PRIVATE
    (149) VisibilityAttribute -> . PROTECTED
    (150) VisibilityAttribute -> . PUBLIC
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

    RBRACE          reduce using rule 3 (DeclDefs -> DeclDef .)
    SEMICOLON       shift and go to state 103
    NEW             shift and go to state 100
    DELETE          shift and go to state 119
    ALIAS           shift and go to state 113
    MIXIN           shift and go to state 117
    ENUM            shift and go to state 18
    IMPORT          shift and go to state 27
    STATIC          shift and go to state 5
    PRIVATE         shift and go to state 107
    PROTECTED       shift and go to state 116
    PUBLIC          shift and go to state 115
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

    StorageClasses                 shift and go to state 1
    AggregateDeclaration           shift and go to state 4
    FuncDeclaration                shift and go to state 6
    AttributeSpecifier             shift and go to state 101
    StorageClasses_opt             shift and go to state 9
    DeclDefs                       shift and go to state 263
    VisibilityAttribute            shift and go to state 105
    AliasThis                      shift and go to state 108
    DeclDef                        shift and go to state 109
    Declaration                    shift and go to state 112
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    empty                          shift and go to state 62
    AutoFuncDeclaration            shift and go to state 16
    MixinDeclaration               shift and go to state 102
    Deallocator                    shift and go to state 110
    AnonymousEnumDeclaration       shift and go to state 20
    AnonUnionDeclaration           shift and go to state 22
    EnumDeclaration                shift and go to state 24
    Attribute                      shift and go to state 114
    UnionDeclaration               shift and go to state 25
    ImportDeclaration              shift and go to state 10
    ClassDeclaration               shift and go to state 26
    Allocator                      shift and go to state 118
    StorageClass                   shift and go to state 28

state 110

    (10) DeclDef -> Deallocator .

    SEMICOLON       reduce using rule 10 (DeclDef -> Deallocator .)
    NEW             reduce using rule 10 (DeclDef -> Deallocator .)
    DELETE          reduce using rule 10 (DeclDef -> Deallocator .)
    ALIAS           reduce using rule 10 (DeclDef -> Deallocator .)
    MIXIN           reduce using rule 10 (DeclDef -> Deallocator .)
    ENUM            reduce using rule 10 (DeclDef -> Deallocator .)
    IMPORT          reduce using rule 10 (DeclDef -> Deallocator .)
    STATIC          reduce using rule 10 (DeclDef -> Deallocator .)
    PRIVATE         reduce using rule 10 (DeclDef -> Deallocator .)
    PROTECTED       reduce using rule 10 (DeclDef -> Deallocator .)
    PUBLIC          reduce using rule 10 (DeclDef -> Deallocator .)
    CLASS           reduce using rule 10 (DeclDef -> Deallocator .)
    UNION           reduce using rule 10 (DeclDef -> Deallocator .)
    EXTERN          reduce using rule 10 (DeclDef -> Deallocator .)
    FINAL           reduce using rule 10 (DeclDef -> Deallocator .)
    AUTO            reduce using rule 10 (DeclDef -> Deallocator .)
    CONST           reduce using rule 10 (DeclDef -> Deallocator .)
    IMMUTABLE       reduce using rule 10 (DeclDef -> Deallocator .)
    DOT             reduce using rule 10 (DeclDef -> Deallocator .)
    BOOL            reduce using rule 10 (DeclDef -> Deallocator .)
    SHORT           reduce using rule 10 (DeclDef -> Deallocator .)
    USHORT          reduce using rule 10 (DeclDef -> Deallocator .)
    INT             reduce using rule 10 (DeclDef -> Deallocator .)
    UINT            reduce using rule 10 (DeclDef -> Deallocator .)
    LONG            reduce using rule 10 (DeclDef -> Deallocator .)
    ULONG           reduce using rule 10 (DeclDef -> Deallocator .)
    CHAR            reduce using rule 10 (DeclDef -> Deallocator .)
    FLOAT           reduce using rule 10 (DeclDef -> Deallocator .)
    VOID            reduce using rule 10 (DeclDef -> Deallocator .)
    IDENTIFIER      reduce using rule 10 (DeclDef -> Deallocator .)
    TYPEOF          reduce using rule 10 (DeclDef -> Deallocator .)
    RBRACE          reduce using rule 10 (DeclDef -> Deallocator .)


state 111

    (6) DeclDefs_opt -> empty .
    (132) StorageClasses_opt -> empty .

    RBRACE          reduce using rule 6 (DeclDefs_opt -> empty .)
    DOT             reduce using rule 132 (StorageClasses_opt -> empty .)
    BOOL            reduce using rule 132 (StorageClasses_opt -> empty .)
    SHORT           reduce using rule 132 (StorageClasses_opt -> empty .)
    USHORT          reduce using rule 132 (StorageClasses_opt -> empty .)
    INT             reduce using rule 132 (StorageClasses_opt -> empty .)
    UINT            reduce using rule 132 (StorageClasses_opt -> empty .)
    LONG            reduce using rule 132 (StorageClasses_opt -> empty .)
    ULONG           reduce using rule 132 (StorageClasses_opt -> empty .)
    CHAR            reduce using rule 132 (StorageClasses_opt -> empty .)
    FLOAT           reduce using rule 132 (StorageClasses_opt -> empty .)
    VOID            reduce using rule 132 (StorageClasses_opt -> empty .)
    IDENTIFIER      reduce using rule 132 (StorageClasses_opt -> empty .)
    TYPEOF          reduce using rule 132 (StorageClasses_opt -> empty .)


state 112

    (8) DeclDef -> Declaration .

    SEMICOLON       reduce using rule 8 (DeclDef -> Declaration .)
    NEW             reduce using rule 8 (DeclDef -> Declaration .)
    DELETE          reduce using rule 8 (DeclDef -> Declaration .)
    ALIAS           reduce using rule 8 (DeclDef -> Declaration .)
    MIXIN           reduce using rule 8 (DeclDef -> Declaration .)
    ENUM            reduce using rule 8 (DeclDef -> Declaration .)
    IMPORT          reduce using rule 8 (DeclDef -> Declaration .)
    STATIC          reduce using rule 8 (DeclDef -> Declaration .)
    PRIVATE         reduce using rule 8 (DeclDef -> Declaration .)
    PROTECTED       reduce using rule 8 (DeclDef -> Declaration .)
    PUBLIC          reduce using rule 8 (DeclDef -> Declaration .)
    CLASS           reduce using rule 8 (DeclDef -> Declaration .)
    UNION           reduce using rule 8 (DeclDef -> Declaration .)
    EXTERN          reduce using rule 8 (DeclDef -> Declaration .)
    FINAL           reduce using rule 8 (DeclDef -> Declaration .)
    AUTO            reduce using rule 8 (DeclDef -> Declaration .)
    CONST           reduce using rule 8 (DeclDef -> Declaration .)
    IMMUTABLE       reduce using rule 8 (DeclDef -> Declaration .)
    DOT             reduce using rule 8 (DeclDef -> Declaration .)
    BOOL            reduce using rule 8 (DeclDef -> Declaration .)
    SHORT           reduce using rule 8 (DeclDef -> Declaration .)
    USHORT          reduce using rule 8 (DeclDef -> Declaration .)
    INT             reduce using rule 8 (DeclDef -> Declaration .)
    UINT            reduce using rule 8 (DeclDef -> Declaration .)
    LONG            reduce using rule 8 (DeclDef -> Declaration .)
    ULONG           reduce using rule 8 (DeclDef -> Declaration .)
    CHAR            reduce using rule 8 (DeclDef -> Declaration .)
    FLOAT           reduce using rule 8 (DeclDef -> Declaration .)
    VOID            reduce using rule 8 (DeclDef -> Declaration .)
    IDENTIFIER      reduce using rule 8 (DeclDef -> Declaration .)
    TYPEOF          reduce using rule 8 (DeclDef -> Declaration .)
    RBRACE          reduce using rule 8 (DeclDef -> Declaration .)


state 113

    (411) AliasThis -> ALIAS . IDENTIFIER THIS SEMICOLON
    (133) AliasDeclaration -> ALIAS . StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> ALIAS . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> ALIAS . AliasDeclarationX SEMICOLON
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (136) AliasDeclarationX -> . AliasDeclarationY
    (137) AliasDeclarationX -> . AliasDeclarationX COMMA AliasDeclarationY
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (477) empty -> .
    (138) AliasDeclarationY -> . IDENTIFIER ASSIGN StorageClasses_opt Type
    (139) AliasDeclarationY -> . IDENTIFIER ASSIGN FunctionLiteral
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 264
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ENUM            shift and go to state 63
    STATIC          shift and go to state 56
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]

    AliasDeclarationY              shift and go to state 58
    AliasDeclarationX              shift and go to state 59
    StorageClass                   shift and go to state 28
    StorageClasses                 shift and go to state 60
    StorageClasses_opt             shift and go to state 57
    empty                          shift and go to state 62

state 114

    (143) AttributeSpecifier -> Attribute . COLON
    (144) AttributeSpecifier -> Attribute . DeclarationBlock
    (146) DeclarationBlock -> . DeclDef
    (147) DeclarationBlock -> . LBRACE DeclDefs_opt RBRACE
    (7) DeclDef -> . AttributeSpecifier
    (8) DeclDef -> . Declaration
    (9) DeclDef -> . Allocator
    (10) DeclDef -> . Deallocator
    (11) DeclDef -> . AliasThis
    (12) DeclDef -> . MixinDeclaration
    (13) DeclDef -> . SEMICOLON
    (143) AttributeSpecifier -> . Attribute COLON
    (144) AttributeSpecifier -> . Attribute DeclarationBlock
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (407) Allocator -> . NEW Parameters SEMICOLON
    (408) Allocator -> . NEW Parameters FunctionBody
    (409) Deallocator -> . DELETE Parameters SEMICOLON
    (410) Deallocator -> . DELETE Parameters FunctionBody
    (411) AliasThis -> . ALIAS IDENTIFIER THIS SEMICOLON
    (33) MixinDeclaration -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (145) Attribute -> . VisibilityAttribute
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (148) VisibilityAttribute -> . PRIVATE
    (149) VisibilityAttribute -> . PROTECTED
    (150) VisibilityAttribute -> . PUBLIC
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

    COLON           shift and go to state 265
    LBRACE          shift and go to state 268
    SEMICOLON       shift and go to state 103
    NEW             shift and go to state 100
    DELETE          shift and go to state 119
    ALIAS           shift and go to state 113
    MIXIN           shift and go to state 117
    ENUM            shift and go to state 18
    IMPORT          shift and go to state 27
    STATIC          shift and go to state 5
    PRIVATE         shift and go to state 107
    PROTECTED       shift and go to state 116
    PUBLIC          shift and go to state 115
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

    StorageClasses                 shift and go to state 1
    AggregateDeclaration           shift and go to state 4
    FuncDeclaration                shift and go to state 6
    AttributeSpecifier             shift and go to state 101
    StorageClasses_opt             shift and go to state 9
    ImportDeclaration              shift and go to state 10
    VisibilityAttribute            shift and go to state 105
    AliasThis                      shift and go to state 108
    DeclDef                        shift and go to state 266
    Deallocator                    shift and go to state 110
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    empty                          shift and go to state 62
    DeclarationBlock               shift and go to state 267
    AutoFuncDeclaration            shift and go to state 16
    MixinDeclaration               shift and go to state 102
    Declaration                    shift and go to state 112
    AnonymousEnumDeclaration       shift and go to state 20
    AnonUnionDeclaration           shift and go to state 22
    EnumDeclaration                shift and go to state 24
    Attribute                      shift and go to state 114
    UnionDeclaration               shift and go to state 25
    ClassDeclaration               shift and go to state 26
    Allocator                      shift and go to state 118
    StorageClass                   shift and go to state 28

state 115

    (150) VisibilityAttribute -> PUBLIC .

    COLON           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    LBRACE          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    SEMICOLON       reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    NEW             reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    DELETE          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    ALIAS           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    MIXIN           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    ENUM            reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    IMPORT          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    STATIC          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    PRIVATE         reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    PROTECTED       reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    PUBLIC          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    CLASS           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    UNION           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    EXTERN          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    FINAL           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    AUTO            reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    CONST           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    IMMUTABLE       reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    DOT             reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    BOOL            reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    SHORT           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    USHORT          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    INT             reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    UINT            reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    LONG            reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    ULONG           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    CHAR            reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    FLOAT           reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    VOID            reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    IDENTIFIER      reduce using rule 150 (VisibilityAttribute -> PUBLIC .)
    TYPEOF          reduce using rule 150 (VisibilityAttribute -> PUBLIC .)


state 116

    (149) VisibilityAttribute -> PROTECTED .

    COLON           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    LBRACE          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    SEMICOLON       reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    NEW             reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    DELETE          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    ALIAS           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    MIXIN           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    ENUM            reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    IMPORT          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    STATIC          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    PRIVATE         reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    PROTECTED       reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    PUBLIC          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    CLASS           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    UNION           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    EXTERN          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    FINAL           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    AUTO            reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    CONST           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    IMMUTABLE       reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    DOT             reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    BOOL            reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    SHORT           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    USHORT          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    INT             reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    UINT            reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    LONG            reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    ULONG           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    CHAR            reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    FLOAT           reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    VOID            reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    IDENTIFIER      reduce using rule 149 (VisibilityAttribute -> PROTECTED .)
    TYPEOF          reduce using rule 149 (VisibilityAttribute -> PROTECTED .)


state 117

    (33) MixinDeclaration -> MIXIN . LPAREN AssignExpression RPAREN SEMICOLON

    LPAREN          shift and go to state 269


state 118

    (9) DeclDef -> Allocator .

    SEMICOLON       reduce using rule 9 (DeclDef -> Allocator .)
    NEW             reduce using rule 9 (DeclDef -> Allocator .)
    DELETE          reduce using rule 9 (DeclDef -> Allocator .)
    ALIAS           reduce using rule 9 (DeclDef -> Allocator .)
    MIXIN           reduce using rule 9 (DeclDef -> Allocator .)
    ENUM            reduce using rule 9 (DeclDef -> Allocator .)
    IMPORT          reduce using rule 9 (DeclDef -> Allocator .)
    STATIC          reduce using rule 9 (DeclDef -> Allocator .)
    PRIVATE         reduce using rule 9 (DeclDef -> Allocator .)
    PROTECTED       reduce using rule 9 (DeclDef -> Allocator .)
    PUBLIC          reduce using rule 9 (DeclDef -> Allocator .)
    CLASS           reduce using rule 9 (DeclDef -> Allocator .)
    UNION           reduce using rule 9 (DeclDef -> Allocator .)
    EXTERN          reduce using rule 9 (DeclDef -> Allocator .)
    FINAL           reduce using rule 9 (DeclDef -> Allocator .)
    AUTO            reduce using rule 9 (DeclDef -> Allocator .)
    CONST           reduce using rule 9 (DeclDef -> Allocator .)
    IMMUTABLE       reduce using rule 9 (DeclDef -> Allocator .)
    DOT             reduce using rule 9 (DeclDef -> Allocator .)
    BOOL            reduce using rule 9 (DeclDef -> Allocator .)
    SHORT           reduce using rule 9 (DeclDef -> Allocator .)
    USHORT          reduce using rule 9 (DeclDef -> Allocator .)
    INT             reduce using rule 9 (DeclDef -> Allocator .)
    UINT            reduce using rule 9 (DeclDef -> Allocator .)
    LONG            reduce using rule 9 (DeclDef -> Allocator .)
    ULONG           reduce using rule 9 (DeclDef -> Allocator .)
    CHAR            reduce using rule 9 (DeclDef -> Allocator .)
    FLOAT           reduce using rule 9 (DeclDef -> Allocator .)
    VOID            reduce using rule 9 (DeclDef -> Allocator .)
    IDENTIFIER      reduce using rule 9 (DeclDef -> Allocator .)
    TYPEOF          reduce using rule 9 (DeclDef -> Allocator .)
    RBRACE          reduce using rule 9 (DeclDef -> Allocator .)


state 119

    (409) Deallocator -> DELETE . Parameters SEMICOLON
    (410) Deallocator -> DELETE . Parameters FunctionBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN

    LPAREN          shift and go to state 76

    Parameters                     shift and go to state 270

state 120

    (392) UnionDeclaration -> UNION IDENTIFIER AggregateBody .

    ALIAS           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    ENUM            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    IMPORT          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    STATIC          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    CLASS           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    UNION           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    EXTERN          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    FINAL           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    AUTO            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    CONST           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    IMMUTABLE       reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    DOT             reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    BOOL            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    SHORT           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    USHORT          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    INT             reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    UINT            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    LONG            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    ULONG           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    CHAR            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    FLOAT           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    VOID            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    IDENTIFIER      reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    TYPEOF          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    $end            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    SEMICOLON       reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    CASE            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    DEFAULT         reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    LBRACE          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    IF              reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    WHILE           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    DO              reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    FOR             reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    SWITCH          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    CONTINUE        reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    BREAK           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    RETURN          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    GOTO            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    WITH            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    MIXIN           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    LPAREN          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    FOREACH         reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    FOREACH_REVERSE reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    AMPERSAND       reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    PLUS_PLUS       reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    MINUS_MINUS     reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    TIMES           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    MINUS           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    PLUS            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    EXCLAMATION     reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    TILDE           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    CAST            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    THIS            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    NULL            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    TRUE            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    FALSE           reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    DOLLAR          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    INUMBER         reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    DNUMBER         reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    LIT_CHAR        reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    LIT_STR         reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    LBRACKET        reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    FUNCTION        reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    NEW             reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    TYPEID          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    BODY            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    RBRACE          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    ELSE            reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    DELETE          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    PRIVATE         reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    PROTECTED       reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)
    PUBLIC          reduce using rule 392 (UnionDeclaration -> UNION IDENTIFIER AggregateBody .)


state 121

    (391) UnionDeclaration -> UNION IDENTIFIER SEMICOLON .

    ALIAS           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    ENUM            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    IMPORT          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    CLASS           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    UNION           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    EXTERN          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    FINAL           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    AUTO            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    CONST           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    IMMUTABLE       reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    DOT             reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    SHORT           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    USHORT          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    INT             reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    UINT            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    LONG            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    ULONG           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    TYPEOF          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    $end            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    SEMICOLON       reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    IF              reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    DO              reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    CONTINUE        reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    GOTO            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    WITH            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    MIXIN           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    FOREACH         reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    FOREACH_REVERSE reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    AMPERSAND       reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    PLUS_PLUS       reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    MINUS_MINUS     reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    TIMES           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    EXCLAMATION     reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    TILDE           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    CAST            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    NULL            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    TRUE            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    FALSE           reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    DOLLAR          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    INUMBER         reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    DNUMBER         reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    LIT_CHAR        reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    LIT_STR         reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    LBRACKET        reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    FUNCTION        reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    NEW             reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    TYPEID          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    BODY            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    DELETE          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    PRIVATE         reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    PROTECTED       reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)
    PUBLIC          reduce using rule 391 (UnionDeclaration -> UNION IDENTIFIER SEMICOLON .)


state 122

    (432) AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers . RBRACE

    RBRACE          shift and go to state 271


state 123

    (438) AnonymousEnumMember -> Type . IDENTIFIER ASSIGN AssignExpression

    IDENTIFIER      shift and go to state 272


state 124

    (75) Type -> BasicType . BasicType2_opt
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LBRACE          reduce using rule 477 (empty -> .)
    SEMICOLON       reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)
    COMMA           reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    RPAREN          reduce using rule 477 (empty -> .)
    POWER           reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    PLUS_PLUS       reduce using rule 477 (empty -> .)
    MINUS_MINUS     reduce using rule 477 (empty -> .)
    DIV             reduce using rule 477 (empty -> .)
    MODULO          reduce using rule 477 (empty -> .)
    PLUS            reduce using rule 477 (empty -> .)
    MINUS           reduce using rule 477 (empty -> .)
    LEFT_SHIFT      reduce using rule 477 (empty -> .)
    RIGHT_SHIFT     reduce using rule 477 (empty -> .)
    IS_EQ           reduce using rule 477 (empty -> .)
    NOT_EQ          reduce using rule 477 (empty -> .)
    LESS            reduce using rule 477 (empty -> .)
    GREATER_EQ      reduce using rule 477 (empty -> .)
    GREATER         reduce using rule 477 (empty -> .)
    LESS_EQ         reduce using rule 477 (empty -> .)
    AMPERSAND       reduce using rule 477 (empty -> .)
    CARET           reduce using rule 477 (empty -> .)
    PIPE            reduce using rule 477 (empty -> .)
    DOUBLE_AMPERSAND reduce using rule 477 (empty -> .)
    QUESTION        reduce using rule 477 (empty -> .)
    DOUBLE_PIPE     reduce using rule 477 (empty -> .)
    ASSIGN          reduce using rule 477 (empty -> .)
    EQ_PLUS         reduce using rule 477 (empty -> .)
    EQ_MINUS        reduce using rule 477 (empty -> .)
    EQ_TIMES        reduce using rule 477 (empty -> .)
    EQ_DIV          reduce using rule 477 (empty -> .)
    EQ_MODULO       reduce using rule 477 (empty -> .)
    EQ_AND_BIT      reduce using rule 477 (empty -> .)
    EQ_OR_BIT       reduce using rule 477 (empty -> .)
    EQ_XOR_BIT      reduce using rule 477 (empty -> .)
    EQ_LEFT         reduce using rule 477 (empty -> .)
    EQ_RIGHT        reduce using rule 477 (empty -> .)
    RBRACKET        reduce using rule 477 (empty -> .)
    RANGE           reduce using rule 477 (empty -> .)
    RBRACE          reduce using rule 477 (empty -> .)
    COLON           reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

  ! LBRACKET        [ reduce using rule 477 (empty -> .) ]
  ! TIMES           [ reduce using rule 477 (empty -> .) ]

    BasicType2X                    shift and go to state 81
    BasicType2                     shift and go to state 90
    BasicType2_opt                 shift and go to state 273
    empty                          shift and go to state 86

state 125

    (433) AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers . RBRACE

    RBRACE          shift and go to state 274


state 126

    (429) EnumMember -> IDENTIFIER .
    (430) EnumMember -> IDENTIFIER . ASSIGN AssignExpression
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList

  ! shift/reduce conflict for LBRACKET resolved as shift
    COMMA           reduce using rule 429 (EnumMember -> IDENTIFIER .)
    RBRACE          reduce using rule 429 (EnumMember -> IDENTIFIER .)
    ASSIGN          shift and go to state 275
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    FUNCTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 91

  ! LBRACKET        [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 127

    (426) EnumMembers -> EnumMember .
    (427) EnumMembers -> EnumMember . COMMA
    (428) EnumMembers -> EnumMember . COMMA EnumMembers
    (437) AnonymousEnumMember -> EnumMember .

  ! reduce/reduce conflict for RBRACE resolved using rule 426 (EnumMembers -> EnumMember .)
    RBRACE          reduce using rule 426 (EnumMembers -> EnumMember .)
    COMMA           reduce using rule 437 (AnonymousEnumMember -> EnumMember .)

  ! COMMA           [ shift and go to state 276 ]
  ! RBRACE          [ reduce using rule 437 (AnonymousEnumMember -> EnumMember .) ]


state 128

    (434) AnonymousEnumMembers -> AnonymousEnumMember .
    (435) AnonymousEnumMembers -> AnonymousEnumMember . COMMA
    (436) AnonymousEnumMembers -> AnonymousEnumMember . COMMA AnonymousEnumMembers

    RBRACE          reduce using rule 434 (AnonymousEnumMembers -> AnonymousEnumMember .)
    COMMA           shift and go to state 277


state 129

    (423) EnumBaseType -> Type .

    LBRACE          reduce using rule 423 (EnumBaseType -> Type .)
    SEMICOLON       reduce using rule 423 (EnumBaseType -> Type .)


state 130

    (431) AnonymousEnumDeclaration -> ENUM COLON EnumBaseType . LBRACE EnumMembers RBRACE

    LBRACE          shift and go to state 278


state 131

    (424) EnumBody -> LBRACE . EnumMembers RBRACE
    (426) EnumMembers -> . EnumMember
    (427) EnumMembers -> . EnumMember COMMA
    (428) EnumMembers -> . EnumMember COMMA EnumMembers
    (429) EnumMember -> . IDENTIFIER
    (430) EnumMember -> . IDENTIFIER ASSIGN AssignExpression

    IDENTIFIER      shift and go to state 281

    EnumMembers                    shift and go to state 279
    EnumMember                     shift and go to state 280

state 132

    (425) EnumBody -> SEMICOLON .

    ALIAS           reduce using rule 425 (EnumBody -> SEMICOLON .)
    ENUM            reduce using rule 425 (EnumBody -> SEMICOLON .)
    IMPORT          reduce using rule 425 (EnumBody -> SEMICOLON .)
    STATIC          reduce using rule 425 (EnumBody -> SEMICOLON .)
    CLASS           reduce using rule 425 (EnumBody -> SEMICOLON .)
    UNION           reduce using rule 425 (EnumBody -> SEMICOLON .)
    EXTERN          reduce using rule 425 (EnumBody -> SEMICOLON .)
    FINAL           reduce using rule 425 (EnumBody -> SEMICOLON .)
    AUTO            reduce using rule 425 (EnumBody -> SEMICOLON .)
    CONST           reduce using rule 425 (EnumBody -> SEMICOLON .)
    IMMUTABLE       reduce using rule 425 (EnumBody -> SEMICOLON .)
    DOT             reduce using rule 425 (EnumBody -> SEMICOLON .)
    BOOL            reduce using rule 425 (EnumBody -> SEMICOLON .)
    SHORT           reduce using rule 425 (EnumBody -> SEMICOLON .)
    USHORT          reduce using rule 425 (EnumBody -> SEMICOLON .)
    INT             reduce using rule 425 (EnumBody -> SEMICOLON .)
    UINT            reduce using rule 425 (EnumBody -> SEMICOLON .)
    LONG            reduce using rule 425 (EnumBody -> SEMICOLON .)
    ULONG           reduce using rule 425 (EnumBody -> SEMICOLON .)
    CHAR            reduce using rule 425 (EnumBody -> SEMICOLON .)
    FLOAT           reduce using rule 425 (EnumBody -> SEMICOLON .)
    VOID            reduce using rule 425 (EnumBody -> SEMICOLON .)
    IDENTIFIER      reduce using rule 425 (EnumBody -> SEMICOLON .)
    TYPEOF          reduce using rule 425 (EnumBody -> SEMICOLON .)
    $end            reduce using rule 425 (EnumBody -> SEMICOLON .)
    SEMICOLON       reduce using rule 425 (EnumBody -> SEMICOLON .)
    NEW             reduce using rule 425 (EnumBody -> SEMICOLON .)
    DELETE          reduce using rule 425 (EnumBody -> SEMICOLON .)
    MIXIN           reduce using rule 425 (EnumBody -> SEMICOLON .)
    PRIVATE         reduce using rule 425 (EnumBody -> SEMICOLON .)
    PROTECTED       reduce using rule 425 (EnumBody -> SEMICOLON .)
    PUBLIC          reduce using rule 425 (EnumBody -> SEMICOLON .)
    RBRACE          reduce using rule 425 (EnumBody -> SEMICOLON .)
    CASE            reduce using rule 425 (EnumBody -> SEMICOLON .)
    DEFAULT         reduce using rule 425 (EnumBody -> SEMICOLON .)
    LBRACE          reduce using rule 425 (EnumBody -> SEMICOLON .)
    IF              reduce using rule 425 (EnumBody -> SEMICOLON .)
    WHILE           reduce using rule 425 (EnumBody -> SEMICOLON .)
    DO              reduce using rule 425 (EnumBody -> SEMICOLON .)
    FOR             reduce using rule 425 (EnumBody -> SEMICOLON .)
    SWITCH          reduce using rule 425 (EnumBody -> SEMICOLON .)
    CONTINUE        reduce using rule 425 (EnumBody -> SEMICOLON .)
    BREAK           reduce using rule 425 (EnumBody -> SEMICOLON .)
    RETURN          reduce using rule 425 (EnumBody -> SEMICOLON .)
    GOTO            reduce using rule 425 (EnumBody -> SEMICOLON .)
    WITH            reduce using rule 425 (EnumBody -> SEMICOLON .)
    LPAREN          reduce using rule 425 (EnumBody -> SEMICOLON .)
    FOREACH         reduce using rule 425 (EnumBody -> SEMICOLON .)
    FOREACH_REVERSE reduce using rule 425 (EnumBody -> SEMICOLON .)
    AMPERSAND       reduce using rule 425 (EnumBody -> SEMICOLON .)
    PLUS_PLUS       reduce using rule 425 (EnumBody -> SEMICOLON .)
    MINUS_MINUS     reduce using rule 425 (EnumBody -> SEMICOLON .)
    TIMES           reduce using rule 425 (EnumBody -> SEMICOLON .)
    MINUS           reduce using rule 425 (EnumBody -> SEMICOLON .)
    PLUS            reduce using rule 425 (EnumBody -> SEMICOLON .)
    EXCLAMATION     reduce using rule 425 (EnumBody -> SEMICOLON .)
    TILDE           reduce using rule 425 (EnumBody -> SEMICOLON .)
    CAST            reduce using rule 425 (EnumBody -> SEMICOLON .)
    THIS            reduce using rule 425 (EnumBody -> SEMICOLON .)
    NULL            reduce using rule 425 (EnumBody -> SEMICOLON .)
    TRUE            reduce using rule 425 (EnumBody -> SEMICOLON .)
    FALSE           reduce using rule 425 (EnumBody -> SEMICOLON .)
    DOLLAR          reduce using rule 425 (EnumBody -> SEMICOLON .)
    INUMBER         reduce using rule 425 (EnumBody -> SEMICOLON .)
    DNUMBER         reduce using rule 425 (EnumBody -> SEMICOLON .)
    LIT_CHAR        reduce using rule 425 (EnumBody -> SEMICOLON .)
    LIT_STR         reduce using rule 425 (EnumBody -> SEMICOLON .)
    LBRACKET        reduce using rule 425 (EnumBody -> SEMICOLON .)
    FUNCTION        reduce using rule 425 (EnumBody -> SEMICOLON .)
    TYPEID          reduce using rule 425 (EnumBody -> SEMICOLON .)
    BODY            reduce using rule 425 (EnumBody -> SEMICOLON .)
    ELSE            reduce using rule 425 (EnumBody -> SEMICOLON .)


state 133

    (421) EnumDeclaration -> ENUM IDENTIFIER COLON . EnumBaseType EnumBody
    (423) EnumBaseType -> . Type
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 124
    IdentifierList                 shift and go to state 33
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    EnumBaseType                   shift and go to state 282
    Type                           shift and go to state 129

state 134

    (420) EnumDeclaration -> ENUM IDENTIFIER EnumBody .

    SEMICOLON       reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    CASE            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    DEFAULT         reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    LBRACE          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    IDENTIFIER      reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    IF              reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    WHILE           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    DO              reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    FOR             reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    SWITCH          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    FINAL           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    CONTINUE        reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    BREAK           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    RETURN          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    GOTO            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    WITH            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    MIXIN           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    IMPORT          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    STATIC          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    LPAREN          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    ALIAS           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    ENUM            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    EXTERN          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    AUTO            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    CONST           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    IMMUTABLE       reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    FOREACH         reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    FOREACH_REVERSE reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    CLASS           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    UNION           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    AMPERSAND       reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    PLUS_PLUS       reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    MINUS_MINUS     reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    TIMES           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    MINUS           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    PLUS            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    EXCLAMATION     reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    TILDE           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    CAST            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    DOT             reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    THIS            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    NULL            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    TRUE            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    FALSE           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    DOLLAR          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    INUMBER         reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    DNUMBER         reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    LIT_CHAR        reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    LIT_STR         reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    LBRACKET        reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    FUNCTION        reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    NEW             reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    BOOL            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    SHORT           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    USHORT          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    INT             reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    UINT            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    LONG            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    ULONG           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    CHAR            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    FLOAT           reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    VOID            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    TYPEOF          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    TYPEID          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    BODY            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    RBRACE          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    DELETE          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    PRIVATE         reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    PROTECTED       reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    PUBLIC          reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    ELSE            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)
    $end            reduce using rule 420 (EnumDeclaration -> ENUM IDENTIFIER EnumBody .)


state 135

    (133) AliasDeclaration -> ALIAS StorageClasses_opt BasicType . Declarators SEMICOLON
    (134) AliasDeclaration -> ALIAS StorageClasses_opt BasicType . FuncDeclarator SEMICOLON
    (41) Declarators -> . DeclaratorInitializer
    (42) Declarators -> . DeclaratorInitializer COMMA DeclaratorIdentifierList
    (443) FuncDeclarator -> . BasicType2_opt IDENTIFIER FuncDeclaratorSuffix
    (43) DeclaratorInitializer -> . VarDeclarator
    (44) DeclaratorInitializer -> . VarDeclarator ASSIGN Initializer
    (45) DeclaratorInitializer -> . AltDeclarator ASSIGN Initializer
    (46) DeclaratorInitializer -> . AltDeclarator
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (59) VarDeclarator -> . BasicType2_opt IDENTIFIER
    (60) AltDeclarator -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

    VarDeclarator                  shift and go to state 79
    BasicType2X                    shift and go to state 81
    DeclaratorInitializer          shift and go to state 83
    Declarators                    shift and go to state 283
    AltDeclarator                  shift and go to state 85
    empty                          shift and go to state 86
    FuncDeclarator                 shift and go to state 284
    BasicType2_opt                 shift and go to state 82
    BasicType2                     shift and go to state 90

state 136

    (137) AliasDeclarationX -> AliasDeclarationX COMMA . AliasDeclarationY
    (138) AliasDeclarationY -> . IDENTIFIER ASSIGN StorageClasses_opt Type
    (139) AliasDeclarationY -> . IDENTIFIER ASSIGN FunctionLiteral

    IDENTIFIER      shift and go to state 61

    AliasDeclarationY              shift and go to state 285

state 137

    (135) AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .

    SEMICOLON       reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    CASE            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    DEFAULT         reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    LBRACE          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    IDENTIFIER      reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    IF              reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    WHILE           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    DO              reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    FOR             reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    SWITCH          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    FINAL           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    CONTINUE        reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    BREAK           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    RETURN          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    GOTO            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    WITH            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    MIXIN           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    IMPORT          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    STATIC          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    LPAREN          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    ALIAS           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    ENUM            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    EXTERN          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    AUTO            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    CONST           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    IMMUTABLE       reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    FOREACH         reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    FOREACH_REVERSE reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    CLASS           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    UNION           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    AMPERSAND       reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    PLUS_PLUS       reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    MINUS_MINUS     reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    TIMES           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    MINUS           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    PLUS            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    EXCLAMATION     reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    TILDE           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    CAST            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    DOT             reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    THIS            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    NULL            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    TRUE            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    FALSE           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    DOLLAR          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    INUMBER         reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    DNUMBER         reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    LIT_CHAR        reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    LIT_STR         reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    LBRACKET        reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    FUNCTION        reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    NEW             reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    BOOL            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    SHORT           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    USHORT          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    INT             reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    UINT            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    LONG            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    ULONG           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    CHAR            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    FLOAT           reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    VOID            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    TYPEOF          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    TYPEID          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    BODY            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    RBRACE          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    ELSE            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    DELETE          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    PRIVATE         reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    PROTECTED       reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    PUBLIC          reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)
    $end            reduce using rule 135 (AliasDeclaration -> ALIAS AliasDeclarationX SEMICOLON .)


state 138

    (138) AliasDeclarationY -> IDENTIFIER ASSIGN . StorageClasses_opt Type
    (139) AliasDeclarationY -> IDENTIFIER ASSIGN . FunctionLiteral
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (477) empty -> .
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    FUNCTION        shift and go to state 193
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ENUM            shift and go to state 63
    STATIC          shift and go to state 56
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    LPAREN          shift and go to state 76
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    FunctionLiteralBody            shift and go to state 219
    Parameters                     shift and go to state 186
    ParameterMemberAttributes      shift and go to state 187
    FunctionLiteral                shift and go to state 287
    BodyStatement                  shift and go to state 213
    StorageClass                   shift and go to state 28
    StorageClasses                 shift and go to state 60
    BlockStatement                 shift and go to state 175
    StorageClasses_opt             shift and go to state 286
    empty                          shift and go to state 62

state 139

    (26) Import -> ModuleAliasIdentifier ASSIGN . ModuleFullyQualifiedName
    (14) ModuleFullyQualifiedName -> . ModuleName
    (15) ModuleFullyQualifiedName -> . Packages DOT ModuleName
    (16) ModuleName -> . IDENTIFIER
    (17) Packages -> . PackageName
    (18) Packages -> . Packages DOT PackageName
    (19) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 289

    Packages                       shift and go to state 71
    PackageName                    shift and go to state 68
    ModuleFullyQualifiedName       shift and go to state 288
    ModuleName                     shift and go to state 72

state 140

    (20) ImportDeclaration -> IMPORT ImportList SEMICOLON .

    SEMICOLON       reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    CASE            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    DEFAULT         reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    LBRACE          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    IF              reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    WHILE           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    DO              reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    FOR             reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    SWITCH          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    FINAL           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    CONTINUE        reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    BREAK           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    RETURN          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    GOTO            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    WITH            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    MIXIN           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    IMPORT          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    STATIC          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    LPAREN          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    ALIAS           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    ENUM            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    EXTERN          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    AUTO            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    CONST           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    IMMUTABLE       reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    FOREACH         reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    FOREACH_REVERSE reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    CLASS           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    UNION           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    AMPERSAND       reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    PLUS_PLUS       reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    MINUS_MINUS     reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    TIMES           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    MINUS           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    PLUS            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    EXCLAMATION     reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    TILDE           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    CAST            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    DOT             reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    THIS            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    NULL            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    TRUE            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    FALSE           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    DOLLAR          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    INUMBER         reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    DNUMBER         reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    LIT_CHAR        reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    LIT_STR         reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    LBRACKET        reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    FUNCTION        reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    NEW             reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    BOOL            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    SHORT           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    USHORT          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    INT             reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    UINT            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    LONG            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    ULONG           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    CHAR            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    FLOAT           reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    VOID            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    TYPEOF          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    TYPEID          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    BODY            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    RBRACE          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    ELSE            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    $end            reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    DELETE          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    PRIVATE         reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    PROTECTED       reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)
    PUBLIC          reduce using rule 20 (ImportDeclaration -> IMPORT ImportList SEMICOLON .)


state 141

    (27) ImportBindings -> Import COLON . ImportBindList
    (28) ImportBindList -> . ImportBind
    (29) ImportBindList -> . ImportBind COMMA ImportBindList
    (30) ImportBind -> . IDENTIFIER
    (31) ImportBind -> . IDENTIFIER ASSIGN IDENTIFIER

    IDENTIFIER      shift and go to state 292

    ImportBindList                 shift and go to state 290
    ImportBind                     shift and go to state 291

state 142

    (24) ImportList -> Import COMMA . ImportList
    (22) ImportList -> . Import
    (23) ImportList -> . ImportBindings
    (24) ImportList -> . Import COMMA ImportList
    (25) Import -> . ModuleFullyQualifiedName
    (26) Import -> . ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName
    (27) ImportBindings -> . Import COLON ImportBindList
    (14) ModuleFullyQualifiedName -> . ModuleName
    (15) ModuleFullyQualifiedName -> . Packages DOT ModuleName
    (32) ModuleAliasIdentifier -> . IDENTIFIER
    (16) ModuleName -> . IDENTIFIER
    (17) Packages -> . PackageName
    (18) Packages -> . Packages DOT PackageName
    (19) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 69

    ModuleFullyQualifiedName       shift and go to state 64
    ImportBindings                 shift and go to state 65
    ModuleAliasIdentifier          shift and go to state 66
    ImportList                     shift and go to state 293
    PackageName                    shift and go to state 68
    ModuleName                     shift and go to state 72
    Import                         shift and go to state 70
    Packages                       shift and go to state 71

state 143

    (15) ModuleFullyQualifiedName -> Packages DOT . ModuleName
    (18) Packages -> Packages DOT . PackageName
    (16) ModuleName -> . IDENTIFIER
    (19) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 289

    PackageName                    shift and go to state 294
    ModuleName                     shift and go to state 295

state 144

    (442) AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .

    SEMICOLON       reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    CASE            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    DEFAULT         reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    LBRACE          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    IDENTIFIER      reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    IF              reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    WHILE           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    DO              reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    FOR             reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    SWITCH          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    FINAL           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    CONTINUE        reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    BREAK           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    RETURN          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    GOTO            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    WITH            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    MIXIN           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    IMPORT          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    STATIC          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    LPAREN          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    ALIAS           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    ENUM            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    EXTERN          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    AUTO            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    CONST           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    IMMUTABLE       reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    FOREACH         reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    FOREACH_REVERSE reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    CLASS           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    UNION           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    AMPERSAND       reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    PLUS_PLUS       reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    MINUS_MINUS     reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    TIMES           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    MINUS           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    PLUS            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    EXCLAMATION     reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    TILDE           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    CAST            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    DOT             reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    THIS            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    NULL            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    TRUE            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    FALSE           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    DOLLAR          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    INUMBER         reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    DNUMBER         reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    LIT_CHAR        reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    LIT_STR         reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    LBRACKET        reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    FUNCTION        reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    NEW             reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    BOOL            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    SHORT           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    USHORT          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    INT             reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    UINT            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    LONG            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    ULONG           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    CHAR            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    FLOAT           reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    VOID            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    TYPEOF          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    TYPEID          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    BODY            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    RBRACE          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    ELSE            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    DELETE          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    PRIVATE         reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    PROTECTED       reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    PUBLIC          reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)
    $end            reduce using rule 442 (AutoFuncDeclaration -> StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody .)


state 145

    (311) BlockStatement -> LBRACE . RBRACE
    (312) BlockStatement -> LBRACE . StatementList RBRACE
    (313) StatementList -> . Statement
    (314) StatementList -> . Statement StatementList
    (273) Statement -> . SEMICOLON
    (274) Statement -> . NonEmptyStatement
    (275) Statement -> . ScopeBlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (307) ScopeBlockStatement -> . BlockStatement
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    RBRACE          shift and go to state 344
    SEMICOLON       shift and go to state 324
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    LBRACE          shift and go to state 145
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    Statement                      shift and go to state 297
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 300
    RelExpression                  shift and go to state 177
    StatementList                  shift and go to state 304
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 338
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    ScopeBlockStatement            shift and go to state 345
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 146

    (472) BodyStatement -> BODY . BlockStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 145

    BlockStatement                 shift and go to state 351

state 147

    (470) FunctionBody -> BlockStatement .

    SEMICOLON       reduce using rule 470 (FunctionBody -> BlockStatement .)
    NEW             reduce using rule 470 (FunctionBody -> BlockStatement .)
    DELETE          reduce using rule 470 (FunctionBody -> BlockStatement .)
    ALIAS           reduce using rule 470 (FunctionBody -> BlockStatement .)
    MIXIN           reduce using rule 470 (FunctionBody -> BlockStatement .)
    ENUM            reduce using rule 470 (FunctionBody -> BlockStatement .)
    IMPORT          reduce using rule 470 (FunctionBody -> BlockStatement .)
    STATIC          reduce using rule 470 (FunctionBody -> BlockStatement .)
    PRIVATE         reduce using rule 470 (FunctionBody -> BlockStatement .)
    PROTECTED       reduce using rule 470 (FunctionBody -> BlockStatement .)
    PUBLIC          reduce using rule 470 (FunctionBody -> BlockStatement .)
    CLASS           reduce using rule 470 (FunctionBody -> BlockStatement .)
    UNION           reduce using rule 470 (FunctionBody -> BlockStatement .)
    EXTERN          reduce using rule 470 (FunctionBody -> BlockStatement .)
    FINAL           reduce using rule 470 (FunctionBody -> BlockStatement .)
    AUTO            reduce using rule 470 (FunctionBody -> BlockStatement .)
    CONST           reduce using rule 470 (FunctionBody -> BlockStatement .)
    IMMUTABLE       reduce using rule 470 (FunctionBody -> BlockStatement .)
    DOT             reduce using rule 470 (FunctionBody -> BlockStatement .)
    BOOL            reduce using rule 470 (FunctionBody -> BlockStatement .)
    SHORT           reduce using rule 470 (FunctionBody -> BlockStatement .)
    USHORT          reduce using rule 470 (FunctionBody -> BlockStatement .)
    INT             reduce using rule 470 (FunctionBody -> BlockStatement .)
    UINT            reduce using rule 470 (FunctionBody -> BlockStatement .)
    LONG            reduce using rule 470 (FunctionBody -> BlockStatement .)
    ULONG           reduce using rule 470 (FunctionBody -> BlockStatement .)
    CHAR            reduce using rule 470 (FunctionBody -> BlockStatement .)
    FLOAT           reduce using rule 470 (FunctionBody -> BlockStatement .)
    VOID            reduce using rule 470 (FunctionBody -> BlockStatement .)
    IDENTIFIER      reduce using rule 470 (FunctionBody -> BlockStatement .)
    TYPEOF          reduce using rule 470 (FunctionBody -> BlockStatement .)
    RBRACE          reduce using rule 470 (FunctionBody -> BlockStatement .)
    $end            reduce using rule 470 (FunctionBody -> BlockStatement .)
    CASE            reduce using rule 470 (FunctionBody -> BlockStatement .)
    DEFAULT         reduce using rule 470 (FunctionBody -> BlockStatement .)
    LBRACE          reduce using rule 470 (FunctionBody -> BlockStatement .)
    IF              reduce using rule 470 (FunctionBody -> BlockStatement .)
    WHILE           reduce using rule 470 (FunctionBody -> BlockStatement .)
    DO              reduce using rule 470 (FunctionBody -> BlockStatement .)
    FOR             reduce using rule 470 (FunctionBody -> BlockStatement .)
    SWITCH          reduce using rule 470 (FunctionBody -> BlockStatement .)
    CONTINUE        reduce using rule 470 (FunctionBody -> BlockStatement .)
    BREAK           reduce using rule 470 (FunctionBody -> BlockStatement .)
    RETURN          reduce using rule 470 (FunctionBody -> BlockStatement .)
    GOTO            reduce using rule 470 (FunctionBody -> BlockStatement .)
    WITH            reduce using rule 470 (FunctionBody -> BlockStatement .)
    LPAREN          reduce using rule 470 (FunctionBody -> BlockStatement .)
    FOREACH         reduce using rule 470 (FunctionBody -> BlockStatement .)
    FOREACH_REVERSE reduce using rule 470 (FunctionBody -> BlockStatement .)
    AMPERSAND       reduce using rule 470 (FunctionBody -> BlockStatement .)
    PLUS_PLUS       reduce using rule 470 (FunctionBody -> BlockStatement .)
    MINUS_MINUS     reduce using rule 470 (FunctionBody -> BlockStatement .)
    TIMES           reduce using rule 470 (FunctionBody -> BlockStatement .)
    MINUS           reduce using rule 470 (FunctionBody -> BlockStatement .)
    PLUS            reduce using rule 470 (FunctionBody -> BlockStatement .)
    EXCLAMATION     reduce using rule 470 (FunctionBody -> BlockStatement .)
    TILDE           reduce using rule 470 (FunctionBody -> BlockStatement .)
    CAST            reduce using rule 470 (FunctionBody -> BlockStatement .)
    THIS            reduce using rule 470 (FunctionBody -> BlockStatement .)
    NULL            reduce using rule 470 (FunctionBody -> BlockStatement .)
    TRUE            reduce using rule 470 (FunctionBody -> BlockStatement .)
    FALSE           reduce using rule 470 (FunctionBody -> BlockStatement .)
    DOLLAR          reduce using rule 470 (FunctionBody -> BlockStatement .)
    INUMBER         reduce using rule 470 (FunctionBody -> BlockStatement .)
    DNUMBER         reduce using rule 470 (FunctionBody -> BlockStatement .)
    LIT_CHAR        reduce using rule 470 (FunctionBody -> BlockStatement .)
    LIT_STR         reduce using rule 470 (FunctionBody -> BlockStatement .)
    LBRACKET        reduce using rule 470 (FunctionBody -> BlockStatement .)
    FUNCTION        reduce using rule 470 (FunctionBody -> BlockStatement .)
    TYPEID          reduce using rule 470 (FunctionBody -> BlockStatement .)
    BODY            reduce using rule 470 (FunctionBody -> BlockStatement .)
    ELSE            reduce using rule 470 (FunctionBody -> BlockStatement .)


state 148

    (471) FunctionBody -> BodyStatement .

    SEMICOLON       reduce using rule 471 (FunctionBody -> BodyStatement .)
    NEW             reduce using rule 471 (FunctionBody -> BodyStatement .)
    DELETE          reduce using rule 471 (FunctionBody -> BodyStatement .)
    ALIAS           reduce using rule 471 (FunctionBody -> BodyStatement .)
    MIXIN           reduce using rule 471 (FunctionBody -> BodyStatement .)
    ENUM            reduce using rule 471 (FunctionBody -> BodyStatement .)
    IMPORT          reduce using rule 471 (FunctionBody -> BodyStatement .)
    STATIC          reduce using rule 471 (FunctionBody -> BodyStatement .)
    PRIVATE         reduce using rule 471 (FunctionBody -> BodyStatement .)
    PROTECTED       reduce using rule 471 (FunctionBody -> BodyStatement .)
    PUBLIC          reduce using rule 471 (FunctionBody -> BodyStatement .)
    CLASS           reduce using rule 471 (FunctionBody -> BodyStatement .)
    UNION           reduce using rule 471 (FunctionBody -> BodyStatement .)
    EXTERN          reduce using rule 471 (FunctionBody -> BodyStatement .)
    FINAL           reduce using rule 471 (FunctionBody -> BodyStatement .)
    AUTO            reduce using rule 471 (FunctionBody -> BodyStatement .)
    CONST           reduce using rule 471 (FunctionBody -> BodyStatement .)
    IMMUTABLE       reduce using rule 471 (FunctionBody -> BodyStatement .)
    DOT             reduce using rule 471 (FunctionBody -> BodyStatement .)
    BOOL            reduce using rule 471 (FunctionBody -> BodyStatement .)
    SHORT           reduce using rule 471 (FunctionBody -> BodyStatement .)
    USHORT          reduce using rule 471 (FunctionBody -> BodyStatement .)
    INT             reduce using rule 471 (FunctionBody -> BodyStatement .)
    UINT            reduce using rule 471 (FunctionBody -> BodyStatement .)
    LONG            reduce using rule 471 (FunctionBody -> BodyStatement .)
    ULONG           reduce using rule 471 (FunctionBody -> BodyStatement .)
    CHAR            reduce using rule 471 (FunctionBody -> BodyStatement .)
    FLOAT           reduce using rule 471 (FunctionBody -> BodyStatement .)
    VOID            reduce using rule 471 (FunctionBody -> BodyStatement .)
    IDENTIFIER      reduce using rule 471 (FunctionBody -> BodyStatement .)
    TYPEOF          reduce using rule 471 (FunctionBody -> BodyStatement .)
    RBRACE          reduce using rule 471 (FunctionBody -> BodyStatement .)
    $end            reduce using rule 471 (FunctionBody -> BodyStatement .)
    CASE            reduce using rule 471 (FunctionBody -> BodyStatement .)
    DEFAULT         reduce using rule 471 (FunctionBody -> BodyStatement .)
    LBRACE          reduce using rule 471 (FunctionBody -> BodyStatement .)
    IF              reduce using rule 471 (FunctionBody -> BodyStatement .)
    WHILE           reduce using rule 471 (FunctionBody -> BodyStatement .)
    DO              reduce using rule 471 (FunctionBody -> BodyStatement .)
    FOR             reduce using rule 471 (FunctionBody -> BodyStatement .)
    SWITCH          reduce using rule 471 (FunctionBody -> BodyStatement .)
    CONTINUE        reduce using rule 471 (FunctionBody -> BodyStatement .)
    BREAK           reduce using rule 471 (FunctionBody -> BodyStatement .)
    RETURN          reduce using rule 471 (FunctionBody -> BodyStatement .)
    GOTO            reduce using rule 471 (FunctionBody -> BodyStatement .)
    WITH            reduce using rule 471 (FunctionBody -> BodyStatement .)
    LPAREN          reduce using rule 471 (FunctionBody -> BodyStatement .)
    FOREACH         reduce using rule 471 (FunctionBody -> BodyStatement .)
    FOREACH_REVERSE reduce using rule 471 (FunctionBody -> BodyStatement .)
    AMPERSAND       reduce using rule 471 (FunctionBody -> BodyStatement .)
    PLUS_PLUS       reduce using rule 471 (FunctionBody -> BodyStatement .)
    MINUS_MINUS     reduce using rule 471 (FunctionBody -> BodyStatement .)
    TIMES           reduce using rule 471 (FunctionBody -> BodyStatement .)
    MINUS           reduce using rule 471 (FunctionBody -> BodyStatement .)
    PLUS            reduce using rule 471 (FunctionBody -> BodyStatement .)
    EXCLAMATION     reduce using rule 471 (FunctionBody -> BodyStatement .)
    TILDE           reduce using rule 471 (FunctionBody -> BodyStatement .)
    CAST            reduce using rule 471 (FunctionBody -> BodyStatement .)
    THIS            reduce using rule 471 (FunctionBody -> BodyStatement .)
    NULL            reduce using rule 471 (FunctionBody -> BodyStatement .)
    TRUE            reduce using rule 471 (FunctionBody -> BodyStatement .)
    FALSE           reduce using rule 471 (FunctionBody -> BodyStatement .)
    DOLLAR          reduce using rule 471 (FunctionBody -> BodyStatement .)
    INUMBER         reduce using rule 471 (FunctionBody -> BodyStatement .)
    DNUMBER         reduce using rule 471 (FunctionBody -> BodyStatement .)
    LIT_CHAR        reduce using rule 471 (FunctionBody -> BodyStatement .)
    LIT_STR         reduce using rule 471 (FunctionBody -> BodyStatement .)
    LBRACKET        reduce using rule 471 (FunctionBody -> BodyStatement .)
    FUNCTION        reduce using rule 471 (FunctionBody -> BodyStatement .)
    TYPEID          reduce using rule 471 (FunctionBody -> BodyStatement .)
    BODY            reduce using rule 471 (FunctionBody -> BodyStatement .)
    ELSE            reduce using rule 471 (FunctionBody -> BodyStatement .)


state 149

    (469) MemberFunctionAttribute -> RETURN .

    CONST           reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    IMMUTABLE       reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    RETURN          reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    ASSIGN          reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    COMMA           reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    SEMICOLON       reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    RPAREN          reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    ELLIPSIS        reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    LBRACE          reduce using rule 469 (MemberFunctionAttribute -> RETURN .)
    BODY            reduce using rule 469 (MemberFunctionAttribute -> RETURN .)


state 150

    (467) MemberFunctionAttribute -> CONST .

    CONST           reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    IMMUTABLE       reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    RETURN          reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    ASSIGN          reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    COMMA           reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    SEMICOLON       reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    RPAREN          reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    ELLIPSIS        reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    LBRACE          reduce using rule 467 (MemberFunctionAttribute -> CONST .)
    BODY            reduce using rule 467 (MemberFunctionAttribute -> CONST .)


state 151

    (444) FuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .

    LBRACE          reduce using rule 444 (FuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)
    BODY            reduce using rule 444 (FuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)
    SEMICOLON       reduce using rule 444 (FuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)


state 152

    (463) MemberFunctionAttributes -> MemberFunctionAttribute .
    (464) MemberFunctionAttributes -> MemberFunctionAttribute . MemberFunctionAttributes
    (463) MemberFunctionAttributes -> . MemberFunctionAttribute
    (464) MemberFunctionAttributes -> . MemberFunctionAttribute MemberFunctionAttributes
    (467) MemberFunctionAttribute -> . CONST
    (468) MemberFunctionAttribute -> . IMMUTABLE
    (469) MemberFunctionAttribute -> . RETURN

    LBRACE          reduce using rule 463 (MemberFunctionAttributes -> MemberFunctionAttribute .)
    BODY            reduce using rule 463 (MemberFunctionAttributes -> MemberFunctionAttribute .)
    SEMICOLON       reduce using rule 463 (MemberFunctionAttributes -> MemberFunctionAttribute .)
    ASSIGN          reduce using rule 463 (MemberFunctionAttributes -> MemberFunctionAttribute .)
    COMMA           reduce using rule 463 (MemberFunctionAttributes -> MemberFunctionAttribute .)
    RPAREN          reduce using rule 463 (MemberFunctionAttributes -> MemberFunctionAttribute .)
    ELLIPSIS        reduce using rule 463 (MemberFunctionAttributes -> MemberFunctionAttribute .)
    CONST           shift and go to state 150
    IMMUTABLE       shift and go to state 154
    RETURN          shift and go to state 149

    MemberFunctionAttribute        shift and go to state 152
    MemberFunctionAttributes       shift and go to state 352

state 153

    (465) MemberFunctionAttributes_opt -> MemberFunctionAttributes .

    ASSIGN          reduce using rule 465 (MemberFunctionAttributes_opt -> MemberFunctionAttributes .)
    COMMA           reduce using rule 465 (MemberFunctionAttributes_opt -> MemberFunctionAttributes .)
    SEMICOLON       reduce using rule 465 (MemberFunctionAttributes_opt -> MemberFunctionAttributes .)
    RPAREN          reduce using rule 465 (MemberFunctionAttributes_opt -> MemberFunctionAttributes .)
    ELLIPSIS        reduce using rule 465 (MemberFunctionAttributes_opt -> MemberFunctionAttributes .)
    LBRACE          reduce using rule 465 (MemberFunctionAttributes_opt -> MemberFunctionAttributes .)
    BODY            reduce using rule 465 (MemberFunctionAttributes_opt -> MemberFunctionAttributes .)


state 154

    (468) MemberFunctionAttribute -> IMMUTABLE .

    CONST           reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    IMMUTABLE       reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    RETURN          reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    ASSIGN          reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    COMMA           reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    SEMICOLON       reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    RPAREN          reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    ELLIPSIS        reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    LBRACE          reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)
    BODY            reduce using rule 468 (MemberFunctionAttribute -> IMMUTABLE .)


state 155

    (466) MemberFunctionAttributes_opt -> empty .

    ASSIGN          reduce using rule 466 (MemberFunctionAttributes_opt -> empty .)
    COMMA           reduce using rule 466 (MemberFunctionAttributes_opt -> empty .)
    SEMICOLON       reduce using rule 466 (MemberFunctionAttributes_opt -> empty .)
    RPAREN          reduce using rule 466 (MemberFunctionAttributes_opt -> empty .)
    ELLIPSIS        reduce using rule 466 (MemberFunctionAttributes_opt -> empty .)
    LBRACE          reduce using rule 466 (MemberFunctionAttributes_opt -> empty .)
    BODY            reduce using rule 466 (MemberFunctionAttributes_opt -> empty .)


state 156

    (451) Parameter -> InOut_opt . BasicType Declarator
    (452) Parameter -> InOut_opt . BasicType Declarator ELLIPSIS
    (453) Parameter -> InOut_opt . BasicType Declarator ASSIGN AssignExpression
    (454) Parameter -> InOut_opt . Type
    (455) Parameter -> InOut_opt . Type ELLIPSIS
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (75) Type -> . BasicType BasicType2_opt
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 354
    IdentifierList                 shift and go to state 33
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    Type                           shift and go to state 353

state 157

    (458) InOutX -> AUTO .

    AUTO            reduce using rule 458 (InOutX -> AUTO .)
    FINAL           reduce using rule 458 (InOutX -> AUTO .)
    SCOPE           reduce using rule 458 (InOutX -> AUTO .)
    DOT             reduce using rule 458 (InOutX -> AUTO .)
    BOOL            reduce using rule 458 (InOutX -> AUTO .)
    SHORT           reduce using rule 458 (InOutX -> AUTO .)
    USHORT          reduce using rule 458 (InOutX -> AUTO .)
    INT             reduce using rule 458 (InOutX -> AUTO .)
    UINT            reduce using rule 458 (InOutX -> AUTO .)
    LONG            reduce using rule 458 (InOutX -> AUTO .)
    ULONG           reduce using rule 458 (InOutX -> AUTO .)
    CHAR            reduce using rule 458 (InOutX -> AUTO .)
    FLOAT           reduce using rule 458 (InOutX -> AUTO .)
    VOID            reduce using rule 458 (InOutX -> AUTO .)
    IDENTIFIER      reduce using rule 458 (InOutX -> AUTO .)
    TYPEOF          reduce using rule 458 (InOutX -> AUTO .)


state 158

    (460) InOutX -> SCOPE .

    AUTO            reduce using rule 460 (InOutX -> SCOPE .)
    FINAL           reduce using rule 460 (InOutX -> SCOPE .)
    SCOPE           reduce using rule 460 (InOutX -> SCOPE .)
    DOT             reduce using rule 460 (InOutX -> SCOPE .)
    BOOL            reduce using rule 460 (InOutX -> SCOPE .)
    SHORT           reduce using rule 460 (InOutX -> SCOPE .)
    USHORT          reduce using rule 460 (InOutX -> SCOPE .)
    INT             reduce using rule 460 (InOutX -> SCOPE .)
    UINT            reduce using rule 460 (InOutX -> SCOPE .)
    LONG            reduce using rule 460 (InOutX -> SCOPE .)
    ULONG           reduce using rule 460 (InOutX -> SCOPE .)
    CHAR            reduce using rule 460 (InOutX -> SCOPE .)
    FLOAT           reduce using rule 460 (InOutX -> SCOPE .)
    VOID            reduce using rule 460 (InOutX -> SCOPE .)
    IDENTIFIER      reduce using rule 460 (InOutX -> SCOPE .)
    TYPEOF          reduce using rule 460 (InOutX -> SCOPE .)


state 159

    (459) InOutX -> FINAL .

    AUTO            reduce using rule 459 (InOutX -> FINAL .)
    FINAL           reduce using rule 459 (InOutX -> FINAL .)
    SCOPE           reduce using rule 459 (InOutX -> FINAL .)
    DOT             reduce using rule 459 (InOutX -> FINAL .)
    BOOL            reduce using rule 459 (InOutX -> FINAL .)
    SHORT           reduce using rule 459 (InOutX -> FINAL .)
    USHORT          reduce using rule 459 (InOutX -> FINAL .)
    INT             reduce using rule 459 (InOutX -> FINAL .)
    UINT            reduce using rule 459 (InOutX -> FINAL .)
    LONG            reduce using rule 459 (InOutX -> FINAL .)
    ULONG           reduce using rule 459 (InOutX -> FINAL .)
    CHAR            reduce using rule 459 (InOutX -> FINAL .)
    FLOAT           reduce using rule 459 (InOutX -> FINAL .)
    VOID            reduce using rule 459 (InOutX -> FINAL .)
    IDENTIFIER      reduce using rule 459 (InOutX -> FINAL .)
    TYPEOF          reduce using rule 459 (InOutX -> FINAL .)


state 160

    (449) ParameterList_opt -> ParameterList .

    RPAREN          reduce using rule 449 (ParameterList_opt -> ParameterList .)


state 161

    (461) InOut_opt -> InOut .
    (457) InOut -> InOut . InOutX
    (458) InOutX -> . AUTO
    (459) InOutX -> . FINAL
    (460) InOutX -> . SCOPE

    DOT             reduce using rule 461 (InOut_opt -> InOut .)
    BOOL            reduce using rule 461 (InOut_opt -> InOut .)
    SHORT           reduce using rule 461 (InOut_opt -> InOut .)
    USHORT          reduce using rule 461 (InOut_opt -> InOut .)
    INT             reduce using rule 461 (InOut_opt -> InOut .)
    UINT            reduce using rule 461 (InOut_opt -> InOut .)
    LONG            reduce using rule 461 (InOut_opt -> InOut .)
    ULONG           reduce using rule 461 (InOut_opt -> InOut .)
    CHAR            reduce using rule 461 (InOut_opt -> InOut .)
    FLOAT           reduce using rule 461 (InOut_opt -> InOut .)
    VOID            reduce using rule 461 (InOut_opt -> InOut .)
    IDENTIFIER      reduce using rule 461 (InOut_opt -> InOut .)
    TYPEOF          reduce using rule 461 (InOut_opt -> InOut .)
    AUTO            shift and go to state 157
    FINAL           shift and go to state 159
    SCOPE           shift and go to state 158

    InOutX                         shift and go to state 355

state 162

    (448) ParameterList -> ELLIPSIS .

    RPAREN          reduce using rule 448 (ParameterList -> ELLIPSIS .)


state 163

    (445) Parameters -> LPAREN ParameterList_opt . RPAREN

    RPAREN          shift and go to state 356


state 164

    (456) InOut -> InOutX .

    AUTO            reduce using rule 456 (InOut -> InOutX .)
    FINAL           reduce using rule 456 (InOut -> InOutX .)
    SCOPE           reduce using rule 456 (InOut -> InOutX .)
    DOT             reduce using rule 456 (InOut -> InOutX .)
    BOOL            reduce using rule 456 (InOut -> InOutX .)
    SHORT           reduce using rule 456 (InOut -> InOutX .)
    USHORT          reduce using rule 456 (InOut -> InOutX .)
    INT             reduce using rule 456 (InOut -> InOutX .)
    UINT            reduce using rule 456 (InOut -> InOutX .)
    LONG            reduce using rule 456 (InOut -> InOutX .)
    ULONG           reduce using rule 456 (InOut -> InOutX .)
    CHAR            reduce using rule 456 (InOut -> InOutX .)
    FLOAT           reduce using rule 456 (InOut -> InOutX .)
    VOID            reduce using rule 456 (InOut -> InOutX .)
    IDENTIFIER      reduce using rule 456 (InOut -> InOutX .)
    TYPEOF          reduce using rule 456 (InOut -> InOutX .)


state 165

    (446) ParameterList -> Parameter .
    (447) ParameterList -> Parameter . COMMA ParameterList

    RPAREN          reduce using rule 446 (ParameterList -> Parameter .)
    COMMA           shift and go to state 357


state 166

    (450) ParameterList_opt -> empty .
    (462) InOut_opt -> empty .

    RPAREN          reduce using rule 450 (ParameterList_opt -> empty .)
    DOT             reduce using rule 462 (InOut_opt -> empty .)
    BOOL            reduce using rule 462 (InOut_opt -> empty .)
    SHORT           reduce using rule 462 (InOut_opt -> empty .)
    USHORT          reduce using rule 462 (InOut_opt -> empty .)
    INT             reduce using rule 462 (InOut_opt -> empty .)
    UINT            reduce using rule 462 (InOut_opt -> empty .)
    LONG            reduce using rule 462 (InOut_opt -> empty .)
    ULONG           reduce using rule 462 (InOut_opt -> empty .)
    CHAR            reduce using rule 462 (InOut_opt -> empty .)
    FLOAT           reduce using rule 462 (InOut_opt -> empty .)
    VOID            reduce using rule 462 (InOut_opt -> empty .)
    IDENTIFIER      reduce using rule 462 (InOut_opt -> empty .)
    TYPEOF          reduce using rule 462 (InOut_opt -> empty .)


state 167

    (21) ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .

    SEMICOLON       reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    CASE            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    DEFAULT         reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    LBRACE          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    IF              reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    WHILE           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    DO              reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    FOR             reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    SWITCH          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    FINAL           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    CONTINUE        reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    BREAK           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    RETURN          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    GOTO            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    WITH            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    MIXIN           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    IMPORT          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    STATIC          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    LPAREN          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    ALIAS           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    ENUM            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    EXTERN          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    AUTO            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    CONST           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    IMMUTABLE       reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    FOREACH         reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    FOREACH_REVERSE reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    CLASS           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    UNION           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    AMPERSAND       reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    PLUS_PLUS       reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    MINUS_MINUS     reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    TIMES           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    MINUS           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    PLUS            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    EXCLAMATION     reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    TILDE           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    CAST            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    DOT             reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    THIS            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    NULL            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    TRUE            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    FALSE           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    DOLLAR          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    INUMBER         reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    DNUMBER         reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    LIT_CHAR        reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    LIT_STR         reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    LBRACKET        reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    FUNCTION        reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    NEW             reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    BOOL            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    SHORT           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    USHORT          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    INT             reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    UINT            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    LONG            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    ULONG           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    CHAR            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    FLOAT           reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    VOID            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    TYPEOF          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    TYPEID          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    BODY            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    RBRACE          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    ELSE            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    $end            reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    DELETE          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    PRIVATE         reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    PROTECTED       reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)
    PUBLIC          reduce using rule 21 (ImportDeclaration -> STATIC IMPORT ImportList SEMICOLON .)


state 168

    (44) DeclaratorInitializer -> VarDeclarator ASSIGN . Initializer
    (114) Initializer -> . VoidInitializer
    (115) Initializer -> . NonVoidInitializer
    (142) VoidInitializer -> . VOID
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    VOID            shift and go to state 358
    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    Initializer                    shift and go to state 363
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    NonVoidInitializer             shift and go to state 360
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    ArrayInitializer               shift and go to state 361
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    IdentifierList                 shift and go to state 243
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    VoidInitializer                shift and go to state 362
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 365

state 169

    (255) ArrayLiteral -> LBRACKET . ArgumentList_opt RBRACKET
    (217) ArgumentList_opt -> . ArgumentList
    (218) ArgumentList_opt -> . empty
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (477) empty -> .
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RBRACKET        reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 366
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 368
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ArgumentList_opt               shift and go to state 367
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 170

    (174) XorExpression -> AndExpression .
    (177) AndExpression -> AndExpression . AMPERSAND CmpExpression

    CARET           reduce using rule 174 (XorExpression -> AndExpression .)
    PIPE            reduce using rule 174 (XorExpression -> AndExpression .)
    DOUBLE_AMPERSAND reduce using rule 174 (XorExpression -> AndExpression .)
    QUESTION        reduce using rule 174 (XorExpression -> AndExpression .)
    DOUBLE_PIPE     reduce using rule 174 (XorExpression -> AndExpression .)
    ASSIGN          reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_PLUS         reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_MINUS        reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_TIMES        reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_DIV          reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_MODULO       reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_AND_BIT      reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_OR_BIT       reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_XOR_BIT      reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_LEFT         reduce using rule 174 (XorExpression -> AndExpression .)
    EQ_RIGHT        reduce using rule 174 (XorExpression -> AndExpression .)
    RBRACKET        reduce using rule 174 (XorExpression -> AndExpression .)
    RANGE           reduce using rule 174 (XorExpression -> AndExpression .)
    COMMA           reduce using rule 174 (XorExpression -> AndExpression .)
    RPAREN          reduce using rule 174 (XorExpression -> AndExpression .)
    SEMICOLON       reduce using rule 174 (XorExpression -> AndExpression .)
    RBRACE          reduce using rule 174 (XorExpression -> AndExpression .)
    COLON           reduce using rule 174 (XorExpression -> AndExpression .)
    AMPERSAND       shift and go to state 370


state 171

    (238) PrimaryExpression -> TRUE .

    POWER           reduce using rule 238 (PrimaryExpression -> TRUE .)
    DOT             reduce using rule 238 (PrimaryExpression -> TRUE .)
    PLUS_PLUS       reduce using rule 238 (PrimaryExpression -> TRUE .)
    MINUS_MINUS     reduce using rule 238 (PrimaryExpression -> TRUE .)
    LPAREN          reduce using rule 238 (PrimaryExpression -> TRUE .)
    TIMES           reduce using rule 238 (PrimaryExpression -> TRUE .)
    DIV             reduce using rule 238 (PrimaryExpression -> TRUE .)
    MODULO          reduce using rule 238 (PrimaryExpression -> TRUE .)
    PLUS            reduce using rule 238 (PrimaryExpression -> TRUE .)
    MINUS           reduce using rule 238 (PrimaryExpression -> TRUE .)
    LEFT_SHIFT      reduce using rule 238 (PrimaryExpression -> TRUE .)
    RIGHT_SHIFT     reduce using rule 238 (PrimaryExpression -> TRUE .)
    IS_EQ           reduce using rule 238 (PrimaryExpression -> TRUE .)
    NOT_EQ          reduce using rule 238 (PrimaryExpression -> TRUE .)
    LESS            reduce using rule 238 (PrimaryExpression -> TRUE .)
    GREATER_EQ      reduce using rule 238 (PrimaryExpression -> TRUE .)
    GREATER         reduce using rule 238 (PrimaryExpression -> TRUE .)
    LESS_EQ         reduce using rule 238 (PrimaryExpression -> TRUE .)
    AMPERSAND       reduce using rule 238 (PrimaryExpression -> TRUE .)
    CARET           reduce using rule 238 (PrimaryExpression -> TRUE .)
    PIPE            reduce using rule 238 (PrimaryExpression -> TRUE .)
    DOUBLE_AMPERSAND reduce using rule 238 (PrimaryExpression -> TRUE .)
    QUESTION        reduce using rule 238 (PrimaryExpression -> TRUE .)
    DOUBLE_PIPE     reduce using rule 238 (PrimaryExpression -> TRUE .)
    ASSIGN          reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_PLUS         reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_MINUS        reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_TIMES        reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_DIV          reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_MODULO       reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_AND_BIT      reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_OR_BIT       reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_XOR_BIT      reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_LEFT         reduce using rule 238 (PrimaryExpression -> TRUE .)
    EQ_RIGHT        reduce using rule 238 (PrimaryExpression -> TRUE .)
    RBRACKET        reduce using rule 238 (PrimaryExpression -> TRUE .)
    RANGE           reduce using rule 238 (PrimaryExpression -> TRUE .)
    COMMA           reduce using rule 238 (PrimaryExpression -> TRUE .)
    RPAREN          reduce using rule 238 (PrimaryExpression -> TRUE .)
    SEMICOLON       reduce using rule 238 (PrimaryExpression -> TRUE .)
    RBRACE          reduce using rule 238 (PrimaryExpression -> TRUE .)
    COLON           reduce using rule 238 (PrimaryExpression -> TRUE .)


state 172

    (201) UnaryExpression -> MINUS . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 371
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 173

    (166) ConditionalExpression -> OrOrExpression .
    (167) ConditionalExpression -> OrOrExpression . QUESTION Expression COLON ConditionalExpression
    (169) OrOrExpression -> OrOrExpression . DOUBLE_PIPE AndAndExpression

    ASSIGN          reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_PLUS         reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_MINUS        reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_TIMES        reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_DIV          reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_MODULO       reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_AND_BIT      reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_OR_BIT       reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_XOR_BIT      reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_LEFT         reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    EQ_RIGHT        reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    COMMA           reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    RPAREN          reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    SEMICOLON       reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    COLON           reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    RBRACKET        reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    RANGE           reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    RBRACE          reduce using rule 166 (ConditionalExpression -> OrOrExpression .)
    QUESTION        shift and go to state 372
    DOUBLE_PIPE     shift and go to state 373


state 174

    (202) UnaryExpression -> PLUS . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 374
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 175

    (265) FunctionLiteralBody -> BlockStatement .

    POWER           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOT             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS_PLUS       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS_MINUS     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LPAREN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    TIMES           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DIV             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MODULO          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LEFT_SHIFT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RIGHT_SHIFT     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    IS_EQ           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    NOT_EQ          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER_EQ      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS_EQ         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    AMPERSAND       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CARET           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PIPE            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_AMPERSAND reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    QUESTION        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_PIPE     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    ASSIGN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_PLUS         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MINUS        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_TIMES        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_DIV          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MODULO       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_AND_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_OR_BIT       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_XOR_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_LEFT         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_RIGHT        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    COMMA           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    SEMICOLON       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RBRACKET        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RANGE           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RPAREN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RBRACE          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    COLON           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)


state 176

    (270) ImportExpression -> IMPORT . LPAREN AssignExpression RPAREN

    LPAREN          shift and go to state 375


state 177

    (180) CmpExpression -> RelExpression .

    AMPERSAND       reduce using rule 180 (CmpExpression -> RelExpression .)
    CARET           reduce using rule 180 (CmpExpression -> RelExpression .)
    PIPE            reduce using rule 180 (CmpExpression -> RelExpression .)
    DOUBLE_AMPERSAND reduce using rule 180 (CmpExpression -> RelExpression .)
    QUESTION        reduce using rule 180 (CmpExpression -> RelExpression .)
    DOUBLE_PIPE     reduce using rule 180 (CmpExpression -> RelExpression .)
    ASSIGN          reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_PLUS         reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_MINUS        reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_TIMES        reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_DIV          reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_MODULO       reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_AND_BIT      reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_OR_BIT       reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_XOR_BIT      reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_LEFT         reduce using rule 180 (CmpExpression -> RelExpression .)
    EQ_RIGHT        reduce using rule 180 (CmpExpression -> RelExpression .)
    RBRACKET        reduce using rule 180 (CmpExpression -> RelExpression .)
    RANGE           reduce using rule 180 (CmpExpression -> RelExpression .)
    COMMA           reduce using rule 180 (CmpExpression -> RelExpression .)
    RPAREN          reduce using rule 180 (CmpExpression -> RelExpression .)
    SEMICOLON       reduce using rule 180 (CmpExpression -> RelExpression .)
    RBRACE          reduce using rule 180 (CmpExpression -> RelExpression .)
    COLON           reduce using rule 180 (CmpExpression -> RelExpression .)


state 178

    (242) PrimaryExpression -> DNUMBER .

    POWER           reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    DOT             reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    PLUS_PLUS       reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    MINUS_MINUS     reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    LPAREN          reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    TIMES           reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    DIV             reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    MODULO          reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    PLUS            reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    MINUS           reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    LEFT_SHIFT      reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    RIGHT_SHIFT     reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    IS_EQ           reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    NOT_EQ          reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    LESS            reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    GREATER_EQ      reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    GREATER         reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    LESS_EQ         reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    AMPERSAND       reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    CARET           reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    PIPE            reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    DOUBLE_AMPERSAND reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    QUESTION        reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    DOUBLE_PIPE     reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    ASSIGN          reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_PLUS         reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_MINUS        reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_TIMES        reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_DIV          reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_MODULO       reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_AND_BIT      reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_OR_BIT       reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_XOR_BIT      reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_LEFT         reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    EQ_RIGHT        reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    RBRACKET        reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    RANGE           reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    COMMA           reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    RPAREN          reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    SEMICOLON       reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    RBRACE          reduce using rule 242 (PrimaryExpression -> DNUMBER .)
    COLON           reduce using rule 242 (PrimaryExpression -> DNUMBER .)


state 179

    (179) CmpExpression -> EqualExpression .

    AMPERSAND       reduce using rule 179 (CmpExpression -> EqualExpression .)
    CARET           reduce using rule 179 (CmpExpression -> EqualExpression .)
    PIPE            reduce using rule 179 (CmpExpression -> EqualExpression .)
    DOUBLE_AMPERSAND reduce using rule 179 (CmpExpression -> EqualExpression .)
    QUESTION        reduce using rule 179 (CmpExpression -> EqualExpression .)
    DOUBLE_PIPE     reduce using rule 179 (CmpExpression -> EqualExpression .)
    ASSIGN          reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_PLUS         reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_MINUS        reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_TIMES        reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_DIV          reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_MODULO       reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_AND_BIT      reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_OR_BIT       reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_XOR_BIT      reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_LEFT         reduce using rule 179 (CmpExpression -> EqualExpression .)
    EQ_RIGHT        reduce using rule 179 (CmpExpression -> EqualExpression .)
    RBRACKET        reduce using rule 179 (CmpExpression -> EqualExpression .)
    RANGE           reduce using rule 179 (CmpExpression -> EqualExpression .)
    COMMA           reduce using rule 179 (CmpExpression -> EqualExpression .)
    RPAREN          reduce using rule 179 (CmpExpression -> EqualExpression .)
    SEMICOLON       reduce using rule 179 (CmpExpression -> EqualExpression .)
    RBRACE          reduce using rule 179 (CmpExpression -> EqualExpression .)
    COLON           reduce using rule 179 (CmpExpression -> EqualExpression .)


state 180

    (154) AssignExpression -> ConditionalExpression .
    (155) AssignExpression -> ConditionalExpression . ASSIGN AssignExpression
    (156) AssignExpression -> ConditionalExpression . EQ_PLUS AssignExpression
    (157) AssignExpression -> ConditionalExpression . EQ_MINUS AssignExpression
    (158) AssignExpression -> ConditionalExpression . EQ_TIMES AssignExpression
    (159) AssignExpression -> ConditionalExpression . EQ_DIV AssignExpression
    (160) AssignExpression -> ConditionalExpression . EQ_MODULO AssignExpression
    (161) AssignExpression -> ConditionalExpression . EQ_AND_BIT AssignExpression
    (162) AssignExpression -> ConditionalExpression . EQ_OR_BIT AssignExpression
    (163) AssignExpression -> ConditionalExpression . EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> ConditionalExpression . EQ_LEFT AssignExpression
    (165) AssignExpression -> ConditionalExpression . EQ_RIGHT AssignExpression

    RBRACKET        reduce using rule 154 (AssignExpression -> ConditionalExpression .)
    RANGE           reduce using rule 154 (AssignExpression -> ConditionalExpression .)
    COMMA           reduce using rule 154 (AssignExpression -> ConditionalExpression .)
    RPAREN          reduce using rule 154 (AssignExpression -> ConditionalExpression .)
    SEMICOLON       reduce using rule 154 (AssignExpression -> ConditionalExpression .)
    RBRACE          reduce using rule 154 (AssignExpression -> ConditionalExpression .)
    COLON           reduce using rule 154 (AssignExpression -> ConditionalExpression .)
    ASSIGN          shift and go to state 386
    EQ_PLUS         shift and go to state 379
    EQ_MINUS        shift and go to state 382
    EQ_TIMES        shift and go to state 378
    EQ_DIV          shift and go to state 380
    EQ_MODULO       shift and go to state 385
    EQ_AND_BIT      shift and go to state 377
    EQ_OR_BIT       shift and go to state 384
    EQ_XOR_BIT      shift and go to state 381
    EQ_LEFT         shift and go to state 383
    EQ_RIGHT        shift and go to state 376


state 181

    (239) PrimaryExpression -> FALSE .

    POWER           reduce using rule 239 (PrimaryExpression -> FALSE .)
    DOT             reduce using rule 239 (PrimaryExpression -> FALSE .)
    PLUS_PLUS       reduce using rule 239 (PrimaryExpression -> FALSE .)
    MINUS_MINUS     reduce using rule 239 (PrimaryExpression -> FALSE .)
    LPAREN          reduce using rule 239 (PrimaryExpression -> FALSE .)
    TIMES           reduce using rule 239 (PrimaryExpression -> FALSE .)
    DIV             reduce using rule 239 (PrimaryExpression -> FALSE .)
    MODULO          reduce using rule 239 (PrimaryExpression -> FALSE .)
    PLUS            reduce using rule 239 (PrimaryExpression -> FALSE .)
    MINUS           reduce using rule 239 (PrimaryExpression -> FALSE .)
    LEFT_SHIFT      reduce using rule 239 (PrimaryExpression -> FALSE .)
    RIGHT_SHIFT     reduce using rule 239 (PrimaryExpression -> FALSE .)
    IS_EQ           reduce using rule 239 (PrimaryExpression -> FALSE .)
    NOT_EQ          reduce using rule 239 (PrimaryExpression -> FALSE .)
    LESS            reduce using rule 239 (PrimaryExpression -> FALSE .)
    GREATER_EQ      reduce using rule 239 (PrimaryExpression -> FALSE .)
    GREATER         reduce using rule 239 (PrimaryExpression -> FALSE .)
    LESS_EQ         reduce using rule 239 (PrimaryExpression -> FALSE .)
    AMPERSAND       reduce using rule 239 (PrimaryExpression -> FALSE .)
    CARET           reduce using rule 239 (PrimaryExpression -> FALSE .)
    PIPE            reduce using rule 239 (PrimaryExpression -> FALSE .)
    DOUBLE_AMPERSAND reduce using rule 239 (PrimaryExpression -> FALSE .)
    QUESTION        reduce using rule 239 (PrimaryExpression -> FALSE .)
    DOUBLE_PIPE     reduce using rule 239 (PrimaryExpression -> FALSE .)
    ASSIGN          reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_PLUS         reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_MINUS        reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_TIMES        reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_DIV          reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_MODULO       reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_AND_BIT      reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_OR_BIT       reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_XOR_BIT      reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_LEFT         reduce using rule 239 (PrimaryExpression -> FALSE .)
    EQ_RIGHT        reduce using rule 239 (PrimaryExpression -> FALSE .)
    RBRACKET        reduce using rule 239 (PrimaryExpression -> FALSE .)
    RANGE           reduce using rule 239 (PrimaryExpression -> FALSE .)
    COMMA           reduce using rule 239 (PrimaryExpression -> FALSE .)
    RPAREN          reduce using rule 239 (PrimaryExpression -> FALSE .)
    SEMICOLON       reduce using rule 239 (PrimaryExpression -> FALSE .)
    RBRACE          reduce using rule 239 (PrimaryExpression -> FALSE .)
    COLON           reduce using rule 239 (PrimaryExpression -> FALSE .)


state 182

    (236) PrimaryExpression -> THIS .

    POWER           reduce using rule 236 (PrimaryExpression -> THIS .)
    DOT             reduce using rule 236 (PrimaryExpression -> THIS .)
    PLUS_PLUS       reduce using rule 236 (PrimaryExpression -> THIS .)
    MINUS_MINUS     reduce using rule 236 (PrimaryExpression -> THIS .)
    LPAREN          reduce using rule 236 (PrimaryExpression -> THIS .)
    TIMES           reduce using rule 236 (PrimaryExpression -> THIS .)
    DIV             reduce using rule 236 (PrimaryExpression -> THIS .)
    MODULO          reduce using rule 236 (PrimaryExpression -> THIS .)
    PLUS            reduce using rule 236 (PrimaryExpression -> THIS .)
    MINUS           reduce using rule 236 (PrimaryExpression -> THIS .)
    LEFT_SHIFT      reduce using rule 236 (PrimaryExpression -> THIS .)
    RIGHT_SHIFT     reduce using rule 236 (PrimaryExpression -> THIS .)
    IS_EQ           reduce using rule 236 (PrimaryExpression -> THIS .)
    NOT_EQ          reduce using rule 236 (PrimaryExpression -> THIS .)
    LESS            reduce using rule 236 (PrimaryExpression -> THIS .)
    GREATER_EQ      reduce using rule 236 (PrimaryExpression -> THIS .)
    GREATER         reduce using rule 236 (PrimaryExpression -> THIS .)
    LESS_EQ         reduce using rule 236 (PrimaryExpression -> THIS .)
    AMPERSAND       reduce using rule 236 (PrimaryExpression -> THIS .)
    CARET           reduce using rule 236 (PrimaryExpression -> THIS .)
    PIPE            reduce using rule 236 (PrimaryExpression -> THIS .)
    DOUBLE_AMPERSAND reduce using rule 236 (PrimaryExpression -> THIS .)
    QUESTION        reduce using rule 236 (PrimaryExpression -> THIS .)
    DOUBLE_PIPE     reduce using rule 236 (PrimaryExpression -> THIS .)
    ASSIGN          reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_PLUS         reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_MINUS        reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_TIMES        reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_DIV          reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_MODULO       reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_AND_BIT      reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_OR_BIT       reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_XOR_BIT      reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_LEFT         reduce using rule 236 (PrimaryExpression -> THIS .)
    EQ_RIGHT        reduce using rule 236 (PrimaryExpression -> THIS .)
    RBRACKET        reduce using rule 236 (PrimaryExpression -> THIS .)
    RANGE           reduce using rule 236 (PrimaryExpression -> THIS .)
    COMMA           reduce using rule 236 (PrimaryExpression -> THIS .)
    RPAREN          reduce using rule 236 (PrimaryExpression -> THIS .)
    SEMICOLON       reduce using rule 236 (PrimaryExpression -> THIS .)
    RBRACE          reduce using rule 236 (PrimaryExpression -> THIS .)
    COLON           reduce using rule 236 (PrimaryExpression -> THIS .)


state 183

    (178) CmpExpression -> ShiftExpression .
    (188) ShiftExpression -> ShiftExpression . LEFT_SHIFT AddExpression
    (189) ShiftExpression -> ShiftExpression . RIGHT_SHIFT AddExpression
    (181) EqualExpression -> ShiftExpression . IS_EQ ShiftExpression
    (182) EqualExpression -> ShiftExpression . NOT_EQ ShiftExpression
    (183) RelExpression -> ShiftExpression . LESS ShiftExpression
    (184) RelExpression -> ShiftExpression . GREATER_EQ ShiftExpression
    (185) RelExpression -> ShiftExpression . GREATER ShiftExpression
    (186) RelExpression -> ShiftExpression . LESS_EQ ShiftExpression

    AMPERSAND       reduce using rule 178 (CmpExpression -> ShiftExpression .)
    CARET           reduce using rule 178 (CmpExpression -> ShiftExpression .)
    PIPE            reduce using rule 178 (CmpExpression -> ShiftExpression .)
    DOUBLE_AMPERSAND reduce using rule 178 (CmpExpression -> ShiftExpression .)
    QUESTION        reduce using rule 178 (CmpExpression -> ShiftExpression .)
    DOUBLE_PIPE     reduce using rule 178 (CmpExpression -> ShiftExpression .)
    ASSIGN          reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_PLUS         reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_MINUS        reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_TIMES        reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_DIV          reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_MODULO       reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_AND_BIT      reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_OR_BIT       reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_XOR_BIT      reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_LEFT         reduce using rule 178 (CmpExpression -> ShiftExpression .)
    EQ_RIGHT        reduce using rule 178 (CmpExpression -> ShiftExpression .)
    RBRACKET        reduce using rule 178 (CmpExpression -> ShiftExpression .)
    RANGE           reduce using rule 178 (CmpExpression -> ShiftExpression .)
    COMMA           reduce using rule 178 (CmpExpression -> ShiftExpression .)
    RPAREN          reduce using rule 178 (CmpExpression -> ShiftExpression .)
    SEMICOLON       reduce using rule 178 (CmpExpression -> ShiftExpression .)
    RBRACE          reduce using rule 178 (CmpExpression -> ShiftExpression .)
    COLON           reduce using rule 178 (CmpExpression -> ShiftExpression .)
    LEFT_SHIFT      shift and go to state 391
    RIGHT_SHIFT     shift and go to state 393
    IS_EQ           shift and go to state 388
    NOT_EQ          shift and go to state 394
    LESS            shift and go to state 390
    GREATER_EQ      shift and go to state 392
    GREATER         shift and go to state 389
    LESS_EQ         shift and go to state 387


state 184

    (190) AddExpression -> MulExpression .
    (194) MulExpression -> MulExpression . TIMES UnaryExpression
    (195) MulExpression -> MulExpression . DIV UnaryExpression
    (196) MulExpression -> MulExpression . MODULO UnaryExpression

    PLUS            reduce using rule 190 (AddExpression -> MulExpression .)
    MINUS           reduce using rule 190 (AddExpression -> MulExpression .)
    LEFT_SHIFT      reduce using rule 190 (AddExpression -> MulExpression .)
    RIGHT_SHIFT     reduce using rule 190 (AddExpression -> MulExpression .)
    IS_EQ           reduce using rule 190 (AddExpression -> MulExpression .)
    NOT_EQ          reduce using rule 190 (AddExpression -> MulExpression .)
    LESS            reduce using rule 190 (AddExpression -> MulExpression .)
    GREATER_EQ      reduce using rule 190 (AddExpression -> MulExpression .)
    GREATER         reduce using rule 190 (AddExpression -> MulExpression .)
    LESS_EQ         reduce using rule 190 (AddExpression -> MulExpression .)
    AMPERSAND       reduce using rule 190 (AddExpression -> MulExpression .)
    CARET           reduce using rule 190 (AddExpression -> MulExpression .)
    PIPE            reduce using rule 190 (AddExpression -> MulExpression .)
    DOUBLE_AMPERSAND reduce using rule 190 (AddExpression -> MulExpression .)
    QUESTION        reduce using rule 190 (AddExpression -> MulExpression .)
    DOUBLE_PIPE     reduce using rule 190 (AddExpression -> MulExpression .)
    ASSIGN          reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_PLUS         reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_MINUS        reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_TIMES        reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_DIV          reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_MODULO       reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_AND_BIT      reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_OR_BIT       reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_XOR_BIT      reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_LEFT         reduce using rule 190 (AddExpression -> MulExpression .)
    EQ_RIGHT        reduce using rule 190 (AddExpression -> MulExpression .)
    COMMA           reduce using rule 190 (AddExpression -> MulExpression .)
    RPAREN          reduce using rule 190 (AddExpression -> MulExpression .)
    SEMICOLON       reduce using rule 190 (AddExpression -> MulExpression .)
    RBRACKET        reduce using rule 190 (AddExpression -> MulExpression .)
    RANGE           reduce using rule 190 (AddExpression -> MulExpression .)
    RBRACE          reduce using rule 190 (AddExpression -> MulExpression .)
    COLON           reduce using rule 190 (AddExpression -> MulExpression .)
    TIMES           shift and go to state 397
    DIV             shift and go to state 396
    MODULO          shift and go to state 395


state 185

    (213) NewExpressionWithArgs -> NewAnonClassExpression .

    POWER           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    DOT             reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    PLUS_PLUS       reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    MINUS_MINUS     reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    LPAREN          reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    TIMES           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    DIV             reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    MODULO          reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    PLUS            reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    MINUS           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    LEFT_SHIFT      reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    RIGHT_SHIFT     reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    IS_EQ           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    NOT_EQ          reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    LESS            reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    GREATER_EQ      reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    GREATER         reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    LESS_EQ         reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    AMPERSAND       reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    CARET           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    PIPE            reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    DOUBLE_AMPERSAND reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    QUESTION        reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    DOUBLE_PIPE     reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    ASSIGN          reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_PLUS         reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_MINUS        reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_TIMES        reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_DIV          reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_MODULO       reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_AND_BIT      reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_OR_BIT       reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_XOR_BIT      reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_LEFT         reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    EQ_RIGHT        reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    RBRACKET        reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    RANGE           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    COMMA           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    RPAREN          reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    SEMICOLON       reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    RBRACE          reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)
    COLON           reduce using rule 213 (NewExpressionWithArgs -> NewAnonClassExpression .)


state 186

    (264) ParameterMemberAttributes -> Parameters . MemberFunctionAttributes_opt
    (465) MemberFunctionAttributes_opt -> . MemberFunctionAttributes
    (466) MemberFunctionAttributes_opt -> . empty
    (463) MemberFunctionAttributes -> . MemberFunctionAttribute
    (464) MemberFunctionAttributes -> . MemberFunctionAttribute MemberFunctionAttributes
    (477) empty -> .
    (467) MemberFunctionAttribute -> . CONST
    (468) MemberFunctionAttribute -> . IMMUTABLE
    (469) MemberFunctionAttribute -> . RETURN

    LBRACE          reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)
    CONST           shift and go to state 150
    IMMUTABLE       shift and go to state 154
    RETURN          shift and go to state 149

    MemberFunctionAttributes       shift and go to state 153
    MemberFunctionAttributes_opt   shift and go to state 398
    empty                          shift and go to state 155
    MemberFunctionAttribute        shift and go to state 152

state 187

    (259) FunctionLiteral -> ParameterMemberAttributes . FunctionLiteralBody
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    BlockStatement                 shift and go to state 175
    BodyStatement                  shift and go to state 213
    FunctionLiteralBody            shift and go to state 399

state 188

    (248) PrimaryExpression -> ImportExpression .

    POWER           reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    DOT             reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    PLUS_PLUS       reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    MINUS_MINUS     reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    LPAREN          reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    TIMES           reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    DIV             reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    MODULO          reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    PLUS            reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    MINUS           reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    LEFT_SHIFT      reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    RIGHT_SHIFT     reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    IS_EQ           reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    NOT_EQ          reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    LESS            reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    GREATER_EQ      reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    GREATER         reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    LESS_EQ         reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    AMPERSAND       reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    CARET           reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    PIPE            reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    DOUBLE_AMPERSAND reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    QUESTION        reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    DOUBLE_PIPE     reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    ASSIGN          reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_PLUS         reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_MINUS        reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_TIMES        reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_DIV          reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_MODULO       reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_AND_BIT      reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_OR_BIT       reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_XOR_BIT      reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_LEFT         reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    EQ_RIGHT        reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    RBRACKET        reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    RANGE           reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    COMMA           reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    RPAREN          reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    SEMICOLON       reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    RBRACE          reduce using rule 248 (PrimaryExpression -> ImportExpression .)
    COLON           reduce using rule 248 (PrimaryExpression -> ImportExpression .)


state 189

    (80) BasicType -> IdentifierList .
    (234) PrimaryExpression -> IdentifierList .

  ! reduce/reduce conflict for LPAREN resolved using rule 80 (BasicType -> IdentifierList .)
  ! reduce/reduce conflict for TIMES resolved using rule 80 (BasicType -> IdentifierList .)
  ! reduce/reduce conflict for RPAREN resolved using rule 80 (BasicType -> IdentifierList .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 80 (BasicType -> IdentifierList .)
    LPAREN          reduce using rule 80 (BasicType -> IdentifierList .)
    TIMES           reduce using rule 80 (BasicType -> IdentifierList .)
    LBRACKET        reduce using rule 80 (BasicType -> IdentifierList .)
    FUNCTION        reduce using rule 80 (BasicType -> IdentifierList .)
    RPAREN          reduce using rule 80 (BasicType -> IdentifierList .)
    RBRACKET        reduce using rule 80 (BasicType -> IdentifierList .)
    IDENTIFIER      reduce using rule 80 (BasicType -> IdentifierList .)
    POWER           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DOT             reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    PLUS_PLUS       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    MINUS_MINUS     reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DIV             reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    MODULO          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    PLUS            reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    MINUS           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    LEFT_SHIFT      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    RIGHT_SHIFT     reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    IS_EQ           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    NOT_EQ          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    LESS            reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    GREATER_EQ      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    GREATER         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    LESS_EQ         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    AMPERSAND       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    CARET           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    PIPE            reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DOUBLE_AMPERSAND reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    QUESTION        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DOUBLE_PIPE     reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    ASSIGN          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_PLUS         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_MINUS        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_TIMES        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_DIV          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_MODULO       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_AND_BIT      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_OR_BIT       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_XOR_BIT      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_LEFT         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_RIGHT        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    COMMA           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    RANGE           reduce using rule 234 (PrimaryExpression -> IdentifierList .)

  ! LPAREN          [ reduce using rule 234 (PrimaryExpression -> IdentifierList .) ]
  ! TIMES           [ reduce using rule 234 (PrimaryExpression -> IdentifierList .) ]
  ! RPAREN          [ reduce using rule 234 (PrimaryExpression -> IdentifierList .) ]
  ! RBRACKET        [ reduce using rule 234 (PrimaryExpression -> IdentifierList .) ]


state 190

    (207) UnaryExpression -> PowExpression .

    TIMES           reduce using rule 207 (UnaryExpression -> PowExpression .)
    DIV             reduce using rule 207 (UnaryExpression -> PowExpression .)
    MODULO          reduce using rule 207 (UnaryExpression -> PowExpression .)
    PLUS            reduce using rule 207 (UnaryExpression -> PowExpression .)
    MINUS           reduce using rule 207 (UnaryExpression -> PowExpression .)
    LEFT_SHIFT      reduce using rule 207 (UnaryExpression -> PowExpression .)
    RIGHT_SHIFT     reduce using rule 207 (UnaryExpression -> PowExpression .)
    IS_EQ           reduce using rule 207 (UnaryExpression -> PowExpression .)
    NOT_EQ          reduce using rule 207 (UnaryExpression -> PowExpression .)
    LESS            reduce using rule 207 (UnaryExpression -> PowExpression .)
    GREATER_EQ      reduce using rule 207 (UnaryExpression -> PowExpression .)
    GREATER         reduce using rule 207 (UnaryExpression -> PowExpression .)
    LESS_EQ         reduce using rule 207 (UnaryExpression -> PowExpression .)
    AMPERSAND       reduce using rule 207 (UnaryExpression -> PowExpression .)
    CARET           reduce using rule 207 (UnaryExpression -> PowExpression .)
    PIPE            reduce using rule 207 (UnaryExpression -> PowExpression .)
    DOUBLE_AMPERSAND reduce using rule 207 (UnaryExpression -> PowExpression .)
    QUESTION        reduce using rule 207 (UnaryExpression -> PowExpression .)
    DOUBLE_PIPE     reduce using rule 207 (UnaryExpression -> PowExpression .)
    ASSIGN          reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_PLUS         reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_MINUS        reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_TIMES        reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_DIV          reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_MODULO       reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_AND_BIT      reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_OR_BIT       reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_XOR_BIT      reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_LEFT         reduce using rule 207 (UnaryExpression -> PowExpression .)
    EQ_RIGHT        reduce using rule 207 (UnaryExpression -> PowExpression .)
    COMMA           reduce using rule 207 (UnaryExpression -> PowExpression .)
    RPAREN          reduce using rule 207 (UnaryExpression -> PowExpression .)
    RBRACKET        reduce using rule 207 (UnaryExpression -> PowExpression .)
    RANGE           reduce using rule 207 (UnaryExpression -> PowExpression .)
    SEMICOLON       reduce using rule 207 (UnaryExpression -> PowExpression .)
    RBRACE          reduce using rule 207 (UnaryExpression -> PowExpression .)
    COLON           reduce using rule 207 (UnaryExpression -> PowExpression .)


state 191

    (100) BasicType2X -> LBRACKET Type . RBRACKET

    RBRACKET        shift and go to state 400


state 192

    (199) UnaryExpression -> MINUS_MINUS . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 401
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 193

    (258) FunctionLiteral -> FUNCTION . Type_opt ParameterAttributes_opt FunctionLiteralBody
    (76) Type_opt -> . Type
    (77) Type_opt -> . empty
    (75) Type -> . BasicType BasicType2_opt
    (477) empty -> .
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    LBRACE          reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    Type_opt                       shift and go to state 402
    BasicType                      shift and go to state 124
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    Type                           shift and go to state 403
    empty                          shift and go to state 404

state 194

    (170) AndAndExpression -> OrExpression .
    (173) OrExpression -> OrExpression . PIPE XorExpression

    DOUBLE_AMPERSAND reduce using rule 170 (AndAndExpression -> OrExpression .)
    QUESTION        reduce using rule 170 (AndAndExpression -> OrExpression .)
    DOUBLE_PIPE     reduce using rule 170 (AndAndExpression -> OrExpression .)
    ASSIGN          reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_PLUS         reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_MINUS        reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_TIMES        reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_DIV          reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_MODULO       reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_AND_BIT      reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_OR_BIT       reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_XOR_BIT      reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_LEFT         reduce using rule 170 (AndAndExpression -> OrExpression .)
    EQ_RIGHT        reduce using rule 170 (AndAndExpression -> OrExpression .)
    RBRACKET        reduce using rule 170 (AndAndExpression -> OrExpression .)
    RANGE           reduce using rule 170 (AndAndExpression -> OrExpression .)
    COMMA           reduce using rule 170 (AndAndExpression -> OrExpression .)
    RPAREN          reduce using rule 170 (AndAndExpression -> OrExpression .)
    SEMICOLON       reduce using rule 170 (AndAndExpression -> OrExpression .)
    RBRACE          reduce using rule 170 (AndAndExpression -> OrExpression .)
    COLON           reduce using rule 170 (AndAndExpression -> OrExpression .)
    PIPE            shift and go to state 405


state 195

    (197) UnaryExpression -> AMPERSAND . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 406
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 196

    (81) BasicType -> Typeof .
    (82) BasicType -> Typeof . DOT IdentifierList
    (252) PrimaryExpression -> Typeof .

  ! reduce/reduce conflict for LPAREN resolved using rule 81 (BasicType -> Typeof .)
  ! reduce/reduce conflict for TIMES resolved using rule 81 (BasicType -> Typeof .)
  ! reduce/reduce conflict for RPAREN resolved using rule 81 (BasicType -> Typeof .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 81 (BasicType -> Typeof .)
    LPAREN          reduce using rule 81 (BasicType -> Typeof .)
    TIMES           reduce using rule 81 (BasicType -> Typeof .)
    LBRACKET        reduce using rule 81 (BasicType -> Typeof .)
    FUNCTION        reduce using rule 81 (BasicType -> Typeof .)
    RPAREN          reduce using rule 81 (BasicType -> Typeof .)
    RBRACKET        reduce using rule 81 (BasicType -> Typeof .)
    IDENTIFIER      reduce using rule 81 (BasicType -> Typeof .)
    DOT             shift and go to state 93
    POWER           reduce using rule 252 (PrimaryExpression -> Typeof .)
    PLUS_PLUS       reduce using rule 252 (PrimaryExpression -> Typeof .)
    MINUS_MINUS     reduce using rule 252 (PrimaryExpression -> Typeof .)
    DIV             reduce using rule 252 (PrimaryExpression -> Typeof .)
    MODULO          reduce using rule 252 (PrimaryExpression -> Typeof .)
    PLUS            reduce using rule 252 (PrimaryExpression -> Typeof .)
    MINUS           reduce using rule 252 (PrimaryExpression -> Typeof .)
    LEFT_SHIFT      reduce using rule 252 (PrimaryExpression -> Typeof .)
    RIGHT_SHIFT     reduce using rule 252 (PrimaryExpression -> Typeof .)
    IS_EQ           reduce using rule 252 (PrimaryExpression -> Typeof .)
    NOT_EQ          reduce using rule 252 (PrimaryExpression -> Typeof .)
    LESS            reduce using rule 252 (PrimaryExpression -> Typeof .)
    GREATER_EQ      reduce using rule 252 (PrimaryExpression -> Typeof .)
    GREATER         reduce using rule 252 (PrimaryExpression -> Typeof .)
    LESS_EQ         reduce using rule 252 (PrimaryExpression -> Typeof .)
    AMPERSAND       reduce using rule 252 (PrimaryExpression -> Typeof .)
    CARET           reduce using rule 252 (PrimaryExpression -> Typeof .)
    PIPE            reduce using rule 252 (PrimaryExpression -> Typeof .)
    DOUBLE_AMPERSAND reduce using rule 252 (PrimaryExpression -> Typeof .)
    QUESTION        reduce using rule 252 (PrimaryExpression -> Typeof .)
    DOUBLE_PIPE     reduce using rule 252 (PrimaryExpression -> Typeof .)
    ASSIGN          reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_PLUS         reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_MINUS        reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_TIMES        reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_DIV          reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_MODULO       reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_AND_BIT      reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_OR_BIT       reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_XOR_BIT      reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_LEFT         reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_RIGHT        reduce using rule 252 (PrimaryExpression -> Typeof .)
    COMMA           reduce using rule 252 (PrimaryExpression -> Typeof .)
    RANGE           reduce using rule 252 (PrimaryExpression -> Typeof .)

  ! DOT             [ reduce using rule 252 (PrimaryExpression -> Typeof .) ]
  ! LPAREN          [ reduce using rule 252 (PrimaryExpression -> Typeof .) ]
  ! TIMES           [ reduce using rule 252 (PrimaryExpression -> Typeof .) ]
  ! RPAREN          [ reduce using rule 252 (PrimaryExpression -> Typeof .) ]
  ! RBRACKET        [ reduce using rule 252 (PrimaryExpression -> Typeof .) ]


state 197

    (271) TypeidExpression -> TYPEID . LPAREN Type RPAREN
    (272) TypeidExpression -> TYPEID . LPAREN Expression RPAREN

    LPAREN          shift and go to state 407


state 198

    (241) PrimaryExpression -> INUMBER .

    POWER           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DOT             reduce using rule 241 (PrimaryExpression -> INUMBER .)
    PLUS_PLUS       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    MINUS_MINUS     reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LPAREN          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    TIMES           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DIV             reduce using rule 241 (PrimaryExpression -> INUMBER .)
    MODULO          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    PLUS            reduce using rule 241 (PrimaryExpression -> INUMBER .)
    MINUS           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LEFT_SHIFT      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    RIGHT_SHIFT     reduce using rule 241 (PrimaryExpression -> INUMBER .)
    IS_EQ           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    NOT_EQ          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LESS            reduce using rule 241 (PrimaryExpression -> INUMBER .)
    GREATER_EQ      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    GREATER         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LESS_EQ         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    AMPERSAND       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    CARET           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    PIPE            reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DOUBLE_AMPERSAND reduce using rule 241 (PrimaryExpression -> INUMBER .)
    QUESTION        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DOUBLE_PIPE     reduce using rule 241 (PrimaryExpression -> INUMBER .)
    ASSIGN          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_PLUS         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_MINUS        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_TIMES        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_DIV          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_MODULO       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_AND_BIT      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_OR_BIT       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_XOR_BIT      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_LEFT         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_RIGHT        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    RBRACKET        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    RANGE           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    COMMA           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    RPAREN          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    SEMICOLON       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    RBRACE          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    COLON           reduce using rule 241 (PrimaryExpression -> INUMBER .)


state 199

    (198) UnaryExpression -> PLUS_PLUS . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 408
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 200

    (203) UnaryExpression -> EXCLAMATION . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 409
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 201

    (224) PowExpression -> PostfixExpression .
    (225) PowExpression -> PostfixExpression . POWER UnaryExpression
    (227) PostfixExpression -> PostfixExpression . DOT IDENTIFIER
    (228) PostfixExpression -> PostfixExpression . DOT NewExpression
    (229) PostfixExpression -> PostfixExpression . PLUS_PLUS
    (230) PostfixExpression -> PostfixExpression . MINUS_MINUS
    (231) PostfixExpression -> PostfixExpression . LPAREN ArgumentList RPAREN

    TIMES           reduce using rule 224 (PowExpression -> PostfixExpression .)
    DIV             reduce using rule 224 (PowExpression -> PostfixExpression .)
    MODULO          reduce using rule 224 (PowExpression -> PostfixExpression .)
    PLUS            reduce using rule 224 (PowExpression -> PostfixExpression .)
    MINUS           reduce using rule 224 (PowExpression -> PostfixExpression .)
    LEFT_SHIFT      reduce using rule 224 (PowExpression -> PostfixExpression .)
    RIGHT_SHIFT     reduce using rule 224 (PowExpression -> PostfixExpression .)
    IS_EQ           reduce using rule 224 (PowExpression -> PostfixExpression .)
    NOT_EQ          reduce using rule 224 (PowExpression -> PostfixExpression .)
    LESS            reduce using rule 224 (PowExpression -> PostfixExpression .)
    GREATER_EQ      reduce using rule 224 (PowExpression -> PostfixExpression .)
    GREATER         reduce using rule 224 (PowExpression -> PostfixExpression .)
    LESS_EQ         reduce using rule 224 (PowExpression -> PostfixExpression .)
    AMPERSAND       reduce using rule 224 (PowExpression -> PostfixExpression .)
    CARET           reduce using rule 224 (PowExpression -> PostfixExpression .)
    PIPE            reduce using rule 224 (PowExpression -> PostfixExpression .)
    DOUBLE_AMPERSAND reduce using rule 224 (PowExpression -> PostfixExpression .)
    QUESTION        reduce using rule 224 (PowExpression -> PostfixExpression .)
    DOUBLE_PIPE     reduce using rule 224 (PowExpression -> PostfixExpression .)
    ASSIGN          reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_PLUS         reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_MINUS        reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_TIMES        reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_DIV          reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_MODULO       reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_AND_BIT      reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_OR_BIT       reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_XOR_BIT      reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_LEFT         reduce using rule 224 (PowExpression -> PostfixExpression .)
    EQ_RIGHT        reduce using rule 224 (PowExpression -> PostfixExpression .)
    COMMA           reduce using rule 224 (PowExpression -> PostfixExpression .)
    RPAREN          reduce using rule 224 (PowExpression -> PostfixExpression .)
    SEMICOLON       reduce using rule 224 (PowExpression -> PostfixExpression .)
    RBRACKET        reduce using rule 224 (PowExpression -> PostfixExpression .)
    RANGE           reduce using rule 224 (PowExpression -> PostfixExpression .)
    RBRACE          reduce using rule 224 (PowExpression -> PostfixExpression .)
    COLON           reduce using rule 224 (PowExpression -> PostfixExpression .)
    POWER           shift and go to state 411
    DOT             shift and go to state 414
    PLUS_PLUS       shift and go to state 413
    MINUS_MINUS     shift and go to state 412
    LPAREN          shift and go to state 410


state 202

    (211) NewExpressionWithArgs -> NEW . AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> NEW . AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (412) NewAnonClassExpression -> NEW . AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (215) AllocatorArguments_opt -> . AllocatorArguments
    (216) AllocatorArguments_opt -> . empty
    (214) AllocatorArguments -> . LPAREN ArgumentList_opt RPAREN
    (477) empty -> .

    LPAREN          shift and go to state 416
    CLASS           reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)

    AllocatorArguments_opt         shift and go to state 415
    AllocatorArguments             shift and go to state 417
    empty                          shift and go to state 418

state 203

    (79) BasicType -> DOT . IdentifierList
    (235) PrimaryExpression -> DOT . IDENTIFIER
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 419

    IdentifierList                 shift and go to state 78

state 204

    (226) PostfixExpression -> PrimaryExpression .

    POWER           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    DOT             reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    PLUS_PLUS       reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    MINUS_MINUS     reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    LPAREN          reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    TIMES           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    DIV             reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    MODULO          reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    PLUS            reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    MINUS           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    LEFT_SHIFT      reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    RIGHT_SHIFT     reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    IS_EQ           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    NOT_EQ          reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    LESS            reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    GREATER_EQ      reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    GREATER         reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    LESS_EQ         reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    AMPERSAND       reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    CARET           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    PIPE            reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    QUESTION        reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    DOUBLE_PIPE     reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    ASSIGN          reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_PLUS         reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_MINUS        reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_TIMES        reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_DIV          reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_MODULO       reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_AND_BIT      reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_OR_BIT       reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_XOR_BIT      reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_LEFT         reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    EQ_RIGHT        reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    RBRACKET        reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    RANGE           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    COMMA           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    RPAREN          reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    SEMICOLON       reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    RBRACE          reduce using rule 226 (PostfixExpression -> PrimaryExpression .)
    COLON           reduce using rule 226 (PostfixExpression -> PrimaryExpression .)


state 205

    (204) UnaryExpression -> ComplementExpression .

    TIMES           reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    DIV             reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    MODULO          reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    PLUS            reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    MINUS           reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    LEFT_SHIFT      reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    RIGHT_SHIFT     reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    IS_EQ           reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    NOT_EQ          reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    LESS            reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    GREATER_EQ      reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    GREATER         reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    LESS_EQ         reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    AMPERSAND       reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    CARET           reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    PIPE            reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    DOUBLE_AMPERSAND reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    QUESTION        reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    DOUBLE_PIPE     reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    ASSIGN          reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_PLUS         reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_MINUS        reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_TIMES        reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_DIV          reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_MODULO       reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_AND_BIT      reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_OR_BIT       reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_XOR_BIT      reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_LEFT         reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    EQ_RIGHT        reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    COMMA           reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    RPAREN          reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    RBRACKET        reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    RANGE           reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    SEMICOLON       reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    RBRACE          reduce using rule 204 (UnaryExpression -> ComplementExpression .)
    COLON           reduce using rule 204 (UnaryExpression -> ComplementExpression .)


state 206

    (243) PrimaryExpression -> LIT_CHAR .

    POWER           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    DOT             reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    PLUS_PLUS       reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    MINUS_MINUS     reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    LPAREN          reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    TIMES           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    DIV             reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    MODULO          reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    PLUS            reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    MINUS           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    LEFT_SHIFT      reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    RIGHT_SHIFT     reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    IS_EQ           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    NOT_EQ          reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    LESS            reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    GREATER_EQ      reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    GREATER         reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    LESS_EQ         reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    AMPERSAND       reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    CARET           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    PIPE            reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    DOUBLE_AMPERSAND reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    QUESTION        reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    DOUBLE_PIPE     reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    ASSIGN          reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_PLUS         reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_MINUS        reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_TIMES        reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_DIV          reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_MODULO       reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_AND_BIT      reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_OR_BIT       reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_XOR_BIT      reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_LEFT         reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    EQ_RIGHT        reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    RBRACKET        reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    RANGE           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    COMMA           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    RPAREN          reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    SEMICOLON       reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    RBRACE          reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)
    COLON           reduce using rule 243 (PrimaryExpression -> LIT_CHAR .)


state 207

    (75) Type -> BasicType . BasicType2_opt
    (232) PostfixExpression -> BasicType . LPAREN ArgumentList_opt RPAREN
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    LPAREN          shift and go to state 420
    RBRACKET        reduce using rule 477 (empty -> .)
    RPAREN          reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

    BasicType2X                    shift and go to state 81
    BasicType2                     shift and go to state 90
    BasicType2_opt                 shift and go to state 273
    empty                          shift and go to state 86

state 208

    (222) CastExpression -> CAST . LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> CAST . LPAREN RPAREN UnaryExpression

    LPAREN          shift and go to state 421


state 209

    (208) ComplementExpression -> TILDE . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 422
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 210

    (244) PrimaryExpression -> LIT_STRPlus .

    POWER           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    DOT             reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    PLUS_PLUS       reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    MINUS_MINUS     reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    LPAREN          reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    TIMES           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    DIV             reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    MODULO          reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    PLUS            reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    MINUS           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    LEFT_SHIFT      reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    RIGHT_SHIFT     reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    IS_EQ           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    NOT_EQ          reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    LESS            reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    GREATER_EQ      reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    GREATER         reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    LESS_EQ         reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    AMPERSAND       reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    CARET           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    PIPE            reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    DOUBLE_AMPERSAND reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    QUESTION        reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    DOUBLE_PIPE     reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    ASSIGN          reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_PLUS         reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_MINUS        reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_TIMES        reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_DIV          reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_MODULO       reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_AND_BIT      reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_OR_BIT       reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_XOR_BIT      reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_LEFT         reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    EQ_RIGHT        reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    RBRACKET        reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    RANGE           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    COMMA           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    RPAREN          reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    SEMICOLON       reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    RBRACE          reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)
    COLON           reduce using rule 244 (PrimaryExpression -> LIT_STRPlus .)


state 211

    (247) PrimaryExpression -> MixinExpression .

    POWER           reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    DOT             reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    PLUS_PLUS       reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    MINUS_MINUS     reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    LPAREN          reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    TIMES           reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    DIV             reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    MODULO          reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    PLUS            reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    MINUS           reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    LEFT_SHIFT      reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    RIGHT_SHIFT     reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    IS_EQ           reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    NOT_EQ          reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    LESS            reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    GREATER_EQ      reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    GREATER         reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    LESS_EQ         reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    AMPERSAND       reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    CARET           reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    PIPE            reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    DOUBLE_AMPERSAND reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    QUESTION        reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    DOUBLE_PIPE     reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    ASSIGN          reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_PLUS         reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_MINUS        reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_TIMES        reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_DIV          reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_MODULO       reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_AND_BIT      reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_OR_BIT       reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_XOR_BIT      reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_LEFT         reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    EQ_RIGHT        reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    RBRACKET        reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    RANGE           reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    COMMA           reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    RPAREN          reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    SEMICOLON       reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    RBRACE          reduce using rule 247 (PrimaryExpression -> MixinExpression .)
    COLON           reduce using rule 247 (PrimaryExpression -> MixinExpression .)


state 212

    (246) PrimaryExpression -> FunctionLiteral .

    POWER           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    DOT             reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    PLUS_PLUS       reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    MINUS_MINUS     reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    LPAREN          reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    TIMES           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    DIV             reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    MODULO          reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    PLUS            reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    MINUS           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    LEFT_SHIFT      reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    RIGHT_SHIFT     reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    IS_EQ           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    NOT_EQ          reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    LESS            reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    GREATER_EQ      reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    GREATER         reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    LESS_EQ         reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    AMPERSAND       reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    CARET           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    PIPE            reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    DOUBLE_AMPERSAND reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    QUESTION        reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    DOUBLE_PIPE     reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    ASSIGN          reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_PLUS         reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_MINUS        reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_TIMES        reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_DIV          reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_MODULO       reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_AND_BIT      reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_OR_BIT       reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_XOR_BIT      reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_LEFT         reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    EQ_RIGHT        reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    RBRACKET        reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    RANGE           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    COMMA           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    RPAREN          reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    SEMICOLON       reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    RBRACE          reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)
    COLON           reduce using rule 246 (PrimaryExpression -> FunctionLiteral .)


state 213

    (266) FunctionLiteralBody -> BodyStatement .

    POWER           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    DOT             reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    PLUS_PLUS       reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    MINUS_MINUS     reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    LPAREN          reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    TIMES           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    DIV             reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    MODULO          reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    PLUS            reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    MINUS           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    LEFT_SHIFT      reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    RIGHT_SHIFT     reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    IS_EQ           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    NOT_EQ          reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    LESS            reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    GREATER_EQ      reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    GREATER         reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    LESS_EQ         reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    AMPERSAND       reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    CARET           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    PIPE            reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    DOUBLE_AMPERSAND reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    QUESTION        reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    DOUBLE_PIPE     reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    ASSIGN          reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_PLUS         reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_MINUS        reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_TIMES        reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_DIV          reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_MODULO       reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_AND_BIT      reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_OR_BIT       reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_XOR_BIT      reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_LEFT         reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    EQ_RIGHT        reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    COMMA           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    SEMICOLON       reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    RBRACKET        reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    RANGE           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    RPAREN          reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    RBRACE          reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)
    COLON           reduce using rule 266 (FunctionLiteralBody -> BodyStatement .)


state 214

    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (233) PrimaryExpression -> IDENTIFIER .
    (256) ArrayLiteral -> IDENTIFIER . LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> IDENTIFIER . LBRACKET AssignExpression RBRACKET

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! reduce/reduce conflict for POWER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LEFT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for IS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for NOT_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for CARET resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for QUESTION resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_AND_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_OR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_XOR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_LEFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_RIGHT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RANGE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    FUNCTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RBRACKET        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    POWER           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS_PLUS       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS_MINUS     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DIV             reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MODULO          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IS_EQ           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    NOT_EQ          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER_EQ      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS_EQ         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    AMPERSAND       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    CARET           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PIPE            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    QUESTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_PLUS         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MINUS        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_TIMES        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_DIV          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MODULO       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_LEFT         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_RIGHT        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RANGE           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COMMA           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 423

  ! LBRACKET        [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]
  ! POWER           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS_PLUS       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS_MINUS     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DIV             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MODULO          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LEFT_SHIFT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RIGHT_SHIFT     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! IS_EQ           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! NOT_EQ          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER_EQ      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS_EQ         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! AMPERSAND       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! CARET           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PIPE            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_AMPERSAND [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! QUESTION        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_PIPE     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! ASSIGN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_PLUS         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MINUS        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_TIMES        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_DIV          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MODULO       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_AND_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_OR_BIT       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_XOR_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_LEFT         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_RIGHT        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RBRACKET        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RANGE           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]


state 215

    (193) MulExpression -> UnaryExpression .

    TIMES           reduce using rule 193 (MulExpression -> UnaryExpression .)
    DIV             reduce using rule 193 (MulExpression -> UnaryExpression .)
    MODULO          reduce using rule 193 (MulExpression -> UnaryExpression .)
    PLUS            reduce using rule 193 (MulExpression -> UnaryExpression .)
    MINUS           reduce using rule 193 (MulExpression -> UnaryExpression .)
    LEFT_SHIFT      reduce using rule 193 (MulExpression -> UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 193 (MulExpression -> UnaryExpression .)
    IS_EQ           reduce using rule 193 (MulExpression -> UnaryExpression .)
    NOT_EQ          reduce using rule 193 (MulExpression -> UnaryExpression .)
    LESS            reduce using rule 193 (MulExpression -> UnaryExpression .)
    GREATER_EQ      reduce using rule 193 (MulExpression -> UnaryExpression .)
    GREATER         reduce using rule 193 (MulExpression -> UnaryExpression .)
    LESS_EQ         reduce using rule 193 (MulExpression -> UnaryExpression .)
    AMPERSAND       reduce using rule 193 (MulExpression -> UnaryExpression .)
    CARET           reduce using rule 193 (MulExpression -> UnaryExpression .)
    PIPE            reduce using rule 193 (MulExpression -> UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 193 (MulExpression -> UnaryExpression .)
    QUESTION        reduce using rule 193 (MulExpression -> UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 193 (MulExpression -> UnaryExpression .)
    ASSIGN          reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_PLUS         reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_MINUS        reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_TIMES        reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_DIV          reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_MODULO       reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_AND_BIT      reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_OR_BIT       reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_LEFT         reduce using rule 193 (MulExpression -> UnaryExpression .)
    EQ_RIGHT        reduce using rule 193 (MulExpression -> UnaryExpression .)
    COMMA           reduce using rule 193 (MulExpression -> UnaryExpression .)
    RPAREN          reduce using rule 193 (MulExpression -> UnaryExpression .)
    SEMICOLON       reduce using rule 193 (MulExpression -> UnaryExpression .)
    RBRACE          reduce using rule 193 (MulExpression -> UnaryExpression .)
    RBRACKET        reduce using rule 193 (MulExpression -> UnaryExpression .)
    RANGE           reduce using rule 193 (MulExpression -> UnaryExpression .)
    COLON           reduce using rule 193 (MulExpression -> UnaryExpression .)


state 216

    (249) PrimaryExpression -> NewExpressionWithArgs .

    POWER           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    DOT             reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    PLUS_PLUS       reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    MINUS_MINUS     reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    LPAREN          reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    TIMES           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    DIV             reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    MODULO          reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    PLUS            reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    MINUS           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    LEFT_SHIFT      reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    RIGHT_SHIFT     reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    IS_EQ           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    NOT_EQ          reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    LESS            reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    GREATER_EQ      reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    GREATER         reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    LESS_EQ         reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    AMPERSAND       reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    CARET           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    PIPE            reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    DOUBLE_AMPERSAND reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    QUESTION        reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    DOUBLE_PIPE     reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    ASSIGN          reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_PLUS         reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_MINUS        reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_TIMES        reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_DIV          reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_MODULO       reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_AND_BIT      reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_OR_BIT       reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_XOR_BIT      reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_LEFT         reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    EQ_RIGHT        reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    RBRACKET        reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    RANGE           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    COMMA           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    RPAREN          reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    SEMICOLON       reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    RBRACE          reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)
    COLON           reduce using rule 249 (PrimaryExpression -> NewExpressionWithArgs .)


state 217

    (168) OrOrExpression -> AndAndExpression .
    (171) AndAndExpression -> AndAndExpression . DOUBLE_AMPERSAND OrExpression

    QUESTION        reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    DOUBLE_PIPE     reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    ASSIGN          reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_PLUS         reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_MINUS        reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_TIMES        reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_DIV          reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_MODULO       reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_AND_BIT      reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_OR_BIT       reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_XOR_BIT      reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_LEFT         reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    EQ_RIGHT        reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    RBRACKET        reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    RANGE           reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    COMMA           reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    RPAREN          reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    SEMICOLON       reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    RBRACE          reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    COLON           reduce using rule 168 (OrOrExpression -> AndAndExpression .)
    DOUBLE_AMPERSAND shift and go to state 424


state 218

    (206) UnaryExpression -> CastExpression .

    TIMES           reduce using rule 206 (UnaryExpression -> CastExpression .)
    DIV             reduce using rule 206 (UnaryExpression -> CastExpression .)
    MODULO          reduce using rule 206 (UnaryExpression -> CastExpression .)
    PLUS            reduce using rule 206 (UnaryExpression -> CastExpression .)
    MINUS           reduce using rule 206 (UnaryExpression -> CastExpression .)
    LEFT_SHIFT      reduce using rule 206 (UnaryExpression -> CastExpression .)
    RIGHT_SHIFT     reduce using rule 206 (UnaryExpression -> CastExpression .)
    IS_EQ           reduce using rule 206 (UnaryExpression -> CastExpression .)
    NOT_EQ          reduce using rule 206 (UnaryExpression -> CastExpression .)
    LESS            reduce using rule 206 (UnaryExpression -> CastExpression .)
    GREATER_EQ      reduce using rule 206 (UnaryExpression -> CastExpression .)
    GREATER         reduce using rule 206 (UnaryExpression -> CastExpression .)
    LESS_EQ         reduce using rule 206 (UnaryExpression -> CastExpression .)
    AMPERSAND       reduce using rule 206 (UnaryExpression -> CastExpression .)
    CARET           reduce using rule 206 (UnaryExpression -> CastExpression .)
    PIPE            reduce using rule 206 (UnaryExpression -> CastExpression .)
    DOUBLE_AMPERSAND reduce using rule 206 (UnaryExpression -> CastExpression .)
    QUESTION        reduce using rule 206 (UnaryExpression -> CastExpression .)
    DOUBLE_PIPE     reduce using rule 206 (UnaryExpression -> CastExpression .)
    ASSIGN          reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_PLUS         reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_MINUS        reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_TIMES        reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_DIV          reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_MODULO       reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_AND_BIT      reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_OR_BIT       reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_XOR_BIT      reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_LEFT         reduce using rule 206 (UnaryExpression -> CastExpression .)
    EQ_RIGHT        reduce using rule 206 (UnaryExpression -> CastExpression .)
    COMMA           reduce using rule 206 (UnaryExpression -> CastExpression .)
    RPAREN          reduce using rule 206 (UnaryExpression -> CastExpression .)
    RBRACKET        reduce using rule 206 (UnaryExpression -> CastExpression .)
    RANGE           reduce using rule 206 (UnaryExpression -> CastExpression .)
    SEMICOLON       reduce using rule 206 (UnaryExpression -> CastExpression .)
    RBRACE          reduce using rule 206 (UnaryExpression -> CastExpression .)
    COLON           reduce using rule 206 (UnaryExpression -> CastExpression .)


state 219

    (260) FunctionLiteral -> FunctionLiteralBody .

    POWER           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    DOT             reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    PLUS_PLUS       reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    MINUS_MINUS     reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    LPAREN          reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    TIMES           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    DIV             reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    MODULO          reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    PLUS            reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    MINUS           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    LEFT_SHIFT      reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    RIGHT_SHIFT     reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    IS_EQ           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    NOT_EQ          reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    LESS            reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    GREATER_EQ      reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    GREATER         reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    LESS_EQ         reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    AMPERSAND       reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    CARET           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    PIPE            reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    DOUBLE_AMPERSAND reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    QUESTION        reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    DOUBLE_PIPE     reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    ASSIGN          reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_PLUS         reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_MINUS        reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_TIMES        reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_DIV          reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_MODULO       reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_AND_BIT      reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_OR_BIT       reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_XOR_BIT      reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_LEFT         reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    EQ_RIGHT        reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    RBRACKET        reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    RANGE           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    COMMA           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    RPAREN          reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    SEMICOLON       reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    RBRACE          reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)
    COLON           reduce using rule 260 (FunctionLiteral -> FunctionLiteralBody .)


state 220

    (254) PrimaryExpression -> TypeidExpression .

    POWER           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    DOT             reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    PLUS_PLUS       reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    MINUS_MINUS     reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    LPAREN          reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    TIMES           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    DIV             reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    MODULO          reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    PLUS            reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    MINUS           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    LEFT_SHIFT      reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    RIGHT_SHIFT     reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    IS_EQ           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    NOT_EQ          reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    LESS            reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    GREATER_EQ      reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    GREATER         reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    LESS_EQ         reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    AMPERSAND       reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    CARET           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    PIPE            reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    DOUBLE_AMPERSAND reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    QUESTION        reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    DOUBLE_PIPE     reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    ASSIGN          reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_PLUS         reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_MINUS        reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_TIMES        reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_DIV          reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_MODULO       reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_AND_BIT      reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_OR_BIT       reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_XOR_BIT      reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_LEFT         reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    EQ_RIGHT        reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    RBRACKET        reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    RANGE           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    COMMA           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    RPAREN          reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    SEMICOLON       reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    RBRACE          reduce using rule 254 (PrimaryExpression -> TypeidExpression .)
    COLON           reduce using rule 254 (PrimaryExpression -> TypeidExpression .)


state 221

    (237) PrimaryExpression -> NULL .

    POWER           reduce using rule 237 (PrimaryExpression -> NULL .)
    DOT             reduce using rule 237 (PrimaryExpression -> NULL .)
    PLUS_PLUS       reduce using rule 237 (PrimaryExpression -> NULL .)
    MINUS_MINUS     reduce using rule 237 (PrimaryExpression -> NULL .)
    LPAREN          reduce using rule 237 (PrimaryExpression -> NULL .)
    TIMES           reduce using rule 237 (PrimaryExpression -> NULL .)
    DIV             reduce using rule 237 (PrimaryExpression -> NULL .)
    MODULO          reduce using rule 237 (PrimaryExpression -> NULL .)
    PLUS            reduce using rule 237 (PrimaryExpression -> NULL .)
    MINUS           reduce using rule 237 (PrimaryExpression -> NULL .)
    LEFT_SHIFT      reduce using rule 237 (PrimaryExpression -> NULL .)
    RIGHT_SHIFT     reduce using rule 237 (PrimaryExpression -> NULL .)
    IS_EQ           reduce using rule 237 (PrimaryExpression -> NULL .)
    NOT_EQ          reduce using rule 237 (PrimaryExpression -> NULL .)
    LESS            reduce using rule 237 (PrimaryExpression -> NULL .)
    GREATER_EQ      reduce using rule 237 (PrimaryExpression -> NULL .)
    GREATER         reduce using rule 237 (PrimaryExpression -> NULL .)
    LESS_EQ         reduce using rule 237 (PrimaryExpression -> NULL .)
    AMPERSAND       reduce using rule 237 (PrimaryExpression -> NULL .)
    CARET           reduce using rule 237 (PrimaryExpression -> NULL .)
    PIPE            reduce using rule 237 (PrimaryExpression -> NULL .)
    DOUBLE_AMPERSAND reduce using rule 237 (PrimaryExpression -> NULL .)
    QUESTION        reduce using rule 237 (PrimaryExpression -> NULL .)
    DOUBLE_PIPE     reduce using rule 237 (PrimaryExpression -> NULL .)
    ASSIGN          reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_PLUS         reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_MINUS        reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_TIMES        reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_DIV          reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_MODULO       reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_AND_BIT      reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_OR_BIT       reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_XOR_BIT      reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_LEFT         reduce using rule 237 (PrimaryExpression -> NULL .)
    EQ_RIGHT        reduce using rule 237 (PrimaryExpression -> NULL .)
    RBRACKET        reduce using rule 237 (PrimaryExpression -> NULL .)
    RANGE           reduce using rule 237 (PrimaryExpression -> NULL .)
    COMMA           reduce using rule 237 (PrimaryExpression -> NULL .)
    RPAREN          reduce using rule 237 (PrimaryExpression -> NULL .)
    SEMICOLON       reduce using rule 237 (PrimaryExpression -> NULL .)
    RBRACE          reduce using rule 237 (PrimaryExpression -> NULL .)
    COLON           reduce using rule 237 (PrimaryExpression -> NULL .)


state 222

    (78) BasicType -> BasicTypeX .
    (250) PrimaryExpression -> BasicTypeX . DOT IDENTIFIER
    (251) PrimaryExpression -> BasicTypeX . LPAREN ArgumentList_opt RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    TIMES           reduce using rule 78 (BasicType -> BasicTypeX .)
    LBRACKET        reduce using rule 78 (BasicType -> BasicTypeX .)
    FUNCTION        reduce using rule 78 (BasicType -> BasicTypeX .)
    RPAREN          reduce using rule 78 (BasicType -> BasicTypeX .)
    RBRACKET        reduce using rule 78 (BasicType -> BasicTypeX .)
    IDENTIFIER      reduce using rule 78 (BasicType -> BasicTypeX .)
    DOT             shift and go to state 426
    LPAREN          shift and go to state 425

  ! LPAREN          [ reduce using rule 78 (BasicType -> BasicTypeX .) ]


state 223

    (172) OrExpression -> XorExpression .
    (175) XorExpression -> XorExpression . CARET AndExpression

    PIPE            reduce using rule 172 (OrExpression -> XorExpression .)
    DOUBLE_AMPERSAND reduce using rule 172 (OrExpression -> XorExpression .)
    QUESTION        reduce using rule 172 (OrExpression -> XorExpression .)
    DOUBLE_PIPE     reduce using rule 172 (OrExpression -> XorExpression .)
    ASSIGN          reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_PLUS         reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_MINUS        reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_TIMES        reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_DIV          reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_MODULO       reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_AND_BIT      reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_OR_BIT       reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_XOR_BIT      reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_LEFT         reduce using rule 172 (OrExpression -> XorExpression .)
    EQ_RIGHT        reduce using rule 172 (OrExpression -> XorExpression .)
    COMMA           reduce using rule 172 (OrExpression -> XorExpression .)
    SEMICOLON       reduce using rule 172 (OrExpression -> XorExpression .)
    RPAREN          reduce using rule 172 (OrExpression -> XorExpression .)
    RBRACKET        reduce using rule 172 (OrExpression -> XorExpression .)
    RANGE           reduce using rule 172 (OrExpression -> XorExpression .)
    RBRACE          reduce using rule 172 (OrExpression -> XorExpression .)
    COLON           reduce using rule 172 (OrExpression -> XorExpression .)
    CARET           shift and go to state 427


state 224

    (269) MixinExpression -> MIXIN . LPAREN AssignExpression RPAREN

    LPAREN          shift and go to state 428


state 225

    (245) PrimaryExpression -> ArrayLiteral .

    POWER           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    DOT             reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    PLUS_PLUS       reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    MINUS_MINUS     reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    LPAREN          reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    TIMES           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    DIV             reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    MODULO          reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    PLUS            reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    MINUS           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    LEFT_SHIFT      reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    RIGHT_SHIFT     reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    IS_EQ           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    NOT_EQ          reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    LESS            reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    GREATER_EQ      reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    GREATER         reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    LESS_EQ         reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    AMPERSAND       reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    CARET           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    PIPE            reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    DOUBLE_AMPERSAND reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    QUESTION        reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    DOUBLE_PIPE     reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    ASSIGN          reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_PLUS         reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_MINUS        reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_TIMES        reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_DIV          reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_MODULO       reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_AND_BIT      reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_OR_BIT       reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_XOR_BIT      reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_LEFT         reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    EQ_RIGHT        reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    RBRACKET        reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    RANGE           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    COMMA           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    RPAREN          reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    SEMICOLON       reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    RBRACE          reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)
    COLON           reduce using rule 245 (PrimaryExpression -> ArrayLiteral .)


state 226

    (240) PrimaryExpression -> DOLLAR .

    POWER           reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    DOT             reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    PLUS_PLUS       reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    MINUS_MINUS     reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    LPAREN          reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    TIMES           reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    DIV             reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    MODULO          reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    PLUS            reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    MINUS           reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    LEFT_SHIFT      reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    RIGHT_SHIFT     reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    IS_EQ           reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    NOT_EQ          reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    LESS            reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    GREATER_EQ      reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    GREATER         reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    LESS_EQ         reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    AMPERSAND       reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    CARET           reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    PIPE            reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    DOUBLE_AMPERSAND reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    QUESTION        reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    DOUBLE_PIPE     reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    ASSIGN          reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_PLUS         reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_MINUS        reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_TIMES        reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_DIV          reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_MODULO       reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_AND_BIT      reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_OR_BIT       reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_XOR_BIT      reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_LEFT         reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    EQ_RIGHT        reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    RBRACKET        reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    RANGE           reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    COMMA           reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    RPAREN          reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    SEMICOLON       reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    RBRACE          reduce using rule 240 (PrimaryExpression -> DOLLAR .)
    COLON           reduce using rule 240 (PrimaryExpression -> DOLLAR .)


state 227

    (200) UnaryExpression -> TIMES . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 429
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 228

    (205) UnaryExpression -> LPAREN . Type RPAREN DOT IDENTIFIER
    (253) PrimaryExpression -> LPAREN . Expression RPAREN
    (445) Parameters -> LPAREN . ParameterList_opt RPAREN
    (75) Type -> . BasicType BasicType2_opt
    (151) Expression -> . CommaExpression
    (449) ParameterList_opt -> . ParameterList
    (450) ParameterList_opt -> . empty
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (446) ParameterList -> . Parameter
    (447) ParameterList -> . Parameter COMMA ParameterList
    (448) ParameterList -> . ELLIPSIS
    (477) empty -> .
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (451) Parameter -> . InOut_opt BasicType Declarator
    (452) Parameter -> . InOut_opt BasicType Declarator ELLIPSIS
    (453) Parameter -> . InOut_opt BasicType Declarator ASSIGN AssignExpression
    (454) Parameter -> . InOut_opt Type
    (455) Parameter -> . InOut_opt Type ELLIPSIS
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (461) InOut_opt -> . InOut
    (462) InOut_opt -> . empty
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (456) InOut -> . InOutX
    (457) InOut -> . InOut InOutX
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (458) InOutX -> . AUTO
    (459) InOutX -> . FINAL
    (460) InOutX -> . SCOPE
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    DOT             shift and go to state 203
    ELLIPSIS        shift and go to state 162
    RPAREN          reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AUTO            shift and go to state 157
    FINAL           shift and go to state 159
    SCOPE           shift and go to state 158
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! IDENTIFIER      [ shift and go to state 214 ]
  ! TYPEOF          [ shift and go to state 47 ]

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ParameterList                  shift and go to state 160
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 189
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    Parameter                      shift and go to state 165
    ParameterList_opt              shift and go to state 163
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    Type                           shift and go to state 431
    BasicType                      shift and go to state 207
    InOutX                         shift and go to state 164
    FunctionLiteralBody            shift and go to state 219
    BasicTypeX                     shift and go to state 222
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    InOut                          shift and go to state 161
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 196
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 430
    BodyStatement                  shift and go to state 213
    InOut_opt                      shift and go to state 156
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    empty                          shift and go to state 166
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 229

    (187) ShiftExpression -> AddExpression .
    (191) AddExpression -> AddExpression . PLUS MulExpression
    (192) AddExpression -> AddExpression . MINUS MulExpression

    LEFT_SHIFT      reduce using rule 187 (ShiftExpression -> AddExpression .)
    RIGHT_SHIFT     reduce using rule 187 (ShiftExpression -> AddExpression .)
    IS_EQ           reduce using rule 187 (ShiftExpression -> AddExpression .)
    NOT_EQ          reduce using rule 187 (ShiftExpression -> AddExpression .)
    LESS            reduce using rule 187 (ShiftExpression -> AddExpression .)
    GREATER_EQ      reduce using rule 187 (ShiftExpression -> AddExpression .)
    GREATER         reduce using rule 187 (ShiftExpression -> AddExpression .)
    LESS_EQ         reduce using rule 187 (ShiftExpression -> AddExpression .)
    AMPERSAND       reduce using rule 187 (ShiftExpression -> AddExpression .)
    CARET           reduce using rule 187 (ShiftExpression -> AddExpression .)
    PIPE            reduce using rule 187 (ShiftExpression -> AddExpression .)
    DOUBLE_AMPERSAND reduce using rule 187 (ShiftExpression -> AddExpression .)
    QUESTION        reduce using rule 187 (ShiftExpression -> AddExpression .)
    DOUBLE_PIPE     reduce using rule 187 (ShiftExpression -> AddExpression .)
    ASSIGN          reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_PLUS         reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_MINUS        reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_TIMES        reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_DIV          reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_MODULO       reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_AND_BIT      reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_OR_BIT       reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_XOR_BIT      reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_LEFT         reduce using rule 187 (ShiftExpression -> AddExpression .)
    EQ_RIGHT        reduce using rule 187 (ShiftExpression -> AddExpression .)
    RBRACKET        reduce using rule 187 (ShiftExpression -> AddExpression .)
    RANGE           reduce using rule 187 (ShiftExpression -> AddExpression .)
    COMMA           reduce using rule 187 (ShiftExpression -> AddExpression .)
    RPAREN          reduce using rule 187 (ShiftExpression -> AddExpression .)
    SEMICOLON       reduce using rule 187 (ShiftExpression -> AddExpression .)
    RBRACE          reduce using rule 187 (ShiftExpression -> AddExpression .)
    COLON           reduce using rule 187 (ShiftExpression -> AddExpression .)
    PLUS            shift and go to state 432
    MINUS           shift and go to state 433


state 230

    (176) AndExpression -> CmpExpression .

    AMPERSAND       reduce using rule 176 (AndExpression -> CmpExpression .)
    CARET           reduce using rule 176 (AndExpression -> CmpExpression .)
    PIPE            reduce using rule 176 (AndExpression -> CmpExpression .)
    DOUBLE_AMPERSAND reduce using rule 176 (AndExpression -> CmpExpression .)
    QUESTION        reduce using rule 176 (AndExpression -> CmpExpression .)
    DOUBLE_PIPE     reduce using rule 176 (AndExpression -> CmpExpression .)
    ASSIGN          reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_PLUS         reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_MINUS        reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_TIMES        reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_DIV          reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_MODULO       reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_AND_BIT      reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_OR_BIT       reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_XOR_BIT      reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_LEFT         reduce using rule 176 (AndExpression -> CmpExpression .)
    EQ_RIGHT        reduce using rule 176 (AndExpression -> CmpExpression .)
    COMMA           reduce using rule 176 (AndExpression -> CmpExpression .)
    RPAREN          reduce using rule 176 (AndExpression -> CmpExpression .)
    SEMICOLON       reduce using rule 176 (AndExpression -> CmpExpression .)
    RBRACE          reduce using rule 176 (AndExpression -> CmpExpression .)
    RBRACKET        reduce using rule 176 (AndExpression -> CmpExpression .)
    RANGE           reduce using rule 176 (AndExpression -> CmpExpression .)
    COLON           reduce using rule 176 (AndExpression -> CmpExpression .)


state 231

    (267) LIT_STRPlus -> LIT_STR . LIT_STRPlus
    (268) LIT_STRPlus -> LIT_STR .
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR

    POWER           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    DOT             reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    PLUS_PLUS       reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    MINUS_MINUS     reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    LPAREN          reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    TIMES           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    DIV             reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    MODULO          reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    PLUS            reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    MINUS           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    LEFT_SHIFT      reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    RIGHT_SHIFT     reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    IS_EQ           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    NOT_EQ          reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    LESS            reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    GREATER_EQ      reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    GREATER         reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    LESS_EQ         reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    AMPERSAND       reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    CARET           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    PIPE            reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    DOUBLE_AMPERSAND reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    QUESTION        reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    DOUBLE_PIPE     reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    ASSIGN          reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_PLUS         reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_MINUS        reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_TIMES        reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_DIV          reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_MODULO       reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_AND_BIT      reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_OR_BIT       reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_XOR_BIT      reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_LEFT         reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    EQ_RIGHT        reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    RBRACKET        reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    RANGE           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    COMMA           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    RPAREN          reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    SEMICOLON       reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    RBRACE          reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    COLON           reduce using rule 268 (LIT_STRPlus -> LIT_STR .)
    LIT_STR         shift and go to state 231

    LIT_STRPlus                    shift and go to state 434

state 232

    (97) BasicType2X -> LBRACKET RBRACKET .

    TIMES           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    FUNCTION        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    IDENTIFIER      reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    LBRACE          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    BODY            reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    POWER           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    DOT             reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    PLUS_PLUS       reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    MINUS_MINUS     reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    DIV             reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    MODULO          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    LEFT_SHIFT      reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    RIGHT_SHIFT     reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    IS_EQ           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    NOT_EQ          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    LESS            reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    GREATER_EQ      reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    LESS_EQ         reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    AMPERSAND       reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    CARET           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    PIPE            reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    QUESTION        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    DOUBLE_PIPE     reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_PLUS         reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_MINUS        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_TIMES        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_DIV          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_MODULO       reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_AND_BIT      reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_OR_BIT       reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_XOR_BIT      reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_LEFT         reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    EQ_RIGHT        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    RANGE           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    COLON           reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)
    ELLIPSIS        reduce using rule 97 (BasicType2X -> LBRACKET RBRACKET .)


state 233

    (98) BasicType2X -> LBRACKET AssignExpression . RBRACKET
    (99) BasicType2X -> LBRACKET AssignExpression . RANGE AssignExpression RBRACKET

    RBRACKET        shift and go to state 435
    RANGE           shift and go to state 436


state 234

    (93) BasicType2 -> BasicType2X BasicType2_opt .

    IDENTIFIER      reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    LPAREN          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    LBRACE          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    SEMICOLON       reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    BODY            reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    COMMA           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    LBRACKET        reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    RPAREN          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    POWER           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    DOT             reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    PLUS_PLUS       reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    MINUS_MINUS     reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    TIMES           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    DIV             reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    MODULO          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    PLUS            reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    MINUS           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    LEFT_SHIFT      reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    RIGHT_SHIFT     reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    IS_EQ           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    NOT_EQ          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    LESS            reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    GREATER_EQ      reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    GREATER         reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    LESS_EQ         reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    AMPERSAND       reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    CARET           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    PIPE            reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    DOUBLE_AMPERSAND reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    QUESTION        reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    DOUBLE_PIPE     reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    ASSIGN          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_PLUS         reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_MINUS        reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_TIMES        reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_DIV          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_MODULO       reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_AND_BIT      reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_OR_BIT       reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_XOR_BIT      reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_LEFT         reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    EQ_RIGHT        reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    RBRACKET        reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    RANGE           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    RBRACE          reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    COLON           reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)
    ELLIPSIS        reduce using rule 93 (BasicType2 -> BasicType2X BasicType2_opt .)


state 235

    (61) AltDeclarator -> BasicType2_opt LPAREN . AltDeclaratorX RPAREN
    (62) AltDeclarator -> BasicType2_opt LPAREN . AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> BasicType2_opt LPAREN . AltDeclaratorX RPAREN AltDeclaratorSuffixes
    (64) AltDeclaratorX -> . BasicType2_opt IDENTIFIER
    (65) AltDeclaratorX -> . BasicType2_opt IDENTIFIER AltFuncDeclaratorSuffix
    (66) AltDeclaratorX -> . AltDeclarator
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (60) AltDeclarator -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

    AltDeclaratorX                 shift and go to state 437
    BasicType2X                    shift and go to state 81
    AltDeclarator                  shift and go to state 438
    empty                          shift and go to state 86
    BasicType2_opt                 shift and go to state 439
    BasicType2                     shift and go to state 90

state 236

    (443) FuncDeclarator -> BasicType2_opt IDENTIFIER . FuncDeclaratorSuffix
    (59) VarDeclarator -> BasicType2_opt IDENTIFIER .
    (60) AltDeclarator -> BasicType2_opt IDENTIFIER . AltDeclaratorSuffixes
    (444) FuncDeclaratorSuffix -> . Parameters MemberFunctionAttributes_opt
    (67) AltDeclaratorSuffixes -> . AltDeclaratorSuffix
    (68) AltDeclaratorSuffixes -> . AltDeclaratorSuffix AltDeclaratorSuffixes
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (71) AltDeclaratorSuffix -> . LBRACKET RBRACKET
    (72) AltDeclaratorSuffix -> . LBRACKET AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> . LBRACKET Type RBRACKET

    ASSIGN          reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    COMMA           reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    SEMICOLON       reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    LPAREN          shift and go to state 76
    LBRACKET        shift and go to state 441

    FuncDeclaratorSuffix           shift and go to state 440
    Parameters                     shift and go to state 75
    AltDeclaratorSuffix            shift and go to state 442
    AltDeclaratorSuffixes          shift and go to state 443

state 237

    (42) Declarators -> DeclaratorInitializer COMMA . DeclaratorIdentifierList
    (47) DeclaratorIdentifierList -> . DeclaratorIdentifier
    (48) DeclaratorIdentifierList -> . DeclaratorIdentifier COMMA DeclaratorIdentifierList
    (49) DeclaratorIdentifier -> . VarDeclaratorIdentifier
    (50) DeclaratorIdentifier -> . AltDeclaratorIdentifier
    (51) VarDeclaratorIdentifier -> . IDENTIFIER
    (52) VarDeclaratorIdentifier -> . IDENTIFIER ASSIGN Initializer
    (53) AltDeclaratorIdentifier -> . BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt
    (54) AltDeclaratorIdentifier -> . BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN Initializer
    (55) AltDeclaratorIdentifier -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (56) AltDeclaratorIdentifier -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes ASSIGN Initializer
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters
    (477) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 448
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]

    DeclaratorIdentifier           shift and go to state 444
    DeclaratorIdentifierList       shift and go to state 446
    VarDeclaratorIdentifier        shift and go to state 449
    empty                          shift and go to state 86
    AltDeclaratorIdentifier        shift and go to state 445
    BasicType2X                    shift and go to state 81
    BasicType2_opt                 shift and go to state 447
    BasicType2                     shift and go to state 450

state 238

    (40) VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .

    SEMICOLON       reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    CASE            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    DEFAULT         reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    LBRACE          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    IDENTIFIER      reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    IF              reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    WHILE           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    DO              reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    FOR             reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    SWITCH          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    FINAL           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    CONTINUE        reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    BREAK           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    RETURN          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    GOTO            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    WITH            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    MIXIN           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    IMPORT          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    STATIC          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    LPAREN          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    ALIAS           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    ENUM            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    EXTERN          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    AUTO            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    CONST           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    IMMUTABLE       reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    FOREACH         reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    FOREACH_REVERSE reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    CLASS           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    UNION           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    AMPERSAND       reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    PLUS_PLUS       reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    MINUS_MINUS     reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    TIMES           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    MINUS           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    PLUS            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    EXCLAMATION     reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    TILDE           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    CAST            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    DOT             reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    THIS            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    NULL            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    TRUE            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    FALSE           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    DOLLAR          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    INUMBER         reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    DNUMBER         reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    LIT_CHAR        reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    LIT_STR         reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    LBRACKET        reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    FUNCTION        reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    NEW             reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    BOOL            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    SHORT           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    USHORT          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    INT             reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    UINT            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    LONG            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    ULONG           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    CHAR            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    FLOAT           reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    VOID            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    TYPEOF          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    TYPEID          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    BODY            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    RBRACE          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    ELSE            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    $end            reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    DELETE          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    PRIVATE         reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    PROTECTED       reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)
    PUBLIC          reduce using rule 40 (VarDeclarations -> StorageClasses_opt BasicType Declarators SEMICOLON .)


state 239

    (45) DeclaratorInitializer -> AltDeclarator ASSIGN . Initializer
    (114) Initializer -> . VoidInitializer
    (115) Initializer -> . NonVoidInitializer
    (142) VoidInitializer -> . VOID
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    VOID            shift and go to state 358
    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    Initializer                    shift and go to state 451
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    NonVoidInitializer             shift and go to state 360
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    ArrayInitializer               shift and go to state 361
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    VoidInitializer                shift and go to state 362
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 365

state 240

    (101) BasicType2X -> FUNCTION Parameters .

    TIMES           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    LBRACKET        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    FUNCTION        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    IDENTIFIER      reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    LBRACE          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    SEMICOLON       reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    BODY            reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    COMMA           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    LPAREN          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    RPAREN          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    POWER           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    DOT             reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    PLUS_PLUS       reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    MINUS_MINUS     reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    DIV             reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    MODULO          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    PLUS            reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    MINUS           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    LEFT_SHIFT      reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    RIGHT_SHIFT     reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    IS_EQ           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    NOT_EQ          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    LESS            reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    GREATER_EQ      reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    GREATER         reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    LESS_EQ         reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    AMPERSAND       reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    CARET           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    PIPE            reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    DOUBLE_AMPERSAND reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    QUESTION        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    DOUBLE_PIPE     reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    ASSIGN          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_PLUS         reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_MINUS        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_TIMES        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_DIV          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_MODULO       reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_AND_BIT      reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_OR_BIT       reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_XOR_BIT      reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_LEFT         reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    EQ_RIGHT        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    RBRACKET        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    RANGE           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    RBRACE          reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    COLON           reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)
    ELLIPSIS        reduce using rule 101 (BasicType2X -> FUNCTION Parameters .)


state 241

    (439) FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .

    SEMICOLON       reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    CASE            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    DEFAULT         reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    LBRACE          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    IDENTIFIER      reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    IF              reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    WHILE           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    DO              reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    FOR             reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    SWITCH          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    FINAL           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    CONTINUE        reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    BREAK           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    RETURN          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    GOTO            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    WITH            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    MIXIN           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    IMPORT          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    STATIC          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    LPAREN          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    ALIAS           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    ENUM            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    EXTERN          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    AUTO            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    CONST           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    IMMUTABLE       reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    FOREACH         reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    FOREACH_REVERSE reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    CLASS           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    UNION           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    AMPERSAND       reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    PLUS_PLUS       reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    MINUS_MINUS     reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    TIMES           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    MINUS           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    PLUS            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    EXCLAMATION     reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    TILDE           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    CAST            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    DOT             reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    THIS            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    NULL            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    TRUE            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    FALSE           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    DOLLAR          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    INUMBER         reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    DNUMBER         reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    LIT_CHAR        reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    LIT_STR         reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    LBRACKET        reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    FUNCTION        reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    NEW             reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    BOOL            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    SHORT           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    USHORT          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    INT             reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    UINT            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    LONG            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    ULONG           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    CHAR            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    FLOAT           reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    VOID            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    TYPEOF          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    TYPEID          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    BODY            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    RBRACE          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    ELSE            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    DELETE          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    PRIVATE         reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    PROTECTED       reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    PUBLIC          reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)
    $end            reduce using rule 439 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator FunctionBody .)


state 242

    (440) FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .

    SEMICOLON       reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CASE            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DEFAULT         reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LBRACE          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IDENTIFIER      reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IF              reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    WHILE           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DO              reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FOR             reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    SWITCH          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FINAL           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CONTINUE        reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    BREAK           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    RETURN          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    GOTO            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    WITH            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    MIXIN           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IMPORT          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    STATIC          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LPAREN          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ALIAS           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ENUM            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    EXTERN          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    AUTO            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CONST           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IMMUTABLE       reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FOREACH         reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FOREACH_REVERSE reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CLASS           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    UNION           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    AMPERSAND       reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PLUS_PLUS       reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    MINUS_MINUS     reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TIMES           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    MINUS           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PLUS            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    EXCLAMATION     reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TILDE           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CAST            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DOT             reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    THIS            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    NULL            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TRUE            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FALSE           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DOLLAR          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    INUMBER         reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DNUMBER         reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LIT_CHAR        reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LIT_STR         reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LBRACKET        reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FUNCTION        reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    NEW             reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    BOOL            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    SHORT           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    USHORT          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    INT             reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    UINT            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LONG            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ULONG           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CHAR            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FLOAT           reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    VOID            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TYPEOF          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TYPEID          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    BODY            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    RBRACE          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ELSE            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DELETE          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PRIVATE         reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PROTECTED       reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PUBLIC          reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    $end            reduce using rule 440 (FuncDeclaration -> StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)


state 243

    (234) PrimaryExpression -> IdentifierList .
    (80) BasicType -> IdentifierList .

  ! reduce/reduce conflict for LPAREN resolved using rule 80 (BasicType -> IdentifierList .)
    POWER           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DOT             reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    PLUS_PLUS       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    MINUS_MINUS     reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    TIMES           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DIV             reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    MODULO          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    PLUS            reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    MINUS           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    LEFT_SHIFT      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    RIGHT_SHIFT     reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    IS_EQ           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    NOT_EQ          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    LESS            reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    GREATER_EQ      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    GREATER         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    LESS_EQ         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    AMPERSAND       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    CARET           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    PIPE            reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DOUBLE_AMPERSAND reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    QUESTION        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    DOUBLE_PIPE     reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    ASSIGN          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_PLUS         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_MINUS        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_TIMES        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_DIV          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_MODULO       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_AND_BIT      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_OR_BIT       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_XOR_BIT      reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_LEFT         reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    EQ_RIGHT        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    RBRACKET        reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    RANGE           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    COMMA           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    RPAREN          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    SEMICOLON       reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    RBRACE          reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    COLON           reduce using rule 234 (PrimaryExpression -> IdentifierList .)
    LPAREN          reduce using rule 80 (BasicType -> IdentifierList .)

  ! LPAREN          [ reduce using rule 234 (PrimaryExpression -> IdentifierList .) ]


state 244

    (252) PrimaryExpression -> Typeof .
    (81) BasicType -> Typeof .
    (82) BasicType -> Typeof . DOT IdentifierList

  ! reduce/reduce conflict for LPAREN resolved using rule 81 (BasicType -> Typeof .)
  ! shift/reduce conflict for DOT resolved as shift
    POWER           reduce using rule 252 (PrimaryExpression -> Typeof .)
    PLUS_PLUS       reduce using rule 252 (PrimaryExpression -> Typeof .)
    MINUS_MINUS     reduce using rule 252 (PrimaryExpression -> Typeof .)
    TIMES           reduce using rule 252 (PrimaryExpression -> Typeof .)
    DIV             reduce using rule 252 (PrimaryExpression -> Typeof .)
    MODULO          reduce using rule 252 (PrimaryExpression -> Typeof .)
    PLUS            reduce using rule 252 (PrimaryExpression -> Typeof .)
    MINUS           reduce using rule 252 (PrimaryExpression -> Typeof .)
    LEFT_SHIFT      reduce using rule 252 (PrimaryExpression -> Typeof .)
    RIGHT_SHIFT     reduce using rule 252 (PrimaryExpression -> Typeof .)
    IS_EQ           reduce using rule 252 (PrimaryExpression -> Typeof .)
    NOT_EQ          reduce using rule 252 (PrimaryExpression -> Typeof .)
    LESS            reduce using rule 252 (PrimaryExpression -> Typeof .)
    GREATER_EQ      reduce using rule 252 (PrimaryExpression -> Typeof .)
    GREATER         reduce using rule 252 (PrimaryExpression -> Typeof .)
    LESS_EQ         reduce using rule 252 (PrimaryExpression -> Typeof .)
    AMPERSAND       reduce using rule 252 (PrimaryExpression -> Typeof .)
    CARET           reduce using rule 252 (PrimaryExpression -> Typeof .)
    PIPE            reduce using rule 252 (PrimaryExpression -> Typeof .)
    DOUBLE_AMPERSAND reduce using rule 252 (PrimaryExpression -> Typeof .)
    QUESTION        reduce using rule 252 (PrimaryExpression -> Typeof .)
    DOUBLE_PIPE     reduce using rule 252 (PrimaryExpression -> Typeof .)
    ASSIGN          reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_PLUS         reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_MINUS        reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_TIMES        reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_DIV          reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_MODULO       reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_AND_BIT      reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_OR_BIT       reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_XOR_BIT      reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_LEFT         reduce using rule 252 (PrimaryExpression -> Typeof .)
    EQ_RIGHT        reduce using rule 252 (PrimaryExpression -> Typeof .)
    RBRACKET        reduce using rule 252 (PrimaryExpression -> Typeof .)
    RANGE           reduce using rule 252 (PrimaryExpression -> Typeof .)
    COMMA           reduce using rule 252 (PrimaryExpression -> Typeof .)
    RPAREN          reduce using rule 252 (PrimaryExpression -> Typeof .)
    SEMICOLON       reduce using rule 252 (PrimaryExpression -> Typeof .)
    RBRACE          reduce using rule 252 (PrimaryExpression -> Typeof .)
    COLON           reduce using rule 252 (PrimaryExpression -> Typeof .)
    LPAREN          reduce using rule 81 (BasicType -> Typeof .)
    DOT             shift and go to state 93

  ! DOT             [ reduce using rule 252 (PrimaryExpression -> Typeof .) ]
  ! LPAREN          [ reduce using rule 252 (PrimaryExpression -> Typeof .) ]


state 245

    (235) PrimaryExpression -> DOT . IDENTIFIER
    (79) BasicType -> DOT . IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 419

    IdentifierList                 shift and go to state 78

state 246

    (232) PostfixExpression -> BasicType . LPAREN ArgumentList_opt RPAREN

    LPAREN          shift and go to state 420


state 247

    (233) PrimaryExpression -> IDENTIFIER .
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (256) ArrayLiteral -> IDENTIFIER . LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> IDENTIFIER . LBRACKET AssignExpression RBRACKET

  ! reduce/reduce conflict for POWER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LEFT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for IS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for NOT_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for CARET resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for QUESTION resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_AND_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_OR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_XOR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_LEFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_RIGHT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RANGE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RBRACE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for COLON resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! shift/reduce conflict for DOT resolved as shift
    POWER           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS_PLUS       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS_MINUS     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DIV             reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MODULO          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IS_EQ           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    NOT_EQ          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER_EQ      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS_EQ         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    AMPERSAND       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    CARET           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PIPE            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    QUESTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_PLUS         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MINUS        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_TIMES        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_DIV          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MODULO       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_LEFT         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_RIGHT        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RBRACKET        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RANGE           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COMMA           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    SEMICOLON       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RBRACE          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COLON           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 423

  ! POWER           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS_PLUS       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS_MINUS     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DIV             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MODULO          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LEFT_SHIFT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RIGHT_SHIFT     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! IS_EQ           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! NOT_EQ          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER_EQ      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS_EQ         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! AMPERSAND       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! CARET           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PIPE            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_AMPERSAND [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! QUESTION        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_PIPE     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! ASSIGN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_PLUS         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MINUS        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_TIMES        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_DIV          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MODULO       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_AND_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_OR_BIT       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_XOR_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_LEFT         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_RIGHT        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RBRACKET        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RANGE           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RBRACE          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! COLON           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 248

    (250) PrimaryExpression -> BasicTypeX . DOT IDENTIFIER
    (251) PrimaryExpression -> BasicTypeX . LPAREN ArgumentList_opt RPAREN
    (78) BasicType -> BasicTypeX .

    DOT             shift and go to state 426
    LPAREN          reduce using rule 78 (BasicType -> BasicTypeX .)

  ! LPAREN          [ shift and go to state 425 ]


state 249

    (104) IdentifierList -> IDENTIFIER LBRACKET AssignExpression . RBRACKET DOT IdentifierList

    RBRACKET        shift and go to state 452


state 250

    (103) IdentifierList -> IDENTIFIER DOT IdentifierList .

    POWER           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    DOT             reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    PLUS_PLUS       reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    MINUS_MINUS     reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    LPAREN          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    TIMES           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    DIV             reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    MODULO          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    PLUS            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    MINUS           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    LEFT_SHIFT      reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    RIGHT_SHIFT     reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    IS_EQ           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    NOT_EQ          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    LESS            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    GREATER_EQ      reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    GREATER         reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    LESS_EQ         reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    AMPERSAND       reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    CARET           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    PIPE            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    DOUBLE_AMPERSAND reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    QUESTION        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    DOUBLE_PIPE     reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    ASSIGN          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_PLUS         reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_MINUS        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_TIMES        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_DIV          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_MODULO       reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_AND_BIT      reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_OR_BIT       reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_XOR_BIT      reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_LEFT         reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    EQ_RIGHT        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    RBRACKET        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    RANGE           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    COMMA           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    RPAREN          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    SEMICOLON       reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    RBRACE          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    COLON           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    LBRACKET        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    FUNCTION        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    LBRACE          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    BODY            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    IDENTIFIER      reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    ELLIPSIS        reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    BOOL            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    SHORT           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    USHORT          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    INT             reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    UINT            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    LONG            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    ULONG           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    CHAR            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    FLOAT           reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    VOID            reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)
    TYPEOF          reduce using rule 103 (IdentifierList -> IDENTIFIER DOT IdentifierList .)


state 251

    (82) BasicType -> Typeof DOT IdentifierList .

    LPAREN          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    TIMES           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    LBRACKET        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    FUNCTION        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    IDENTIFIER      reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    RPAREN          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    COMMA           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    LBRACE          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    ELLIPSIS        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    DOT             reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    BOOL            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    SHORT           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    USHORT          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    INT             reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    UINT            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    LONG            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    ULONG           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    CHAR            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    FLOAT           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    VOID            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    TYPEOF          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    POWER           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    PLUS_PLUS       reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    MINUS_MINUS     reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    DIV             reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    MODULO          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    PLUS            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    MINUS           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    LEFT_SHIFT      reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    RIGHT_SHIFT     reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    IS_EQ           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    NOT_EQ          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    LESS            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    GREATER_EQ      reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    GREATER         reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    LESS_EQ         reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    AMPERSAND       reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    CARET           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    PIPE            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    DOUBLE_AMPERSAND reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    QUESTION        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    DOUBLE_PIPE     reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    ASSIGN          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_PLUS         reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_MINUS        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_TIMES        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_DIV          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_MODULO       reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_AND_BIT      reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_OR_BIT       reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_XOR_BIT      reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_LEFT         reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    EQ_RIGHT        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    RBRACKET        reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    RANGE           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    SEMICOLON       reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    RBRACE          reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    COLON           reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)
    BODY            reduce using rule 82 (BasicType -> Typeof DOT IdentifierList .)


state 252

    (141) Typeof -> TYPEOF LPAREN RETURN . RPAREN

    RPAREN          shift and go to state 453


state 253

    (140) Typeof -> TYPEOF LPAREN Expression . RPAREN

    RPAREN          shift and go to state 454


state 254

    (151) Expression -> CommaExpression .

    SEMICOLON       reduce using rule 151 (Expression -> CommaExpression .)
    RPAREN          reduce using rule 151 (Expression -> CommaExpression .)
    COLON           reduce using rule 151 (Expression -> CommaExpression .)
    RANGE           reduce using rule 151 (Expression -> CommaExpression .)


state 255

    (152) CommaExpression -> AssignExpression .
    (153) CommaExpression -> AssignExpression . COMMA CommaExpression

    SEMICOLON       reduce using rule 152 (CommaExpression -> AssignExpression .)
    RPAREN          reduce using rule 152 (CommaExpression -> AssignExpression .)
    COLON           reduce using rule 152 (CommaExpression -> AssignExpression .)
    RANGE           reduce using rule 152 (CommaExpression -> AssignExpression .)
    COMMA           shift and go to state 455


state 256

    (398) BaseClassList -> COLON SuperClass .
    (399) BaseClassList -> COLON SuperClass . COMMA Interfaces

    LBRACE          reduce using rule 398 (BaseClassList -> COLON SuperClass .)
    COMMA           shift and go to state 456


state 257

    (400) BaseClassList -> COLON Interfaces .

    LBRACE          reduce using rule 400 (BaseClassList -> COLON Interfaces .)


state 258

    (403) SuperClass -> BasicType .
    (406) Interface -> BasicType .

  ! reduce/reduce conflict for COMMA resolved using rule 403 (SuperClass -> BasicType .)
  ! reduce/reduce conflict for LBRACE resolved using rule 403 (SuperClass -> BasicType .)
    COMMA           reduce using rule 403 (SuperClass -> BasicType .)
    LBRACE          reduce using rule 403 (SuperClass -> BasicType .)

  ! COMMA           [ reduce using rule 406 (Interface -> BasicType .) ]
  ! LBRACE          [ reduce using rule 406 (Interface -> BasicType .) ]


state 259

    (404) Interfaces -> Interface .
    (405) Interfaces -> Interface . COMMA Interfaces

    LBRACE          reduce using rule 404 (Interfaces -> Interface .)
    COMMA           shift and go to state 457


state 260

    (397) ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .

    SEMICOLON       reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    CASE            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    DEFAULT         reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    LBRACE          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    IDENTIFIER      reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    IF              reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    WHILE           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    DO              reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    FOR             reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    SWITCH          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    FINAL           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    CONTINUE        reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    BREAK           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    RETURN          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    GOTO            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    WITH            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    MIXIN           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    IMPORT          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    STATIC          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    LPAREN          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    ALIAS           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    ENUM            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    EXTERN          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    AUTO            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    CONST           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    IMMUTABLE       reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    FOREACH         reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    FOREACH_REVERSE reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    CLASS           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    UNION           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    AMPERSAND       reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    PLUS_PLUS       reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    MINUS_MINUS     reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    TIMES           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    MINUS           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    PLUS            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    EXCLAMATION     reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    TILDE           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    CAST            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    DOT             reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    THIS            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    NULL            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    TRUE            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    FALSE           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    DOLLAR          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    INUMBER         reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    DNUMBER         reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    LIT_CHAR        reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    LIT_STR         reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    LBRACKET        reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    FUNCTION        reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    NEW             reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    BOOL            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    SHORT           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    USHORT          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    INT             reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    UINT            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    LONG            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    ULONG           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    CHAR            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    FLOAT           reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    VOID            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    TYPEOF          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    TYPEID          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    BODY            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    RBRACE          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    ELSE            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    DELETE          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    PRIVATE         reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    PROTECTED       reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    PUBLIC          reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)
    $end            reduce using rule 397 (ClassDeclaration -> CLASS IDENTIFIER BaseClassList_opt AggregateBody .)


state 261

    (407) Allocator -> NEW Parameters . SEMICOLON
    (408) Allocator -> NEW Parameters . FunctionBody
    (470) FunctionBody -> . BlockStatement
    (471) FunctionBody -> . BodyStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    SEMICOLON       shift and go to state 459
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    FunctionBody                   shift and go to state 458
    BlockStatement                 shift and go to state 147
    BodyStatement                  shift and go to state 148

state 262

    (395) AggregateBody -> LBRACE DeclDefs_opt RBRACE .

    ALIAS           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    ENUM            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    IMPORT          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    STATIC          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    CLASS           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    UNION           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EXTERN          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    FINAL           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    AUTO            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    CONST           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    IMMUTABLE       reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DOT             reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    BOOL            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    SHORT           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    USHORT          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    INT             reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    UINT            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LONG            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    ULONG           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    CHAR            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    FLOAT           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    VOID            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    IDENTIFIER      reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    TYPEOF          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    $end            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    SEMICOLON       reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    NEW             reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DELETE          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    MIXIN           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    PRIVATE         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    PROTECTED       reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    PUBLIC          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    RBRACE          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    CASE            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DEFAULT         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LBRACE          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    IF              reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    WHILE           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DO              reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    FOR             reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    SWITCH          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    CONTINUE        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    BREAK           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    RETURN          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    GOTO            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    WITH            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LPAREN          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    FOREACH         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    FOREACH_REVERSE reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    AMPERSAND       reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    PLUS_PLUS       reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    MINUS_MINUS     reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    TIMES           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    MINUS           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    PLUS            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EXCLAMATION     reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    TILDE           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    CAST            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    THIS            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    NULL            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    TRUE            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    FALSE           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DOLLAR          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    INUMBER         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DNUMBER         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LIT_CHAR        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LIT_STR         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LBRACKET        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    FUNCTION        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    TYPEID          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    BODY            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    ELSE            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    POWER           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DIV             reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    MODULO          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LEFT_SHIFT      reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    RIGHT_SHIFT     reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    IS_EQ           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    NOT_EQ          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LESS            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    GREATER_EQ      reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    GREATER         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    LESS_EQ         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    CARET           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    PIPE            reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DOUBLE_AMPERSAND reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    QUESTION        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    DOUBLE_PIPE     reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    ASSIGN          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_PLUS         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_MINUS        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_TIMES        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_DIV          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_MODULO       reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_AND_BIT      reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_OR_BIT       reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_XOR_BIT      reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_LEFT         reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    EQ_RIGHT        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    RBRACKET        reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    RANGE           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    COMMA           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    RPAREN          reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)
    COLON           reduce using rule 395 (AggregateBody -> LBRACE DeclDefs_opt RBRACE .)


state 263

    (4) DeclDefs -> DeclDef DeclDefs .

    RBRACE          reduce using rule 4 (DeclDefs -> DeclDef DeclDefs .)


state 264

    (411) AliasThis -> ALIAS IDENTIFIER . THIS SEMICOLON
    (138) AliasDeclarationY -> IDENTIFIER . ASSIGN StorageClasses_opt Type
    (139) AliasDeclarationY -> IDENTIFIER . ASSIGN FunctionLiteral

    THIS            shift and go to state 460
    ASSIGN          shift and go to state 138


state 265

    (143) AttributeSpecifier -> Attribute COLON .

    SEMICOLON       reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    NEW             reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    DELETE          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    ALIAS           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    MIXIN           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    ENUM            reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    IMPORT          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    STATIC          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    PRIVATE         reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    PROTECTED       reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    PUBLIC          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    CLASS           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    UNION           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    EXTERN          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    FINAL           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    AUTO            reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    CONST           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    IMMUTABLE       reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    DOT             reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    BOOL            reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    SHORT           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    USHORT          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    INT             reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    UINT            reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    LONG            reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    ULONG           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    CHAR            reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    FLOAT           reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    VOID            reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    IDENTIFIER      reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    TYPEOF          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)
    RBRACE          reduce using rule 143 (AttributeSpecifier -> Attribute COLON .)


state 266

    (146) DeclarationBlock -> DeclDef .

    SEMICOLON       reduce using rule 146 (DeclarationBlock -> DeclDef .)
    NEW             reduce using rule 146 (DeclarationBlock -> DeclDef .)
    DELETE          reduce using rule 146 (DeclarationBlock -> DeclDef .)
    ALIAS           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    MIXIN           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    ENUM            reduce using rule 146 (DeclarationBlock -> DeclDef .)
    IMPORT          reduce using rule 146 (DeclarationBlock -> DeclDef .)
    STATIC          reduce using rule 146 (DeclarationBlock -> DeclDef .)
    PRIVATE         reduce using rule 146 (DeclarationBlock -> DeclDef .)
    PROTECTED       reduce using rule 146 (DeclarationBlock -> DeclDef .)
    PUBLIC          reduce using rule 146 (DeclarationBlock -> DeclDef .)
    CLASS           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    UNION           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    EXTERN          reduce using rule 146 (DeclarationBlock -> DeclDef .)
    FINAL           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    AUTO            reduce using rule 146 (DeclarationBlock -> DeclDef .)
    CONST           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    IMMUTABLE       reduce using rule 146 (DeclarationBlock -> DeclDef .)
    DOT             reduce using rule 146 (DeclarationBlock -> DeclDef .)
    BOOL            reduce using rule 146 (DeclarationBlock -> DeclDef .)
    SHORT           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    USHORT          reduce using rule 146 (DeclarationBlock -> DeclDef .)
    INT             reduce using rule 146 (DeclarationBlock -> DeclDef .)
    UINT            reduce using rule 146 (DeclarationBlock -> DeclDef .)
    LONG            reduce using rule 146 (DeclarationBlock -> DeclDef .)
    ULONG           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    CHAR            reduce using rule 146 (DeclarationBlock -> DeclDef .)
    FLOAT           reduce using rule 146 (DeclarationBlock -> DeclDef .)
    VOID            reduce using rule 146 (DeclarationBlock -> DeclDef .)
    IDENTIFIER      reduce using rule 146 (DeclarationBlock -> DeclDef .)
    TYPEOF          reduce using rule 146 (DeclarationBlock -> DeclDef .)
    RBRACE          reduce using rule 146 (DeclarationBlock -> DeclDef .)


state 267

    (144) AttributeSpecifier -> Attribute DeclarationBlock .

    SEMICOLON       reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    NEW             reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    DELETE          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    ALIAS           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    MIXIN           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    ENUM            reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    IMPORT          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    STATIC          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    PRIVATE         reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    PROTECTED       reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    PUBLIC          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    CLASS           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    UNION           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    EXTERN          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    FINAL           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    AUTO            reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    CONST           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    IMMUTABLE       reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    DOT             reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    BOOL            reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    SHORT           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    USHORT          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    INT             reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    UINT            reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    LONG            reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    ULONG           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    CHAR            reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    FLOAT           reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    VOID            reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    IDENTIFIER      reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    TYPEOF          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)
    RBRACE          reduce using rule 144 (AttributeSpecifier -> Attribute DeclarationBlock .)


state 268

    (147) DeclarationBlock -> LBRACE . DeclDefs_opt RBRACE
    (5) DeclDefs_opt -> . DeclDefs
    (6) DeclDefs_opt -> . empty
    (3) DeclDefs -> . DeclDef
    (4) DeclDefs -> . DeclDef DeclDefs
    (477) empty -> .
    (7) DeclDef -> . AttributeSpecifier
    (8) DeclDef -> . Declaration
    (9) DeclDef -> . Allocator
    (10) DeclDef -> . Deallocator
    (11) DeclDef -> . AliasThis
    (12) DeclDef -> . MixinDeclaration
    (13) DeclDef -> . SEMICOLON
    (143) AttributeSpecifier -> . Attribute COLON
    (144) AttributeSpecifier -> . Attribute DeclarationBlock
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (407) Allocator -> . NEW Parameters SEMICOLON
    (408) Allocator -> . NEW Parameters FunctionBody
    (409) Deallocator -> . DELETE Parameters SEMICOLON
    (410) Deallocator -> . DELETE Parameters FunctionBody
    (411) AliasThis -> . ALIAS IDENTIFIER THIS SEMICOLON
    (33) MixinDeclaration -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (145) Attribute -> . VisibilityAttribute
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (148) VisibilityAttribute -> . PRIVATE
    (149) VisibilityAttribute -> . PROTECTED
    (150) VisibilityAttribute -> . PUBLIC
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

    RBRACE          reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    SEMICOLON       shift and go to state 103
    NEW             shift and go to state 100
    DELETE          shift and go to state 119
    ALIAS           shift and go to state 113
    MIXIN           shift and go to state 117
    ENUM            shift and go to state 18
    IMPORT          shift and go to state 27
    STATIC          shift and go to state 5
    PRIVATE         shift and go to state 107
    PROTECTED       shift and go to state 116
    PUBLIC          shift and go to state 115
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

    StorageClasses                 shift and go to state 1
    AggregateDeclaration           shift and go to state 4
    FuncDeclaration                shift and go to state 6
    AttributeSpecifier             shift and go to state 101
    StorageClasses_opt             shift and go to state 9
    DeclDefs                       shift and go to state 104
    VisibilityAttribute            shift and go to state 105
    DeclDefs_opt                   shift and go to state 461
    AliasThis                      shift and go to state 108
    DeclDef                        shift and go to state 109
    Deallocator                    shift and go to state 110
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    empty                          shift and go to state 111
    AutoFuncDeclaration            shift and go to state 16
    MixinDeclaration               shift and go to state 102
    Declaration                    shift and go to state 112
    AnonymousEnumDeclaration       shift and go to state 20
    AnonUnionDeclaration           shift and go to state 22
    EnumDeclaration                shift and go to state 24
    Attribute                      shift and go to state 114
    UnionDeclaration               shift and go to state 25
    ImportDeclaration              shift and go to state 10
    ClassDeclaration               shift and go to state 26
    Allocator                      shift and go to state 118
    StorageClass                   shift and go to state 28

state 269

    (33) MixinDeclaration -> MIXIN LPAREN . AssignExpression RPAREN SEMICOLON
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 462

state 270

    (409) Deallocator -> DELETE Parameters . SEMICOLON
    (410) Deallocator -> DELETE Parameters . FunctionBody
    (470) FunctionBody -> . BlockStatement
    (471) FunctionBody -> . BodyStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    SEMICOLON       shift and go to state 464
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    FunctionBody                   shift and go to state 463
    BlockStatement                 shift and go to state 147
    BodyStatement                  shift and go to state 148

state 271

    (432) AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .

    SEMICOLON       reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    CASE            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    DEFAULT         reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    LBRACE          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    IDENTIFIER      reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    IF              reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    WHILE           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    DO              reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    FOR             reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    SWITCH          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    FINAL           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    CONTINUE        reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    BREAK           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    RETURN          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    GOTO            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    WITH            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    MIXIN           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    IMPORT          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    STATIC          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    LPAREN          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    ALIAS           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    ENUM            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    EXTERN          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    AUTO            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    CONST           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    IMMUTABLE       reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    FOREACH         reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    FOREACH_REVERSE reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    CLASS           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    UNION           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    AMPERSAND       reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    PLUS_PLUS       reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    MINUS_MINUS     reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    TIMES           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    MINUS           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    PLUS            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    EXCLAMATION     reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    TILDE           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    CAST            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    DOT             reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    THIS            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    NULL            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    TRUE            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    FALSE           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    DOLLAR          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    INUMBER         reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    DNUMBER         reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    LIT_CHAR        reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    LIT_STR         reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    LBRACKET        reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    FUNCTION        reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    NEW             reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    BOOL            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    SHORT           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    USHORT          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    INT             reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    UINT            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    LONG            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    ULONG           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    CHAR            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    FLOAT           reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    VOID            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    TYPEOF          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    TYPEID          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    BODY            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    RBRACE          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    ELSE            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    $end            reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    DELETE          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    PRIVATE         reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    PROTECTED       reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)
    PUBLIC          reduce using rule 432 (AnonymousEnumDeclaration -> ENUM LBRACE EnumMembers RBRACE .)


state 272

    (438) AnonymousEnumMember -> Type IDENTIFIER . ASSIGN AssignExpression

    ASSIGN          shift and go to state 465


state 273

    (75) Type -> BasicType BasicType2_opt .

    RPAREN          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    LBRACKET        reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    LPAREN          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    POWER           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    DOT             reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    PLUS_PLUS       reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    MINUS_MINUS     reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    TIMES           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    DIV             reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    MODULO          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    PLUS            reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    MINUS           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    LEFT_SHIFT      reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    RIGHT_SHIFT     reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    IS_EQ           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    NOT_EQ          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    LESS            reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    GREATER_EQ      reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    GREATER         reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    LESS_EQ         reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    AMPERSAND       reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    CARET           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    PIPE            reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    DOUBLE_AMPERSAND reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    QUESTION        reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    DOUBLE_PIPE     reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    ASSIGN          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_PLUS         reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_MINUS        reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_TIMES        reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_DIV          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_MODULO       reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_AND_BIT      reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_OR_BIT       reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_XOR_BIT      reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_LEFT         reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    EQ_RIGHT        reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    RBRACKET        reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    RANGE           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    COMMA           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    SEMICOLON       reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    RBRACE          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    COLON           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    IDENTIFIER      reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    LBRACE          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    BODY            reduce using rule 75 (Type -> BasicType BasicType2_opt .)


state 274

    (433) AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .

    SEMICOLON       reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    CASE            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    DEFAULT         reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    LBRACE          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    IDENTIFIER      reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    IF              reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    WHILE           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    DO              reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    FOR             reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    SWITCH          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    FINAL           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    CONTINUE        reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    BREAK           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    RETURN          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    GOTO            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    WITH            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    MIXIN           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    IMPORT          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    STATIC          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    LPAREN          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    ALIAS           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    ENUM            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    EXTERN          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    AUTO            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    CONST           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    IMMUTABLE       reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    FOREACH         reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    FOREACH_REVERSE reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    CLASS           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    UNION           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    AMPERSAND       reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    PLUS_PLUS       reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    MINUS_MINUS     reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    TIMES           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    MINUS           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    PLUS            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    EXCLAMATION     reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    TILDE           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    CAST            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    DOT             reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    THIS            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    NULL            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    TRUE            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    FALSE           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    DOLLAR          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    INUMBER         reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    DNUMBER         reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    LIT_CHAR        reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    LIT_STR         reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    LBRACKET        reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    FUNCTION        reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    NEW             reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    BOOL            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    SHORT           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    USHORT          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    INT             reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    UINT            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    LONG            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    ULONG           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    CHAR            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    FLOAT           reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    VOID            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    TYPEOF          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    TYPEID          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    BODY            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    RBRACE          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    ELSE            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    $end            reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    DELETE          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    PRIVATE         reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    PROTECTED       reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)
    PUBLIC          reduce using rule 433 (AnonymousEnumDeclaration -> ENUM LBRACE AnonymousEnumMembers RBRACE .)


state 275

    (430) EnumMember -> IDENTIFIER ASSIGN . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 466

state 276

    (427) EnumMembers -> EnumMember COMMA .
    (428) EnumMembers -> EnumMember COMMA . EnumMembers
    (426) EnumMembers -> . EnumMember
    (427) EnumMembers -> . EnumMember COMMA
    (428) EnumMembers -> . EnumMember COMMA EnumMembers
    (429) EnumMember -> . IDENTIFIER
    (430) EnumMember -> . IDENTIFIER ASSIGN AssignExpression

    RBRACE          reduce using rule 427 (EnumMembers -> EnumMember COMMA .)
    IDENTIFIER      shift and go to state 281

    EnumMember                     shift and go to state 280
    EnumMembers                    shift and go to state 467

state 277

    (435) AnonymousEnumMembers -> AnonymousEnumMember COMMA .
    (436) AnonymousEnumMembers -> AnonymousEnumMember COMMA . AnonymousEnumMembers
    (434) AnonymousEnumMembers -> . AnonymousEnumMember
    (435) AnonymousEnumMembers -> . AnonymousEnumMember COMMA
    (436) AnonymousEnumMembers -> . AnonymousEnumMember COMMA AnonymousEnumMembers
    (437) AnonymousEnumMember -> . EnumMember
    (438) AnonymousEnumMember -> . Type IDENTIFIER ASSIGN AssignExpression
    (429) EnumMember -> . IDENTIFIER
    (430) EnumMember -> . IDENTIFIER ASSIGN AssignExpression
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    RBRACE          reduce using rule 435 (AnonymousEnumMembers -> AnonymousEnumMember COMMA .)
    IDENTIFIER      shift and go to state 126
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47

    EnumMember                     shift and go to state 469
    BasicType                      shift and go to state 124
    AnonymousEnumMembers           shift and go to state 468
    AnonymousEnumMember            shift and go to state 128
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    Type                           shift and go to state 123

state 278

    (431) AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE . EnumMembers RBRACE
    (426) EnumMembers -> . EnumMember
    (427) EnumMembers -> . EnumMember COMMA
    (428) EnumMembers -> . EnumMember COMMA EnumMembers
    (429) EnumMember -> . IDENTIFIER
    (430) EnumMember -> . IDENTIFIER ASSIGN AssignExpression

    IDENTIFIER      shift and go to state 281

    EnumMembers                    shift and go to state 470
    EnumMember                     shift and go to state 280

state 279

    (424) EnumBody -> LBRACE EnumMembers . RBRACE

    RBRACE          shift and go to state 471


state 280

    (426) EnumMembers -> EnumMember .
    (427) EnumMembers -> EnumMember . COMMA
    (428) EnumMembers -> EnumMember . COMMA EnumMembers

    RBRACE          reduce using rule 426 (EnumMembers -> EnumMember .)
    COMMA           shift and go to state 276


state 281

    (429) EnumMember -> IDENTIFIER .
    (430) EnumMember -> IDENTIFIER . ASSIGN AssignExpression

    COMMA           reduce using rule 429 (EnumMember -> IDENTIFIER .)
    RBRACE          reduce using rule 429 (EnumMember -> IDENTIFIER .)
    ASSIGN          shift and go to state 275


state 282

    (421) EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType . EnumBody
    (424) EnumBody -> . LBRACE EnumMembers RBRACE
    (425) EnumBody -> . SEMICOLON

    LBRACE          shift and go to state 131
    SEMICOLON       shift and go to state 132

    EnumBody                       shift and go to state 472

state 283

    (133) AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators . SEMICOLON

    SEMICOLON       shift and go to state 473


state 284

    (134) AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator . SEMICOLON

    SEMICOLON       shift and go to state 474


state 285

    (137) AliasDeclarationX -> AliasDeclarationX COMMA AliasDeclarationY .

    SEMICOLON       reduce using rule 137 (AliasDeclarationX -> AliasDeclarationX COMMA AliasDeclarationY .)
    COMMA           reduce using rule 137 (AliasDeclarationX -> AliasDeclarationX COMMA AliasDeclarationY .)


state 286

    (138) AliasDeclarationY -> IDENTIFIER ASSIGN StorageClasses_opt . Type
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    Type                           shift and go to state 475
    BasicType                      shift and go to state 124
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33

state 287

    (139) AliasDeclarationY -> IDENTIFIER ASSIGN FunctionLiteral .

    SEMICOLON       reduce using rule 139 (AliasDeclarationY -> IDENTIFIER ASSIGN FunctionLiteral .)
    COMMA           reduce using rule 139 (AliasDeclarationY -> IDENTIFIER ASSIGN FunctionLiteral .)


state 288

    (26) Import -> ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName .

    COMMA           reduce using rule 26 (Import -> ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName .)
    COLON           reduce using rule 26 (Import -> ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName .)
    SEMICOLON       reduce using rule 26 (Import -> ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName .)


state 289

    (16) ModuleName -> IDENTIFIER .
    (19) PackageName -> IDENTIFIER .

    COMMA           reduce using rule 16 (ModuleName -> IDENTIFIER .)
    COLON           reduce using rule 16 (ModuleName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 16 (ModuleName -> IDENTIFIER .)
    DOT             reduce using rule 19 (PackageName -> IDENTIFIER .)


state 290

    (27) ImportBindings -> Import COLON ImportBindList .

    SEMICOLON       reduce using rule 27 (ImportBindings -> Import COLON ImportBindList .)


state 291

    (28) ImportBindList -> ImportBind .
    (29) ImportBindList -> ImportBind . COMMA ImportBindList

    SEMICOLON       reduce using rule 28 (ImportBindList -> ImportBind .)
    COMMA           shift and go to state 476


state 292

    (30) ImportBind -> IDENTIFIER .
    (31) ImportBind -> IDENTIFIER . ASSIGN IDENTIFIER

    COMMA           reduce using rule 30 (ImportBind -> IDENTIFIER .)
    SEMICOLON       reduce using rule 30 (ImportBind -> IDENTIFIER .)
    ASSIGN          shift and go to state 477


state 293

    (24) ImportList -> Import COMMA ImportList .

    SEMICOLON       reduce using rule 24 (ImportList -> Import COMMA ImportList .)


state 294

    (18) Packages -> Packages DOT PackageName .

    DOT             reduce using rule 18 (Packages -> Packages DOT PackageName .)


state 295

    (15) ModuleFullyQualifiedName -> Packages DOT ModuleName .

    COMMA           reduce using rule 15 (ModuleFullyQualifiedName -> Packages DOT ModuleName .)
    COLON           reduce using rule 15 (ModuleFullyQualifiedName -> Packages DOT ModuleName .)
    SEMICOLON       reduce using rule 15 (ModuleFullyQualifiedName -> Packages DOT ModuleName .)


state 296

    (288) NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .

    SEMICOLON       reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    CASE            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    DEFAULT         reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    LBRACE          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    IDENTIFIER      reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    IF              reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    WHILE           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    DO              reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    FOR             reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    SWITCH          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    FINAL           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    CONTINUE        reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    BREAK           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    RETURN          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    GOTO            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    WITH            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    MIXIN           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    IMPORT          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    STATIC          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    LPAREN          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    ALIAS           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    ENUM            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    EXTERN          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    AUTO            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    CONST           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    IMMUTABLE       reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    FOREACH         reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    FOREACH_REVERSE reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    CLASS           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    UNION           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    AMPERSAND       reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    PLUS_PLUS       reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    MINUS_MINUS     reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    TIMES           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    MINUS           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    PLUS            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    EXCLAMATION     reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    TILDE           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    CAST            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    DOT             reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    THIS            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    NULL            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    TRUE            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    FALSE           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    DOLLAR          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    INUMBER         reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    DNUMBER         reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    LIT_CHAR        reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    LIT_STR         reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    LBRACKET        reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    FUNCTION        reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    NEW             reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    BOOL            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    SHORT           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    USHORT          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    INT             reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    UINT            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    LONG            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    ULONG           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    CHAR            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    FLOAT           reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    VOID            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    TYPEOF          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    TYPEID          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    BODY            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    RBRACE          reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)
    ELSE            reduce using rule 288 (NonEmptyStatementNoCaseNoDefault -> ExpressionStatement .)


state 297

    (313) StatementList -> Statement .
    (314) StatementList -> Statement . StatementList
    (313) StatementList -> . Statement
    (314) StatementList -> . Statement StatementList
    (273) Statement -> . SEMICOLON
    (274) Statement -> . NonEmptyStatement
    (275) Statement -> . ScopeBlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (307) ScopeBlockStatement -> . BlockStatement
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    RBRACE          reduce using rule 313 (StatementList -> Statement .)
    SEMICOLON       shift and go to state 324
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    LBRACE          shift and go to state 145
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    Statement                      shift and go to state 297
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 300
    RelExpression                  shift and go to state 177
    StatementList                  shift and go to state 478
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 338
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    ScopeBlockStatement            shift and go to state 345
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 298

    (386) WithStatement -> WITH . LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> WITH . LPAREN Symbol RPAREN ScopeStatement

    LPAREN          shift and go to state 479


state 299

    (296) NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .

    SEMICOLON       reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    CASE            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    DEFAULT         reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    LBRACE          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    IDENTIFIER      reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    IF              reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    WHILE           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    DO              reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    FOR             reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    SWITCH          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    FINAL           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    CONTINUE        reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    BREAK           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    RETURN          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    GOTO            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    WITH            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    MIXIN           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    IMPORT          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    STATIC          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    LPAREN          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    ALIAS           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    ENUM            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    EXTERN          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    AUTO            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    CONST           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    IMMUTABLE       reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    FOREACH         reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    FOREACH_REVERSE reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    CLASS           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    UNION           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    AMPERSAND       reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    PLUS_PLUS       reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    MINUS_MINUS     reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    TIMES           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    MINUS           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    PLUS            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    EXCLAMATION     reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    TILDE           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    CAST            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    DOT             reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    THIS            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    NULL            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    TRUE            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    FALSE           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    DOLLAR          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    INUMBER         reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    DNUMBER         reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    LIT_CHAR        reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    LIT_STR         reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    LBRACKET        reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    FUNCTION        reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    NEW             reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    BOOL            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    SHORT           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    USHORT          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    INT             reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    UINT            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    LONG            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    ULONG           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    CHAR            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    FLOAT           reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    VOID            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    TYPEOF          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    TYPEID          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    BODY            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    RBRACE          reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)
    ELSE            reduce using rule 296 (NonEmptyStatementNoCaseNoDefault -> FinalSwitchStatement .)


state 300

    (307) ScopeBlockStatement -> BlockStatement .
    (265) FunctionLiteralBody -> BlockStatement .

  ! reduce/reduce conflict for DOT resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for TIMES resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CASE            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    DEFAULT         reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    LBRACE          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    IDENTIFIER      reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    IF              reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    WHILE           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    DO              reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    FOR             reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    SWITCH          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    FINAL           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    CONTINUE        reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    BREAK           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    RETURN          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    GOTO            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    WITH            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    MIXIN           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    IMPORT          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    STATIC          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    ALIAS           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    ENUM            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    EXTERN          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    AUTO            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    CONST           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    IMMUTABLE       reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    FOREACH         reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    FOREACH_REVERSE reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    CLASS           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    UNION           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    EXCLAMATION     reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    TILDE           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    CAST            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    THIS            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    NULL            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    TRUE            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    FALSE           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    DOLLAR          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    INUMBER         reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    DNUMBER         reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    LIT_CHAR        reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    LIT_STR         reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    LBRACKET        reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    FUNCTION        reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    NEW             reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    BOOL            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    SHORT           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    USHORT          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    INT             reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    UINT            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    LONG            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    ULONG           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    CHAR            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    FLOAT           reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    VOID            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    TYPEOF          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    TYPEID          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    BODY            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    RBRACE          reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    ELSE            reduce using rule 307 (ScopeBlockStatement -> BlockStatement .)
    POWER           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOT             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS_PLUS       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS_MINUS     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LPAREN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    TIMES           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DIV             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MODULO          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LEFT_SHIFT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RIGHT_SHIFT     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    IS_EQ           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    NOT_EQ          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER_EQ      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS_EQ         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    AMPERSAND       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CARET           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PIPE            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_AMPERSAND reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    QUESTION        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_PIPE     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    ASSIGN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_PLUS         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MINUS        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_TIMES        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_DIV          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MODULO       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_AND_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_OR_BIT       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_XOR_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_LEFT         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_RIGHT        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    COMMA           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    SEMICOLON       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)

  ! SEMICOLON       [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! LPAREN          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! AMPERSAND       [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! PLUS_PLUS       [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! MINUS_MINUS     [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! TIMES           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! MINUS           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! PLUS            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! DOT             [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]


state 301

    (20) ImportDeclaration -> IMPORT . ImportList SEMICOLON
    (270) ImportExpression -> IMPORT . LPAREN AssignExpression RPAREN
    (22) ImportList -> . Import
    (23) ImportList -> . ImportBindings
    (24) ImportList -> . Import COMMA ImportList
    (25) Import -> . ModuleFullyQualifiedName
    (26) Import -> . ModuleAliasIdentifier ASSIGN ModuleFullyQualifiedName
    (27) ImportBindings -> . Import COLON ImportBindList
    (14) ModuleFullyQualifiedName -> . ModuleName
    (15) ModuleFullyQualifiedName -> . Packages DOT ModuleName
    (32) ModuleAliasIdentifier -> . IDENTIFIER
    (16) ModuleName -> . IDENTIFIER
    (17) Packages -> . PackageName
    (18) Packages -> . Packages DOT PackageName
    (19) PackageName -> . IDENTIFIER

    LPAREN          shift and go to state 375
    IDENTIFIER      shift and go to state 69

    ModuleFullyQualifiedName       shift and go to state 64
    ImportBindings                 shift and go to state 65
    ModuleAliasIdentifier          shift and go to state 66
    ImportList                     shift and go to state 67
    PackageName                    shift and go to state 68
    ModuleName                     shift and go to state 72
    Import                         shift and go to state 70
    Packages                       shift and go to state 71

state 302

    (382) GotoStatement -> GOTO . IDENTIFIER SEMICOLON
    (383) GotoStatement -> GOTO . DEFAULT SEMICOLON
    (384) GotoStatement -> GOTO . CASE SEMICOLON
    (385) GotoStatement -> GOTO . CASE Expression SEMICOLON

    IDENTIFIER      shift and go to state 482
    DEFAULT         shift and go to state 481
    CASE            shift and go to state 480


state 303

    (420) EnumDeclaration -> ENUM . IDENTIFIER EnumBody
    (421) EnumDeclaration -> ENUM . IDENTIFIER COLON EnumBaseType EnumBody
    (107) StorageClass -> ENUM .
    (431) AnonymousEnumDeclaration -> ENUM . COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> ENUM . LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> ENUM . LBRACE AnonymousEnumMembers RBRACE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 55
    ENUM            reduce using rule 107 (StorageClass -> ENUM .)
    STATIC          reduce using rule 107 (StorageClass -> ENUM .)
    EXTERN          reduce using rule 107 (StorageClass -> ENUM .)
    FINAL           reduce using rule 107 (StorageClass -> ENUM .)
    AUTO            reduce using rule 107 (StorageClass -> ENUM .)
    CONST           reduce using rule 107 (StorageClass -> ENUM .)
    IMMUTABLE       reduce using rule 107 (StorageClass -> ENUM .)
    ALIAS           reduce using rule 107 (StorageClass -> ENUM .)
    IMPORT          reduce using rule 107 (StorageClass -> ENUM .)
    CLASS           reduce using rule 107 (StorageClass -> ENUM .)
    UNION           reduce using rule 107 (StorageClass -> ENUM .)
    DOT             reduce using rule 107 (StorageClass -> ENUM .)
    BOOL            reduce using rule 107 (StorageClass -> ENUM .)
    SHORT           reduce using rule 107 (StorageClass -> ENUM .)
    USHORT          reduce using rule 107 (StorageClass -> ENUM .)
    INT             reduce using rule 107 (StorageClass -> ENUM .)
    UINT            reduce using rule 107 (StorageClass -> ENUM .)
    LONG            reduce using rule 107 (StorageClass -> ENUM .)
    ULONG           reduce using rule 107 (StorageClass -> ENUM .)
    CHAR            reduce using rule 107 (StorageClass -> ENUM .)
    FLOAT           reduce using rule 107 (StorageClass -> ENUM .)
    VOID            reduce using rule 107 (StorageClass -> ENUM .)
    TYPEOF          reduce using rule 107 (StorageClass -> ENUM .)
    COLON           shift and go to state 54
    LBRACE          shift and go to state 53

  ! IDENTIFIER      [ reduce using rule 107 (StorageClass -> ENUM .) ]


state 304

    (312) BlockStatement -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 483


state 305

    (345) Foreach -> FOREACH .

    LPAREN          reduce using rule 345 (Foreach -> FOREACH .)


state 306

    (299) NonEmptyStatementNoCaseNoDefault -> ReturnStatement .

    SEMICOLON       reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    CASE            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    DEFAULT         reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    LBRACE          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    IDENTIFIER      reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    IF              reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    WHILE           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    DO              reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    FOR             reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    SWITCH          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    FINAL           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    CONTINUE        reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    BREAK           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    RETURN          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    GOTO            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    WITH            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    MIXIN           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    IMPORT          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    STATIC          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    LPAREN          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    ALIAS           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    ENUM            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    EXTERN          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    AUTO            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    CONST           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    IMMUTABLE       reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    FOREACH         reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    FOREACH_REVERSE reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    CLASS           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    UNION           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    AMPERSAND       reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    PLUS_PLUS       reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    MINUS_MINUS     reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    TIMES           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    MINUS           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    PLUS            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    EXCLAMATION     reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    TILDE           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    CAST            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    DOT             reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    THIS            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    NULL            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    TRUE            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    FALSE           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    DOLLAR          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    INUMBER         reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    DNUMBER         reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    LIT_CHAR        reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    LIT_STR         reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    LBRACKET        reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    FUNCTION        reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    NEW             reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    BOOL            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    SHORT           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    USHORT          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    INT             reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    UINT            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    LONG            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    ULONG           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    CHAR            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    FLOAT           reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    VOID            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    TYPEOF          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    TYPEID          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    BODY            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    RBRACE          reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)
    ELSE            reduce using rule 299 (NonEmptyStatementNoCaseNoDefault -> ReturnStatement .)


state 307

    (381) ReturnStatement -> RETURN . Expression_opt SEMICOLON
    (377) Expression_opt -> . Expression
    (378) Expression_opt -> . empty
    (151) Expression -> . CommaExpression
    (477) empty -> .
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    SEMICOLON       reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 484
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 485
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    Expression_opt                 shift and go to state 486
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 308

    (343) AggregateForeach -> Foreach . LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN

    LPAREN          shift and go to state 487


state 309

    (374) FinalSwitchStatement -> FINAL . SWITCH LPAREN Expression RPAREN ScopeStatement
    (110) StorageClass -> FINAL .

    SWITCH          shift and go to state 488
    ENUM            reduce using rule 110 (StorageClass -> FINAL .)
    STATIC          reduce using rule 110 (StorageClass -> FINAL .)
    EXTERN          reduce using rule 110 (StorageClass -> FINAL .)
    FINAL           reduce using rule 110 (StorageClass -> FINAL .)
    AUTO            reduce using rule 110 (StorageClass -> FINAL .)
    CONST           reduce using rule 110 (StorageClass -> FINAL .)
    IMMUTABLE       reduce using rule 110 (StorageClass -> FINAL .)
    IDENTIFIER      reduce using rule 110 (StorageClass -> FINAL .)
    ALIAS           reduce using rule 110 (StorageClass -> FINAL .)
    IMPORT          reduce using rule 110 (StorageClass -> FINAL .)
    CLASS           reduce using rule 110 (StorageClass -> FINAL .)
    UNION           reduce using rule 110 (StorageClass -> FINAL .)
    DOT             reduce using rule 110 (StorageClass -> FINAL .)
    BOOL            reduce using rule 110 (StorageClass -> FINAL .)
    SHORT           reduce using rule 110 (StorageClass -> FINAL .)
    USHORT          reduce using rule 110 (StorageClass -> FINAL .)
    INT             reduce using rule 110 (StorageClass -> FINAL .)
    UINT            reduce using rule 110 (StorageClass -> FINAL .)
    LONG            reduce using rule 110 (StorageClass -> FINAL .)
    ULONG           reduce using rule 110 (StorageClass -> FINAL .)
    CHAR            reduce using rule 110 (StorageClass -> FINAL .)
    FLOAT           reduce using rule 110 (StorageClass -> FINAL .)
    VOID            reduce using rule 110 (StorageClass -> FINAL .)
    TYPEOF          reduce using rule 110 (StorageClass -> FINAL .)


state 310

    (346) Foreach -> FOREACH_REVERSE .

    LPAREN          reduce using rule 346 (Foreach -> FOREACH_REVERSE .)


state 311

    (298) NonEmptyStatementNoCaseNoDefault -> BreakStatement .

    SEMICOLON       reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    CASE            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    DEFAULT         reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    LBRACE          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    IDENTIFIER      reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    IF              reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    WHILE           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    DO              reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    FOR             reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    SWITCH          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    FINAL           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    CONTINUE        reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    BREAK           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    RETURN          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    GOTO            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    WITH            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    MIXIN           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    IMPORT          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    STATIC          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    LPAREN          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    ALIAS           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    ENUM            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    EXTERN          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    AUTO            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    CONST           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    IMMUTABLE       reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    FOREACH         reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    FOREACH_REVERSE reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    CLASS           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    UNION           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    AMPERSAND       reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    PLUS_PLUS       reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    MINUS_MINUS     reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    TIMES           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    MINUS           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    PLUS            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    EXCLAMATION     reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    TILDE           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    CAST            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    DOT             reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    THIS            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    NULL            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    TRUE            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    FALSE           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    DOLLAR          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    INUMBER         reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    DNUMBER         reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    LIT_CHAR        reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    LIT_STR         reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    LBRACKET        reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    FUNCTION        reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    NEW             reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    BOOL            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    SHORT           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    USHORT          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    INT             reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    UINT            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    LONG            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    ULONG           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    CHAR            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    FLOAT           reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    VOID            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    TYPEOF          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    TYPEID          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    BODY            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    RBRACE          reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)
    ELSE            reduce using rule 298 (NonEmptyStatementNoCaseNoDefault -> BreakStatement .)


state 312

    (300) NonEmptyStatementNoCaseNoDefault -> GotoStatement .

    SEMICOLON       reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    CASE            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    DEFAULT         reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    LBRACE          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    IDENTIFIER      reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    IF              reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    WHILE           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    DO              reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    FOR             reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    SWITCH          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    FINAL           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    CONTINUE        reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    BREAK           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    RETURN          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    GOTO            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    WITH            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    MIXIN           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    IMPORT          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    STATIC          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    LPAREN          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    ALIAS           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    ENUM            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    EXTERN          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    AUTO            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    CONST           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    IMMUTABLE       reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    FOREACH         reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    FOREACH_REVERSE reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    CLASS           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    UNION           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    AMPERSAND       reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    PLUS_PLUS       reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    MINUS_MINUS     reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    TIMES           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    MINUS           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    PLUS            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    EXCLAMATION     reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    TILDE           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    CAST            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    DOT             reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    THIS            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    NULL            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    TRUE            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    FALSE           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    DOLLAR          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    INUMBER         reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    DNUMBER         reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    LIT_CHAR        reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    LIT_STR         reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    LBRACKET        reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    FUNCTION        reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    NEW             reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    BOOL            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    SHORT           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    USHORT          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    INT             reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    UINT            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    LONG            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    ULONG           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    CHAR            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    FLOAT           reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    VOID            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    TYPEOF          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    TYPEID          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    BODY            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    RBRACE          reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)
    ELSE            reduce using rule 300 (NonEmptyStatementNoCaseNoDefault -> GotoStatement .)


state 313

    (363) CaseStatement -> CASE . ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> CASE . FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (365) FirstExp -> . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 489
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    FirstExp                       shift and go to state 490
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 491

state 314

    (331) ForStatement -> FOR . LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3

    LPAREN          shift and go to state 492


state 315

    (294) NonEmptyStatementNoCaseNoDefault -> ForeachStatement .

    SEMICOLON       reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    CASE            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    DEFAULT         reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    LBRACE          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    IDENTIFIER      reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    IF              reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    WHILE           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    DO              reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    FOR             reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    SWITCH          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    FINAL           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    CONTINUE        reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    BREAK           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    RETURN          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    GOTO            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    WITH            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    MIXIN           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    IMPORT          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    STATIC          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    LPAREN          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    ALIAS           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    ENUM            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    EXTERN          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    AUTO            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    CONST           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    IMMUTABLE       reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    FOREACH         reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    FOREACH_REVERSE reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    CLASS           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    UNION           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    AMPERSAND       reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    PLUS_PLUS       reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    MINUS_MINUS     reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    TIMES           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    MINUS           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    PLUS            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    EXCLAMATION     reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    TILDE           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    CAST            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    DOT             reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    THIS            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    NULL            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    TRUE            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    FALSE           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    DOLLAR          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    INUMBER         reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    DNUMBER         reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    LIT_CHAR        reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    LIT_STR         reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    LBRACKET        reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    FUNCTION        reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    NEW             reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    BOOL            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    SHORT           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    USHORT          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    INT             reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    UINT            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    LONG            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    ULONG           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    CHAR            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    FLOAT           reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    VOID            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    TYPEOF          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    TYPEID          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    BODY            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    RBRACE          reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)
    ELSE            reduce using rule 294 (NonEmptyStatementNoCaseNoDefault -> ForeachStatement .)


state 316

    (302) NonEmptyStatementNoCaseNoDefault -> MixinStatement .

    SEMICOLON       reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    CASE            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    DEFAULT         reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    LBRACE          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    IDENTIFIER      reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    IF              reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    WHILE           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    DO              reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    FOR             reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    SWITCH          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    FINAL           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    CONTINUE        reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    BREAK           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    RETURN          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    GOTO            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    WITH            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    MIXIN           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    IMPORT          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    STATIC          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    LPAREN          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    ALIAS           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    ENUM            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    EXTERN          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    AUTO            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    CONST           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    IMMUTABLE       reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    FOREACH         reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    FOREACH_REVERSE reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    CLASS           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    UNION           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    AMPERSAND       reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    PLUS_PLUS       reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    MINUS_MINUS     reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    TIMES           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    MINUS           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    PLUS            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    EXCLAMATION     reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    TILDE           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    CAST            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    DOT             reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    THIS            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    NULL            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    TRUE            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    FALSE           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    DOLLAR          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    INUMBER         reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    DNUMBER         reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    LIT_CHAR        reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    LIT_STR         reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    LBRACKET        reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    FUNCTION        reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    NEW             reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    BOOL            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    SHORT           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    USHORT          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    INT             reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    UINT            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    LONG            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    ULONG           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    CHAR            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    FLOAT           reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    VOID            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    TYPEOF          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    TYPEID          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    BODY            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    RBRACE          reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)
    ELSE            reduce using rule 302 (NonEmptyStatementNoCaseNoDefault -> MixinStatement .)


state 317

    (379) ContinueStatement -> CONTINUE . IDENTIFIER_opt SEMICOLON
    (375) IDENTIFIER_opt -> . IDENTIFIER
    (376) IDENTIFIER_opt -> . empty
    (477) empty -> .

    IDENTIFIER      shift and go to state 494
    SEMICOLON       reduce using rule 477 (empty -> .)

    IDENTIFIER_opt                 shift and go to state 493
    empty                          shift and go to state 495

state 318

    (388) MixinStatement -> MIXIN . LPAREN AssignExpression RPAREN SEMICOLON
    (269) MixinExpression -> MIXIN . LPAREN AssignExpression RPAREN

    LPAREN          shift and go to state 496


state 319

    (361) ForeachRangeStatement -> RangeForeach . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 498
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 320

    (367) DefaultStatement -> DEFAULT . COLON ScopeStatementList

    COLON           shift and go to state 500


state 321

    (329) WhileStatement -> WHILE . LPAREN Expression RPAREN ScopeStatement

    LPAREN          shift and go to state 501


state 322

    (303) NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .

    SEMICOLON       reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    CASE            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    DEFAULT         reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    LBRACE          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    IDENTIFIER      reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    IF              reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    WHILE           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    DO              reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    FOR             reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    SWITCH          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    FINAL           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    CONTINUE        reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    BREAK           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    RETURN          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    GOTO            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    WITH            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    MIXIN           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    IMPORT          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    STATIC          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    LPAREN          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    ALIAS           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    ENUM            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    EXTERN          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    AUTO            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    CONST           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    IMMUTABLE       reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    FOREACH         reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    FOREACH_REVERSE reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    CLASS           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    UNION           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    AMPERSAND       reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    PLUS_PLUS       reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    MINUS_MINUS     reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    TIMES           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    MINUS           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    PLUS            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    EXCLAMATION     reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    TILDE           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    CAST            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    DOT             reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    THIS            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    NULL            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    TRUE            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    FALSE           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    DOLLAR          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    INUMBER         reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    DNUMBER         reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    LIT_CHAR        reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    LIT_STR         reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    LBRACKET        reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    FUNCTION        reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    NEW             reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    BOOL            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    SHORT           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    USHORT          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    INT             reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    UINT            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    LONG            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    ULONG           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    CHAR            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    FLOAT           reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    VOID            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    TYPEOF          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    TYPEID          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    BODY            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    RBRACE          reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)
    ELSE            reduce using rule 303 (NonEmptyStatementNoCaseNoDefault -> ForeachRangeStatement .)


state 323

    (293) NonEmptyStatementNoCaseNoDefault -> ForStatement .

    SEMICOLON       reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    CASE            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    DEFAULT         reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    LBRACE          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    IDENTIFIER      reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    IF              reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    WHILE           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    DO              reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    FOR             reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    SWITCH          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    FINAL           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    CONTINUE        reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    BREAK           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    RETURN          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    GOTO            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    WITH            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    MIXIN           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    IMPORT          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    STATIC          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    LPAREN          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    ALIAS           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    ENUM            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    EXTERN          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    AUTO            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    CONST           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    IMMUTABLE       reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    FOREACH         reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    FOREACH_REVERSE reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    CLASS           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    UNION           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    AMPERSAND       reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    PLUS_PLUS       reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    MINUS_MINUS     reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    TIMES           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    MINUS           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    PLUS            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    EXCLAMATION     reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    TILDE           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    CAST            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    DOT             reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    THIS            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    NULL            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    TRUE            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    FALSE           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    DOLLAR          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    INUMBER         reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    DNUMBER         reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    LIT_CHAR        reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    LIT_STR         reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    LBRACKET        reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    FUNCTION        reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    NEW             reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    BOOL            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    SHORT           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    USHORT          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    INT             reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    UINT            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    LONG            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    ULONG           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    CHAR            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    FLOAT           reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    VOID            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    TYPEOF          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    TYPEID          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    BODY            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    RBRACE          reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)
    ELSE            reduce using rule 293 (NonEmptyStatementNoCaseNoDefault -> ForStatement .)


state 324

    (273) Statement -> SEMICOLON .

    SEMICOLON       reduce using rule 273 (Statement -> SEMICOLON .)
    CASE            reduce using rule 273 (Statement -> SEMICOLON .)
    DEFAULT         reduce using rule 273 (Statement -> SEMICOLON .)
    LBRACE          reduce using rule 273 (Statement -> SEMICOLON .)
    IDENTIFIER      reduce using rule 273 (Statement -> SEMICOLON .)
    IF              reduce using rule 273 (Statement -> SEMICOLON .)
    WHILE           reduce using rule 273 (Statement -> SEMICOLON .)
    DO              reduce using rule 273 (Statement -> SEMICOLON .)
    FOR             reduce using rule 273 (Statement -> SEMICOLON .)
    SWITCH          reduce using rule 273 (Statement -> SEMICOLON .)
    FINAL           reduce using rule 273 (Statement -> SEMICOLON .)
    CONTINUE        reduce using rule 273 (Statement -> SEMICOLON .)
    BREAK           reduce using rule 273 (Statement -> SEMICOLON .)
    RETURN          reduce using rule 273 (Statement -> SEMICOLON .)
    GOTO            reduce using rule 273 (Statement -> SEMICOLON .)
    WITH            reduce using rule 273 (Statement -> SEMICOLON .)
    MIXIN           reduce using rule 273 (Statement -> SEMICOLON .)
    IMPORT          reduce using rule 273 (Statement -> SEMICOLON .)
    STATIC          reduce using rule 273 (Statement -> SEMICOLON .)
    LPAREN          reduce using rule 273 (Statement -> SEMICOLON .)
    ALIAS           reduce using rule 273 (Statement -> SEMICOLON .)
    ENUM            reduce using rule 273 (Statement -> SEMICOLON .)
    EXTERN          reduce using rule 273 (Statement -> SEMICOLON .)
    AUTO            reduce using rule 273 (Statement -> SEMICOLON .)
    CONST           reduce using rule 273 (Statement -> SEMICOLON .)
    IMMUTABLE       reduce using rule 273 (Statement -> SEMICOLON .)
    FOREACH         reduce using rule 273 (Statement -> SEMICOLON .)
    FOREACH_REVERSE reduce using rule 273 (Statement -> SEMICOLON .)
    CLASS           reduce using rule 273 (Statement -> SEMICOLON .)
    UNION           reduce using rule 273 (Statement -> SEMICOLON .)
    AMPERSAND       reduce using rule 273 (Statement -> SEMICOLON .)
    PLUS_PLUS       reduce using rule 273 (Statement -> SEMICOLON .)
    MINUS_MINUS     reduce using rule 273 (Statement -> SEMICOLON .)
    TIMES           reduce using rule 273 (Statement -> SEMICOLON .)
    MINUS           reduce using rule 273 (Statement -> SEMICOLON .)
    PLUS            reduce using rule 273 (Statement -> SEMICOLON .)
    EXCLAMATION     reduce using rule 273 (Statement -> SEMICOLON .)
    TILDE           reduce using rule 273 (Statement -> SEMICOLON .)
    CAST            reduce using rule 273 (Statement -> SEMICOLON .)
    DOT             reduce using rule 273 (Statement -> SEMICOLON .)
    THIS            reduce using rule 273 (Statement -> SEMICOLON .)
    NULL            reduce using rule 273 (Statement -> SEMICOLON .)
    TRUE            reduce using rule 273 (Statement -> SEMICOLON .)
    FALSE           reduce using rule 273 (Statement -> SEMICOLON .)
    DOLLAR          reduce using rule 273 (Statement -> SEMICOLON .)
    INUMBER         reduce using rule 273 (Statement -> SEMICOLON .)
    DNUMBER         reduce using rule 273 (Statement -> SEMICOLON .)
    LIT_CHAR        reduce using rule 273 (Statement -> SEMICOLON .)
    LIT_STR         reduce using rule 273 (Statement -> SEMICOLON .)
    LBRACKET        reduce using rule 273 (Statement -> SEMICOLON .)
    FUNCTION        reduce using rule 273 (Statement -> SEMICOLON .)
    NEW             reduce using rule 273 (Statement -> SEMICOLON .)
    BOOL            reduce using rule 273 (Statement -> SEMICOLON .)
    SHORT           reduce using rule 273 (Statement -> SEMICOLON .)
    USHORT          reduce using rule 273 (Statement -> SEMICOLON .)
    INT             reduce using rule 273 (Statement -> SEMICOLON .)
    UINT            reduce using rule 273 (Statement -> SEMICOLON .)
    LONG            reduce using rule 273 (Statement -> SEMICOLON .)
    ULONG           reduce using rule 273 (Statement -> SEMICOLON .)
    CHAR            reduce using rule 273 (Statement -> SEMICOLON .)
    FLOAT           reduce using rule 273 (Statement -> SEMICOLON .)
    VOID            reduce using rule 273 (Statement -> SEMICOLON .)
    TYPEOF          reduce using rule 273 (Statement -> SEMICOLON .)
    TYPEID          reduce using rule 273 (Statement -> SEMICOLON .)
    BODY            reduce using rule 273 (Statement -> SEMICOLON .)
    RBRACE          reduce using rule 273 (Statement -> SEMICOLON .)


state 325

    (297) NonEmptyStatementNoCaseNoDefault -> ContinueStatement .

    SEMICOLON       reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    CASE            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    DEFAULT         reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    LBRACE          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    IDENTIFIER      reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    IF              reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    WHILE           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    DO              reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    FOR             reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    SWITCH          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    FINAL           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    CONTINUE        reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    BREAK           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    RETURN          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    GOTO            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    WITH            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    MIXIN           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    IMPORT          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    STATIC          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    LPAREN          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    ALIAS           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    ENUM            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    EXTERN          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    AUTO            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    CONST           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    IMMUTABLE       reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    FOREACH         reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    FOREACH_REVERSE reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    CLASS           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    UNION           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    AMPERSAND       reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    PLUS_PLUS       reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    MINUS_MINUS     reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    TIMES           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    MINUS           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    PLUS            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    EXCLAMATION     reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    TILDE           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    CAST            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    DOT             reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    THIS            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    NULL            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    TRUE            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    FALSE           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    DOLLAR          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    INUMBER         reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    DNUMBER         reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    LIT_CHAR        reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    LIT_STR         reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    LBRACKET        reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    FUNCTION        reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    NEW             reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    BOOL            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    SHORT           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    USHORT          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    INT             reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    UINT            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    LONG            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    ULONG           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    CHAR            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    FLOAT           reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    VOID            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    TYPEOF          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    TYPEID          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    BODY            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    RBRACE          reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)
    ELSE            reduce using rule 297 (NonEmptyStatementNoCaseNoDefault -> ContinueStatement .)


state 326

    (304) NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .
    (39) Declaration -> ImportDeclaration .

  ! reduce/reduce conflict for AMPERSAND resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for TIMES resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for MINUS resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for PLUS resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for EXCLAMATION resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for LPAREN resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for TILDE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for CAST resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for DOT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for THIS resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for NULL resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for TRUE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for FALSE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for DOLLAR resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for INUMBER resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for DNUMBER resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for LIT_CHAR resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for LIT_STR resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for MIXIN resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for IMPORT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for NEW resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for BOOL resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for SHORT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for USHORT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for INT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for UINT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for LONG resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for ULONG resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for CHAR resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for FLOAT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for VOID resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for TYPEID resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for LBRACE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for BODY resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for CASE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for IF resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for DO resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for FOR resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for SWITCH resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for FINAL resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for BREAK resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for RETURN resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for GOTO resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for WITH resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for STATIC resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for ALIAS resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for ENUM resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for EXTERN resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for AUTO resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for CONST resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for IMMUTABLE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for FOREACH resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for FOREACH_REVERSE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for CLASS resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for UNION resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for RBRACE resolved using rule 39 (Declaration -> ImportDeclaration .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (Declaration -> ImportDeclaration .)
    AMPERSAND       reduce using rule 39 (Declaration -> ImportDeclaration .)
    PLUS_PLUS       reduce using rule 39 (Declaration -> ImportDeclaration .)
    MINUS_MINUS     reduce using rule 39 (Declaration -> ImportDeclaration .)
    TIMES           reduce using rule 39 (Declaration -> ImportDeclaration .)
    MINUS           reduce using rule 39 (Declaration -> ImportDeclaration .)
    PLUS            reduce using rule 39 (Declaration -> ImportDeclaration .)
    EXCLAMATION     reduce using rule 39 (Declaration -> ImportDeclaration .)
    LPAREN          reduce using rule 39 (Declaration -> ImportDeclaration .)
    TILDE           reduce using rule 39 (Declaration -> ImportDeclaration .)
    CAST            reduce using rule 39 (Declaration -> ImportDeclaration .)
    IDENTIFIER      reduce using rule 39 (Declaration -> ImportDeclaration .)
    DOT             reduce using rule 39 (Declaration -> ImportDeclaration .)
    THIS            reduce using rule 39 (Declaration -> ImportDeclaration .)
    NULL            reduce using rule 39 (Declaration -> ImportDeclaration .)
    TRUE            reduce using rule 39 (Declaration -> ImportDeclaration .)
    FALSE           reduce using rule 39 (Declaration -> ImportDeclaration .)
    DOLLAR          reduce using rule 39 (Declaration -> ImportDeclaration .)
    INUMBER         reduce using rule 39 (Declaration -> ImportDeclaration .)
    DNUMBER         reduce using rule 39 (Declaration -> ImportDeclaration .)
    LIT_CHAR        reduce using rule 39 (Declaration -> ImportDeclaration .)
    LIT_STR         reduce using rule 39 (Declaration -> ImportDeclaration .)
    LBRACKET        reduce using rule 39 (Declaration -> ImportDeclaration .)
    FUNCTION        reduce using rule 39 (Declaration -> ImportDeclaration .)
    MIXIN           reduce using rule 39 (Declaration -> ImportDeclaration .)
    IMPORT          reduce using rule 39 (Declaration -> ImportDeclaration .)
    NEW             reduce using rule 39 (Declaration -> ImportDeclaration .)
    BOOL            reduce using rule 39 (Declaration -> ImportDeclaration .)
    SHORT           reduce using rule 39 (Declaration -> ImportDeclaration .)
    USHORT          reduce using rule 39 (Declaration -> ImportDeclaration .)
    INT             reduce using rule 39 (Declaration -> ImportDeclaration .)
    UINT            reduce using rule 39 (Declaration -> ImportDeclaration .)
    LONG            reduce using rule 39 (Declaration -> ImportDeclaration .)
    ULONG           reduce using rule 39 (Declaration -> ImportDeclaration .)
    CHAR            reduce using rule 39 (Declaration -> ImportDeclaration .)
    FLOAT           reduce using rule 39 (Declaration -> ImportDeclaration .)
    VOID            reduce using rule 39 (Declaration -> ImportDeclaration .)
    TYPEOF          reduce using rule 39 (Declaration -> ImportDeclaration .)
    TYPEID          reduce using rule 39 (Declaration -> ImportDeclaration .)
    LBRACE          reduce using rule 39 (Declaration -> ImportDeclaration .)
    BODY            reduce using rule 39 (Declaration -> ImportDeclaration .)
    SEMICOLON       reduce using rule 39 (Declaration -> ImportDeclaration .)
    CASE            reduce using rule 39 (Declaration -> ImportDeclaration .)
    DEFAULT         reduce using rule 39 (Declaration -> ImportDeclaration .)
    IF              reduce using rule 39 (Declaration -> ImportDeclaration .)
    WHILE           reduce using rule 39 (Declaration -> ImportDeclaration .)
    DO              reduce using rule 39 (Declaration -> ImportDeclaration .)
    FOR             reduce using rule 39 (Declaration -> ImportDeclaration .)
    SWITCH          reduce using rule 39 (Declaration -> ImportDeclaration .)
    FINAL           reduce using rule 39 (Declaration -> ImportDeclaration .)
    CONTINUE        reduce using rule 39 (Declaration -> ImportDeclaration .)
    BREAK           reduce using rule 39 (Declaration -> ImportDeclaration .)
    RETURN          reduce using rule 39 (Declaration -> ImportDeclaration .)
    GOTO            reduce using rule 39 (Declaration -> ImportDeclaration .)
    WITH            reduce using rule 39 (Declaration -> ImportDeclaration .)
    STATIC          reduce using rule 39 (Declaration -> ImportDeclaration .)
    ALIAS           reduce using rule 39 (Declaration -> ImportDeclaration .)
    ENUM            reduce using rule 39 (Declaration -> ImportDeclaration .)
    EXTERN          reduce using rule 39 (Declaration -> ImportDeclaration .)
    AUTO            reduce using rule 39 (Declaration -> ImportDeclaration .)
    CONST           reduce using rule 39 (Declaration -> ImportDeclaration .)
    IMMUTABLE       reduce using rule 39 (Declaration -> ImportDeclaration .)
    FOREACH         reduce using rule 39 (Declaration -> ImportDeclaration .)
    FOREACH_REVERSE reduce using rule 39 (Declaration -> ImportDeclaration .)
    CLASS           reduce using rule 39 (Declaration -> ImportDeclaration .)
    UNION           reduce using rule 39 (Declaration -> ImportDeclaration .)
    RBRACE          reduce using rule 39 (Declaration -> ImportDeclaration .)
    ELSE            reduce using rule 39 (Declaration -> ImportDeclaration .)

  ! SEMICOLON       [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! CASE            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! DEFAULT         [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! LBRACE          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! IDENTIFIER      [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! IF              [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! WHILE           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! DO              [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! FOR             [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! SWITCH          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! FINAL           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! CONTINUE        [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! BREAK           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! RETURN          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! GOTO            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! WITH            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! MIXIN           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! IMPORT          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! STATIC          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! LPAREN          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! ALIAS           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! ENUM            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! EXTERN          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! AUTO            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! CONST           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! IMMUTABLE       [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! FOREACH         [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! FOREACH_REVERSE [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! CLASS           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! UNION           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! AMPERSAND       [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! PLUS_PLUS       [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! MINUS_MINUS     [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! TIMES           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! MINUS           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! PLUS            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! EXCLAMATION     [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! TILDE           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! CAST            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! DOT             [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! THIS            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! NULL            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! TRUE            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! FALSE           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! DOLLAR          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! INUMBER         [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! DNUMBER         [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! LIT_CHAR        [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! LIT_STR         [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! LBRACKET        [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! FUNCTION        [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! NEW             [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! BOOL            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! SHORT           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! USHORT          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! INT             [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! UINT            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! LONG            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! ULONG           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! CHAR            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! FLOAT           [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! VOID            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! TYPEOF          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! TYPEID          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! BODY            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! RBRACE          [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]
  ! ELSE            [ reduce using rule 304 (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration .) ]


state 327

    (295) NonEmptyStatementNoCaseNoDefault -> SwitchStatement .

    SEMICOLON       reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    CASE            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    DEFAULT         reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    LBRACE          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    IDENTIFIER      reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    IF              reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    WHILE           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    DO              reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    FOR             reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    SWITCH          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    FINAL           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    CONTINUE        reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    BREAK           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    RETURN          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    GOTO            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    WITH            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    MIXIN           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    IMPORT          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    STATIC          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    LPAREN          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    ALIAS           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    ENUM            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    EXTERN          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    AUTO            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    CONST           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    IMMUTABLE       reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    FOREACH         reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    FOREACH_REVERSE reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    CLASS           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    UNION           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    AMPERSAND       reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    PLUS_PLUS       reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    MINUS_MINUS     reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    TIMES           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    MINUS           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    PLUS            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    EXCLAMATION     reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    TILDE           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    CAST            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    DOT             reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    THIS            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    NULL            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    TRUE            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    FALSE           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    DOLLAR          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    INUMBER         reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    DNUMBER         reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    LIT_CHAR        reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    LIT_STR         reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    LBRACKET        reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    FUNCTION        reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    NEW             reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    BOOL            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    SHORT           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    USHORT          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    INT             reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    UINT            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    LONG            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    ULONG           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    CHAR            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    FLOAT           reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    VOID            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    TYPEOF          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    TYPEID          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    BODY            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    RBRACE          reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)
    ELSE            reduce using rule 295 (NonEmptyStatementNoCaseNoDefault -> SwitchStatement .)


state 328

    (362) SwitchStatement -> SWITCH . LPAREN Expression RPAREN ScopeStatement

    LPAREN          shift and go to state 502


state 329

    (316) DeclarationStatement -> Declaration .

    SEMICOLON       reduce using rule 316 (DeclarationStatement -> Declaration .)
    CASE            reduce using rule 316 (DeclarationStatement -> Declaration .)
    DEFAULT         reduce using rule 316 (DeclarationStatement -> Declaration .)
    LBRACE          reduce using rule 316 (DeclarationStatement -> Declaration .)
    IDENTIFIER      reduce using rule 316 (DeclarationStatement -> Declaration .)
    IF              reduce using rule 316 (DeclarationStatement -> Declaration .)
    WHILE           reduce using rule 316 (DeclarationStatement -> Declaration .)
    DO              reduce using rule 316 (DeclarationStatement -> Declaration .)
    FOR             reduce using rule 316 (DeclarationStatement -> Declaration .)
    SWITCH          reduce using rule 316 (DeclarationStatement -> Declaration .)
    FINAL           reduce using rule 316 (DeclarationStatement -> Declaration .)
    CONTINUE        reduce using rule 316 (DeclarationStatement -> Declaration .)
    BREAK           reduce using rule 316 (DeclarationStatement -> Declaration .)
    RETURN          reduce using rule 316 (DeclarationStatement -> Declaration .)
    GOTO            reduce using rule 316 (DeclarationStatement -> Declaration .)
    WITH            reduce using rule 316 (DeclarationStatement -> Declaration .)
    MIXIN           reduce using rule 316 (DeclarationStatement -> Declaration .)
    IMPORT          reduce using rule 316 (DeclarationStatement -> Declaration .)
    STATIC          reduce using rule 316 (DeclarationStatement -> Declaration .)
    LPAREN          reduce using rule 316 (DeclarationStatement -> Declaration .)
    ALIAS           reduce using rule 316 (DeclarationStatement -> Declaration .)
    ENUM            reduce using rule 316 (DeclarationStatement -> Declaration .)
    EXTERN          reduce using rule 316 (DeclarationStatement -> Declaration .)
    AUTO            reduce using rule 316 (DeclarationStatement -> Declaration .)
    CONST           reduce using rule 316 (DeclarationStatement -> Declaration .)
    IMMUTABLE       reduce using rule 316 (DeclarationStatement -> Declaration .)
    FOREACH         reduce using rule 316 (DeclarationStatement -> Declaration .)
    FOREACH_REVERSE reduce using rule 316 (DeclarationStatement -> Declaration .)
    CLASS           reduce using rule 316 (DeclarationStatement -> Declaration .)
    UNION           reduce using rule 316 (DeclarationStatement -> Declaration .)
    AMPERSAND       reduce using rule 316 (DeclarationStatement -> Declaration .)
    PLUS_PLUS       reduce using rule 316 (DeclarationStatement -> Declaration .)
    MINUS_MINUS     reduce using rule 316 (DeclarationStatement -> Declaration .)
    TIMES           reduce using rule 316 (DeclarationStatement -> Declaration .)
    MINUS           reduce using rule 316 (DeclarationStatement -> Declaration .)
    PLUS            reduce using rule 316 (DeclarationStatement -> Declaration .)
    EXCLAMATION     reduce using rule 316 (DeclarationStatement -> Declaration .)
    TILDE           reduce using rule 316 (DeclarationStatement -> Declaration .)
    CAST            reduce using rule 316 (DeclarationStatement -> Declaration .)
    DOT             reduce using rule 316 (DeclarationStatement -> Declaration .)
    THIS            reduce using rule 316 (DeclarationStatement -> Declaration .)
    NULL            reduce using rule 316 (DeclarationStatement -> Declaration .)
    TRUE            reduce using rule 316 (DeclarationStatement -> Declaration .)
    FALSE           reduce using rule 316 (DeclarationStatement -> Declaration .)
    DOLLAR          reduce using rule 316 (DeclarationStatement -> Declaration .)
    INUMBER         reduce using rule 316 (DeclarationStatement -> Declaration .)
    DNUMBER         reduce using rule 316 (DeclarationStatement -> Declaration .)
    LIT_CHAR        reduce using rule 316 (DeclarationStatement -> Declaration .)
    LIT_STR         reduce using rule 316 (DeclarationStatement -> Declaration .)
    LBRACKET        reduce using rule 316 (DeclarationStatement -> Declaration .)
    FUNCTION        reduce using rule 316 (DeclarationStatement -> Declaration .)
    NEW             reduce using rule 316 (DeclarationStatement -> Declaration .)
    BOOL            reduce using rule 316 (DeclarationStatement -> Declaration .)
    SHORT           reduce using rule 316 (DeclarationStatement -> Declaration .)
    USHORT          reduce using rule 316 (DeclarationStatement -> Declaration .)
    INT             reduce using rule 316 (DeclarationStatement -> Declaration .)
    UINT            reduce using rule 316 (DeclarationStatement -> Declaration .)
    LONG            reduce using rule 316 (DeclarationStatement -> Declaration .)
    ULONG           reduce using rule 316 (DeclarationStatement -> Declaration .)
    CHAR            reduce using rule 316 (DeclarationStatement -> Declaration .)
    FLOAT           reduce using rule 316 (DeclarationStatement -> Declaration .)
    VOID            reduce using rule 316 (DeclarationStatement -> Declaration .)
    TYPEOF          reduce using rule 316 (DeclarationStatement -> Declaration .)
    TYPEID          reduce using rule 316 (DeclarationStatement -> Declaration .)
    BODY            reduce using rule 316 (DeclarationStatement -> Declaration .)
    RBRACE          reduce using rule 316 (DeclarationStatement -> Declaration .)
    ELSE            reduce using rule 316 (DeclarationStatement -> Declaration .)


state 330

    (286) NonEmptyStatement -> DefaultStatement .

    SEMICOLON       reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    CASE            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    DEFAULT         reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    LBRACE          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    IDENTIFIER      reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    IF              reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    WHILE           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    DO              reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    FOR             reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    SWITCH          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    FINAL           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    CONTINUE        reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    BREAK           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    RETURN          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    GOTO            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    WITH            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    MIXIN           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    IMPORT          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    STATIC          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    LPAREN          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    ALIAS           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    ENUM            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    EXTERN          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    AUTO            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    CONST           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    IMMUTABLE       reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    FOREACH         reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    FOREACH_REVERSE reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    CLASS           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    UNION           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    AMPERSAND       reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    PLUS_PLUS       reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    MINUS_MINUS     reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    TIMES           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    MINUS           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    PLUS            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    EXCLAMATION     reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    TILDE           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    CAST            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    DOT             reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    THIS            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    NULL            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    TRUE            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    FALSE           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    DOLLAR          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    INUMBER         reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    DNUMBER         reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    LIT_CHAR        reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    LIT_STR         reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    LBRACKET        reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    FUNCTION        reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    NEW             reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    BOOL            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    SHORT           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    USHORT          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    INT             reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    UINT            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    LONG            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    ULONG           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    CHAR            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    FLOAT           reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    VOID            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    TYPEOF          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    TYPEID          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    BODY            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    RBRACE          reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)
    ELSE            reduce using rule 286 (NonEmptyStatement -> DefaultStatement .)


state 331

    (308) LabeledStatement -> IDENTIFIER . COLON
    (309) LabeledStatement -> IDENTIFIER . COLON NoScopeStatement
    (310) LabeledStatement -> IDENTIFIER . COLON Statement
    (233) PrimaryExpression -> IDENTIFIER .
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (256) ArrayLiteral -> IDENTIFIER . LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> IDENTIFIER . LBRACKET AssignExpression RBRACKET

  ! reduce/reduce conflict for POWER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LEFT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for IS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for NOT_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for CARET resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for QUESTION resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_AND_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_OR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_XOR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_LEFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_RIGHT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! shift/reduce conflict for DOT resolved as shift
    COLON           shift and go to state 503
    POWER           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS_PLUS       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS_MINUS     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DIV             reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MODULO          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IS_EQ           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    NOT_EQ          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER_EQ      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS_EQ         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    AMPERSAND       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    CARET           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PIPE            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    QUESTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_PLUS         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MINUS        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_TIMES        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_DIV          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MODULO       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_LEFT         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_RIGHT        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COMMA           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    SEMICOLON       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 423

  ! POWER           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS_PLUS       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS_MINUS     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DIV             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MODULO          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LEFT_SHIFT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RIGHT_SHIFT     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! IS_EQ           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! NOT_EQ          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER_EQ      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS_EQ         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! AMPERSAND       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! CARET           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PIPE            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_AMPERSAND [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! QUESTION        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_PIPE     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! ASSIGN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_PLUS         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MINUS        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_TIMES        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_DIV          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MODULO       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_AND_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_OR_BIT       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_XOR_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_LEFT         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_RIGHT        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 332

    (284) NonEmptyStatement -> CaseStatement .

    SEMICOLON       reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    CASE            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    DEFAULT         reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    LBRACE          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    IDENTIFIER      reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    IF              reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    WHILE           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    DO              reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    FOR             reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    SWITCH          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    FINAL           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    CONTINUE        reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    BREAK           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    RETURN          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    GOTO            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    WITH            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    MIXIN           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    IMPORT          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    STATIC          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    LPAREN          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    ALIAS           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    ENUM            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    EXTERN          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    AUTO            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    CONST           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    IMMUTABLE       reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    FOREACH         reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    FOREACH_REVERSE reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    CLASS           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    UNION           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    AMPERSAND       reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    PLUS_PLUS       reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    MINUS_MINUS     reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    TIMES           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    MINUS           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    PLUS            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    EXCLAMATION     reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    TILDE           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    CAST            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    DOT             reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    THIS            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    NULL            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    TRUE            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    FALSE           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    DOLLAR          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    INUMBER         reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    DNUMBER         reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    LIT_CHAR        reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    LIT_STR         reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    LBRACKET        reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    FUNCTION        reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    NEW             reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    BOOL            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    SHORT           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    USHORT          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    INT             reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    UINT            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    LONG            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    ULONG           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    CHAR            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    FLOAT           reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    VOID            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    TYPEOF          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    TYPEID          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    BODY            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    RBRACE          reduce using rule 284 (NonEmptyStatement -> CaseStatement .)
    ELSE            reduce using rule 284 (NonEmptyStatement -> CaseStatement .)


state 333

    (283) NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .

    SEMICOLON       reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    CASE            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    DEFAULT         reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    LBRACE          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    IDENTIFIER      reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    IF              reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    WHILE           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    DO              reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    FOR             reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    SWITCH          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    FINAL           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    CONTINUE        reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    BREAK           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    RETURN          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    GOTO            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    WITH            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    MIXIN           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    IMPORT          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    STATIC          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    LPAREN          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    ALIAS           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    ENUM            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    EXTERN          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    AUTO            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    CONST           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    IMMUTABLE       reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    FOREACH         reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    FOREACH_REVERSE reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    CLASS           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    UNION           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    AMPERSAND       reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    PLUS_PLUS       reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    MINUS_MINUS     reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    TIMES           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    MINUS           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    PLUS            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    EXCLAMATION     reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    TILDE           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    CAST            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    DOT             reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    THIS            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    NULL            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    TRUE            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    FALSE           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    DOLLAR          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    INUMBER         reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    DNUMBER         reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    LIT_CHAR        reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    LIT_STR         reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    LBRACKET        reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    FUNCTION        reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    NEW             reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    BOOL            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    SHORT           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    USHORT          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    INT             reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    UINT            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    LONG            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    ULONG           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    CHAR            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    FLOAT           reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    VOID            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    TYPEOF          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    TYPEID          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    BODY            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    RBRACE          reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)
    ELSE            reduce using rule 283 (NonEmptyStatement -> NonEmptyStatementNoCaseNoDefault .)


state 334

    (292) NonEmptyStatementNoCaseNoDefault -> DoStatement .

    SEMICOLON       reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    CASE            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    DEFAULT         reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    LBRACE          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    IDENTIFIER      reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    IF              reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    WHILE           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    DO              reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    FOR             reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    SWITCH          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    FINAL           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    CONTINUE        reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    BREAK           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    RETURN          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    GOTO            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    WITH            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    MIXIN           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    IMPORT          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    STATIC          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    LPAREN          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    ALIAS           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    ENUM            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    EXTERN          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    AUTO            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    CONST           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    IMMUTABLE       reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    FOREACH         reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    FOREACH_REVERSE reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    CLASS           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    UNION           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    AMPERSAND       reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    PLUS_PLUS       reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    MINUS_MINUS     reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    TIMES           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    MINUS           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    PLUS            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    EXCLAMATION     reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    TILDE           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    CAST            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    DOT             reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    THIS            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    NULL            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    TRUE            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    FALSE           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    DOLLAR          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    INUMBER         reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    DNUMBER         reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    LIT_CHAR        reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    LIT_STR         reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    LBRACKET        reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    FUNCTION        reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    NEW             reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    BOOL            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    SHORT           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    USHORT          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    INT             reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    UINT            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    LONG            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    ULONG           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    CHAR            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    FLOAT           reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    VOID            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    TYPEOF          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    TYPEID          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    BODY            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    RBRACE          reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)
    ELSE            reduce using rule 292 (NonEmptyStatementNoCaseNoDefault -> DoStatement .)


state 335

    (317) DeclarationStatement -> StorageClasses . Declaration
    (131) StorageClasses_opt -> StorageClasses .
    (442) AutoFuncDeclaration -> StorageClasses . IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! reduce/reduce conflict for DOT resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for BOOL resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for SHORT resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for USHORT resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for INT resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for UINT resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for LONG resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for ULONG resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for CHAR resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for FLOAT resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! reduce/reduce conflict for VOID resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! reduce/reduce conflict for TYPEOF resolved using rule 131 (StorageClasses_opt -> StorageClasses .)
    DOT             reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    BOOL            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    SHORT           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    USHORT          reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    INT             reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    UINT            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    LONG            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    ULONG           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    CHAR            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    FLOAT           reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    VOID            reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    TYPEOF          reduce using rule 131 (StorageClasses_opt -> StorageClasses .)
    IDENTIFIER      shift and go to state 29
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 18
    IMPORT          shift and go to state 27
    STATIC          shift and go to state 5
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    EXTERN          shift and go to state 7
    FINAL           shift and go to state 15
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21

  ! IDENTIFIER      [ reduce using rule 131 (StorageClasses_opt -> StorageClasses .) ]
  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ reduce using rule 477 (empty -> .) ]
  ! SHORT           [ reduce using rule 477 (empty -> .) ]
  ! USHORT          [ reduce using rule 477 (empty -> .) ]
  ! INT             [ reduce using rule 477 (empty -> .) ]
  ! UINT            [ reduce using rule 477 (empty -> .) ]
  ! LONG            [ reduce using rule 477 (empty -> .) ]
  ! ULONG           [ reduce using rule 477 (empty -> .) ]
  ! CHAR            [ reduce using rule 477 (empty -> .) ]
  ! FLOAT           [ reduce using rule 477 (empty -> .) ]
  ! VOID            [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 477 (empty -> .) ]

    AggregateDeclaration           shift and go to state 4
    FuncDeclaration                shift and go to state 6
    StorageClasses_opt             shift and go to state 9
    ImportDeclaration              shift and go to state 10
    StorageClasses                 shift and go to state 1
    AliasDeclaration               shift and go to state 12
    ClassDeclaration               shift and go to state 26
    VarDeclarations                shift and go to state 23
    empty                          shift and go to state 62
    AutoFuncDeclaration            shift and go to state 16
    Declaration                    shift and go to state 504
    AnonymousEnumDeclaration       shift and go to state 20
    AnonUnionDeclaration           shift and go to state 22
    EnumDeclaration                shift and go to state 24
    UnionDeclaration               shift and go to state 25
    StorageClass                   shift and go to state 28

state 336

    (315) ExpressionStatement -> Expression . SEMICOLON

    SEMICOLON       shift and go to state 505


state 337

    (291) NonEmptyStatementNoCaseNoDefault -> WhileStatement .

    SEMICOLON       reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    CASE            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    DEFAULT         reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    LBRACE          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    IDENTIFIER      reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    IF              reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    WHILE           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    DO              reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    FOR             reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    SWITCH          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    FINAL           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    CONTINUE        reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    BREAK           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    RETURN          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    GOTO            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    WITH            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    MIXIN           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    IMPORT          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    STATIC          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    LPAREN          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    ALIAS           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    ENUM            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    EXTERN          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    AUTO            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    CONST           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    IMMUTABLE       reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    FOREACH         reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    FOREACH_REVERSE reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    CLASS           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    UNION           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    AMPERSAND       reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    PLUS_PLUS       reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    MINUS_MINUS     reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    TIMES           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    MINUS           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    PLUS            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    EXCLAMATION     reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    TILDE           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    CAST            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    DOT             reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    THIS            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    NULL            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    TRUE            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    FALSE           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    DOLLAR          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    INUMBER         reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    DNUMBER         reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    LIT_CHAR        reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    LIT_STR         reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    LBRACKET        reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    FUNCTION        reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    NEW             reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    BOOL            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    SHORT           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    USHORT          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    INT             reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    UINT            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    LONG            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    ULONG           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    CHAR            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    FLOAT           reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    VOID            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    TYPEOF          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    TYPEID          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    BODY            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    RBRACE          reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)
    ELSE            reduce using rule 291 (NonEmptyStatementNoCaseNoDefault -> WhileStatement .)


state 338

    (274) Statement -> NonEmptyStatement .

    SEMICOLON       reduce using rule 274 (Statement -> NonEmptyStatement .)
    CASE            reduce using rule 274 (Statement -> NonEmptyStatement .)
    DEFAULT         reduce using rule 274 (Statement -> NonEmptyStatement .)
    LBRACE          reduce using rule 274 (Statement -> NonEmptyStatement .)
    IDENTIFIER      reduce using rule 274 (Statement -> NonEmptyStatement .)
    IF              reduce using rule 274 (Statement -> NonEmptyStatement .)
    WHILE           reduce using rule 274 (Statement -> NonEmptyStatement .)
    DO              reduce using rule 274 (Statement -> NonEmptyStatement .)
    FOR             reduce using rule 274 (Statement -> NonEmptyStatement .)
    SWITCH          reduce using rule 274 (Statement -> NonEmptyStatement .)
    FINAL           reduce using rule 274 (Statement -> NonEmptyStatement .)
    CONTINUE        reduce using rule 274 (Statement -> NonEmptyStatement .)
    BREAK           reduce using rule 274 (Statement -> NonEmptyStatement .)
    RETURN          reduce using rule 274 (Statement -> NonEmptyStatement .)
    GOTO            reduce using rule 274 (Statement -> NonEmptyStatement .)
    WITH            reduce using rule 274 (Statement -> NonEmptyStatement .)
    MIXIN           reduce using rule 274 (Statement -> NonEmptyStatement .)
    IMPORT          reduce using rule 274 (Statement -> NonEmptyStatement .)
    STATIC          reduce using rule 274 (Statement -> NonEmptyStatement .)
    LPAREN          reduce using rule 274 (Statement -> NonEmptyStatement .)
    ALIAS           reduce using rule 274 (Statement -> NonEmptyStatement .)
    ENUM            reduce using rule 274 (Statement -> NonEmptyStatement .)
    EXTERN          reduce using rule 274 (Statement -> NonEmptyStatement .)
    AUTO            reduce using rule 274 (Statement -> NonEmptyStatement .)
    CONST           reduce using rule 274 (Statement -> NonEmptyStatement .)
    IMMUTABLE       reduce using rule 274 (Statement -> NonEmptyStatement .)
    FOREACH         reduce using rule 274 (Statement -> NonEmptyStatement .)
    FOREACH_REVERSE reduce using rule 274 (Statement -> NonEmptyStatement .)
    CLASS           reduce using rule 274 (Statement -> NonEmptyStatement .)
    UNION           reduce using rule 274 (Statement -> NonEmptyStatement .)
    AMPERSAND       reduce using rule 274 (Statement -> NonEmptyStatement .)
    PLUS_PLUS       reduce using rule 274 (Statement -> NonEmptyStatement .)
    MINUS_MINUS     reduce using rule 274 (Statement -> NonEmptyStatement .)
    TIMES           reduce using rule 274 (Statement -> NonEmptyStatement .)
    MINUS           reduce using rule 274 (Statement -> NonEmptyStatement .)
    PLUS            reduce using rule 274 (Statement -> NonEmptyStatement .)
    EXCLAMATION     reduce using rule 274 (Statement -> NonEmptyStatement .)
    TILDE           reduce using rule 274 (Statement -> NonEmptyStatement .)
    CAST            reduce using rule 274 (Statement -> NonEmptyStatement .)
    DOT             reduce using rule 274 (Statement -> NonEmptyStatement .)
    THIS            reduce using rule 274 (Statement -> NonEmptyStatement .)
    NULL            reduce using rule 274 (Statement -> NonEmptyStatement .)
    TRUE            reduce using rule 274 (Statement -> NonEmptyStatement .)
    FALSE           reduce using rule 274 (Statement -> NonEmptyStatement .)
    DOLLAR          reduce using rule 274 (Statement -> NonEmptyStatement .)
    INUMBER         reduce using rule 274 (Statement -> NonEmptyStatement .)
    DNUMBER         reduce using rule 274 (Statement -> NonEmptyStatement .)
    LIT_CHAR        reduce using rule 274 (Statement -> NonEmptyStatement .)
    LIT_STR         reduce using rule 274 (Statement -> NonEmptyStatement .)
    LBRACKET        reduce using rule 274 (Statement -> NonEmptyStatement .)
    FUNCTION        reduce using rule 274 (Statement -> NonEmptyStatement .)
    NEW             reduce using rule 274 (Statement -> NonEmptyStatement .)
    BOOL            reduce using rule 274 (Statement -> NonEmptyStatement .)
    SHORT           reduce using rule 274 (Statement -> NonEmptyStatement .)
    USHORT          reduce using rule 274 (Statement -> NonEmptyStatement .)
    INT             reduce using rule 274 (Statement -> NonEmptyStatement .)
    UINT            reduce using rule 274 (Statement -> NonEmptyStatement .)
    LONG            reduce using rule 274 (Statement -> NonEmptyStatement .)
    ULONG           reduce using rule 274 (Statement -> NonEmptyStatement .)
    CHAR            reduce using rule 274 (Statement -> NonEmptyStatement .)
    FLOAT           reduce using rule 274 (Statement -> NonEmptyStatement .)
    VOID            reduce using rule 274 (Statement -> NonEmptyStatement .)
    TYPEOF          reduce using rule 274 (Statement -> NonEmptyStatement .)
    TYPEID          reduce using rule 274 (Statement -> NonEmptyStatement .)
    BODY            reduce using rule 274 (Statement -> NonEmptyStatement .)
    RBRACE          reduce using rule 274 (Statement -> NonEmptyStatement .)


state 339

    (380) BreakStatement -> BREAK . IDENTIFIER_opt SEMICOLON
    (375) IDENTIFIER_opt -> . IDENTIFIER
    (376) IDENTIFIER_opt -> . empty
    (477) empty -> .

    IDENTIFIER      shift and go to state 494
    SEMICOLON       reduce using rule 477 (empty -> .)

    IDENTIFIER_opt                 shift and go to state 506
    empty                          shift and go to state 495

state 340

    (330) DoStatement -> DO . ScopeStatement WHILE LPAREN Expression RPAREN
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 507
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 341

    (344) ForeachStatement -> AggregateForeach . NoScopeNonEmptyStatement
    (276) NoScopeNonEmptyStatement -> . NonEmptyStatement
    (277) NoScopeNonEmptyStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 508
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 509
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    NoScopeNonEmptyStatement       shift and go to state 510
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 342

    (287) NonEmptyStatementNoCaseNoDefault -> LabeledStatement .

    SEMICOLON       reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    CASE            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    DEFAULT         reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    LBRACE          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    IDENTIFIER      reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    IF              reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    WHILE           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    DO              reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    FOR             reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    SWITCH          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    FINAL           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    CONTINUE        reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    BREAK           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    RETURN          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    GOTO            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    WITH            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    MIXIN           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    IMPORT          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    STATIC          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    LPAREN          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    ALIAS           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    ENUM            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    EXTERN          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    AUTO            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    CONST           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    IMMUTABLE       reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    FOREACH         reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    FOREACH_REVERSE reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    CLASS           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    UNION           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    AMPERSAND       reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    PLUS_PLUS       reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    MINUS_MINUS     reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    TIMES           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    MINUS           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    PLUS            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    EXCLAMATION     reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    TILDE           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    CAST            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    DOT             reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    THIS            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    NULL            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    TRUE            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    FALSE           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    DOLLAR          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    INUMBER         reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    DNUMBER         reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    LIT_CHAR        reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    LIT_STR         reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    LBRACKET        reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    FUNCTION        reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    NEW             reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    BOOL            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    SHORT           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    USHORT          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    INT             reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    UINT            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    LONG            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    ULONG           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    CHAR            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    FLOAT           reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    VOID            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    TYPEOF          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    TYPEID          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    BODY            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    RBRACE          reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)
    ELSE            reduce using rule 287 (NonEmptyStatementNoCaseNoDefault -> LabeledStatement .)


state 343

    (289) NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .

    SEMICOLON       reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    CASE            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    DEFAULT         reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    LBRACE          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    IDENTIFIER      reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    IF              reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    WHILE           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    DO              reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    FOR             reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    SWITCH          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    FINAL           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    CONTINUE        reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    BREAK           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    RETURN          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    GOTO            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    WITH            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    MIXIN           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    IMPORT          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    STATIC          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    LPAREN          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    ALIAS           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    ENUM            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    EXTERN          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    AUTO            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    CONST           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    IMMUTABLE       reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    FOREACH         reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    FOREACH_REVERSE reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    CLASS           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    UNION           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    AMPERSAND       reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    PLUS_PLUS       reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    MINUS_MINUS     reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    TIMES           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    MINUS           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    PLUS            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    EXCLAMATION     reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    TILDE           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    CAST            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    DOT             reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    THIS            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    NULL            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    TRUE            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    FALSE           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    DOLLAR          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    INUMBER         reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    DNUMBER         reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    LIT_CHAR        reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    LIT_STR         reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    LBRACKET        reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    FUNCTION        reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    NEW             reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    BOOL            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    SHORT           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    USHORT          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    INT             reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    UINT            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    LONG            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    ULONG           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    CHAR            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    FLOAT           reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    VOID            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    TYPEOF          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    TYPEID          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    BODY            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    RBRACE          reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)
    ELSE            reduce using rule 289 (NonEmptyStatementNoCaseNoDefault -> DeclarationStatement .)


state 344

    (311) BlockStatement -> LBRACE RBRACE .

    ALIAS           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    ENUM            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    IMPORT          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    STATIC          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    CLASS           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    UNION           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EXTERN          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    FINAL           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    AUTO            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    CONST           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    IMMUTABLE       reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DOT             reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    BOOL            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    SHORT           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    USHORT          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    INT             reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    UINT            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LONG            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    ULONG           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    CHAR            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    FLOAT           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    VOID            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    TYPEOF          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    $end            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    NEW             reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DELETE          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    MIXIN           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    PROTECTED       reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    CASE            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LBRACE          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    IF              reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    WHILE           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DO              reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    FOR             reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    SWITCH          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    BREAK           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    RETURN          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    GOTO            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    WITH            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LPAREN          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    FOREACH         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    FOREACH_REVERSE reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    AMPERSAND       reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    PLUS_PLUS       reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    MINUS_MINUS     reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    TIMES           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    MINUS           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    PLUS            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EXCLAMATION     reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    TILDE           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    CAST            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    THIS            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    NULL            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    TRUE            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    FALSE           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DOLLAR          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    INUMBER         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DNUMBER         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LIT_CHAR        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LIT_STR         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    TYPEID          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    BODY            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    ELSE            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    POWER           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DIV             reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    MODULO          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LEFT_SHIFT      reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    RIGHT_SHIFT     reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    IS_EQ           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    NOT_EQ          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LESS            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    GREATER_EQ      reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    GREATER         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    LESS_EQ         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    CARET           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    PIPE            reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DOUBLE_AMPERSAND reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    QUESTION        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    DOUBLE_PIPE     reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    ASSIGN          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_PLUS         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_MINUS        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_TIMES        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_DIV          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_MODULO       reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_AND_BIT      reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_OR_BIT       reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_XOR_BIT      reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_LEFT         reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    EQ_RIGHT        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    COMMA           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    RANGE           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    RPAREN          reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)
    COLON           reduce using rule 311 (BlockStatement -> LBRACE RBRACE .)


state 345

    (275) Statement -> ScopeBlockStatement .

    SEMICOLON       reduce using rule 275 (Statement -> ScopeBlockStatement .)
    CASE            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    DEFAULT         reduce using rule 275 (Statement -> ScopeBlockStatement .)
    LBRACE          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    IDENTIFIER      reduce using rule 275 (Statement -> ScopeBlockStatement .)
    IF              reduce using rule 275 (Statement -> ScopeBlockStatement .)
    WHILE           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    DO              reduce using rule 275 (Statement -> ScopeBlockStatement .)
    FOR             reduce using rule 275 (Statement -> ScopeBlockStatement .)
    SWITCH          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    FINAL           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    CONTINUE        reduce using rule 275 (Statement -> ScopeBlockStatement .)
    BREAK           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    RETURN          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    GOTO            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    WITH            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    MIXIN           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    IMPORT          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    STATIC          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    LPAREN          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    ALIAS           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    ENUM            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    EXTERN          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    AUTO            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    CONST           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    IMMUTABLE       reduce using rule 275 (Statement -> ScopeBlockStatement .)
    FOREACH         reduce using rule 275 (Statement -> ScopeBlockStatement .)
    FOREACH_REVERSE reduce using rule 275 (Statement -> ScopeBlockStatement .)
    CLASS           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    UNION           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    AMPERSAND       reduce using rule 275 (Statement -> ScopeBlockStatement .)
    PLUS_PLUS       reduce using rule 275 (Statement -> ScopeBlockStatement .)
    MINUS_MINUS     reduce using rule 275 (Statement -> ScopeBlockStatement .)
    TIMES           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    MINUS           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    PLUS            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    EXCLAMATION     reduce using rule 275 (Statement -> ScopeBlockStatement .)
    TILDE           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    CAST            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    DOT             reduce using rule 275 (Statement -> ScopeBlockStatement .)
    THIS            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    NULL            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    TRUE            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    FALSE           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    DOLLAR          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    INUMBER         reduce using rule 275 (Statement -> ScopeBlockStatement .)
    DNUMBER         reduce using rule 275 (Statement -> ScopeBlockStatement .)
    LIT_CHAR        reduce using rule 275 (Statement -> ScopeBlockStatement .)
    LIT_STR         reduce using rule 275 (Statement -> ScopeBlockStatement .)
    LBRACKET        reduce using rule 275 (Statement -> ScopeBlockStatement .)
    FUNCTION        reduce using rule 275 (Statement -> ScopeBlockStatement .)
    NEW             reduce using rule 275 (Statement -> ScopeBlockStatement .)
    BOOL            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    SHORT           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    USHORT          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    INT             reduce using rule 275 (Statement -> ScopeBlockStatement .)
    UINT            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    LONG            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    ULONG           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    CHAR            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    FLOAT           reduce using rule 275 (Statement -> ScopeBlockStatement .)
    VOID            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    TYPEOF          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    TYPEID          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    BODY            reduce using rule 275 (Statement -> ScopeBlockStatement .)
    RBRACE          reduce using rule 275 (Statement -> ScopeBlockStatement .)
    ELSE            reduce using rule 275 (Statement -> ScopeBlockStatement .)


state 346

    (285) NonEmptyStatement -> CaseRangeStatement .

    SEMICOLON       reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    CASE            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    DEFAULT         reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    LBRACE          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    IDENTIFIER      reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    IF              reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    WHILE           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    DO              reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    FOR             reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    SWITCH          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    FINAL           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    CONTINUE        reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    BREAK           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    RETURN          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    GOTO            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    WITH            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    MIXIN           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    IMPORT          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    STATIC          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    LPAREN          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    ALIAS           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    ENUM            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    EXTERN          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    AUTO            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    CONST           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    IMMUTABLE       reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    FOREACH         reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    FOREACH_REVERSE reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    CLASS           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    UNION           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    AMPERSAND       reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    PLUS_PLUS       reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    MINUS_MINUS     reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    TIMES           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    MINUS           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    PLUS            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    EXCLAMATION     reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    TILDE           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    CAST            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    DOT             reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    THIS            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    NULL            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    TRUE            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    FALSE           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    DOLLAR          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    INUMBER         reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    DNUMBER         reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    LIT_CHAR        reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    LIT_STR         reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    LBRACKET        reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    FUNCTION        reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    NEW             reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    BOOL            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    SHORT           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    USHORT          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    INT             reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    UINT            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    LONG            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    ULONG           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    CHAR            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    FLOAT           reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    VOID            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    TYPEOF          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    TYPEID          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    BODY            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    RBRACE          reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)
    ELSE            reduce using rule 285 (NonEmptyStatement -> CaseRangeStatement .)


state 347

    (358) RangeForeach -> LPAREN . ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (205) UnaryExpression -> LPAREN . Type RPAREN DOT IDENTIFIER
    (253) PrimaryExpression -> LPAREN . Expression RPAREN
    (445) Parameters -> LPAREN . ParameterList_opt RPAREN
    (349) ForeachType -> . ForeachTypeAttributes_opt BasicType Declarator
    (350) ForeachType -> . ForeachTypeAttributes_opt IDENTIFIER
    (351) ForeachType -> . ForeachTypeAttributes_opt ALIAS IDENTIFIER
    (75) Type -> . BasicType BasicType2_opt
    (151) Expression -> . CommaExpression
    (449) ParameterList_opt -> . ParameterList
    (450) ParameterList_opt -> . empty
    (352) ForeachTypeAttributes_opt -> . ForeachTypeAttributes
    (353) ForeachTypeAttributes_opt -> . empty
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (446) ParameterList -> . Parameter
    (447) ParameterList -> . Parameter COMMA ParameterList
    (448) ParameterList -> . ELLIPSIS
    (477) empty -> .
    (354) ForeachTypeAttributes -> . ForeachTypeAttribute
    (355) ForeachTypeAttributes -> . ForeachTypeAttribute ForeachTypeAttributes_opt
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (451) Parameter -> . InOut_opt BasicType Declarator
    (452) Parameter -> . InOut_opt BasicType Declarator ELLIPSIS
    (453) Parameter -> . InOut_opt BasicType Declarator ASSIGN AssignExpression
    (454) Parameter -> . InOut_opt Type
    (455) Parameter -> . InOut_opt Type ELLIPSIS
    (356) ForeachTypeAttribute -> . ENUM
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (461) InOut_opt -> . InOut
    (462) InOut_opt -> . empty
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (456) InOut -> . InOutX
    (457) InOut -> . InOut InOutX
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (458) InOutX -> . AUTO
    (459) InOutX -> . FINAL
    (460) InOutX -> . SCOPE
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    DOT             shift and go to state 203
    ELLIPSIS        shift and go to state 162
    RPAREN          reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    ALIAS           reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ENUM            shift and go to state 512
    AUTO            shift and go to state 157
    FINAL           shift and go to state 159
    SCOPE           shift and go to state 158
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! IDENTIFIER      [ shift and go to state 214 ]
  ! TYPEOF          [ shift and go to state 47 ]

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ParameterList                  shift and go to state 160
    ImportExpression               shift and go to state 188
    ForeachTypeAttribute           shift and go to state 511
    IdentifierList                 shift and go to state 189
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    Parameter                      shift and go to state 165
    ParameterList_opt              shift and go to state 163
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    ForeachType                    shift and go to state 513
    BasicType                      shift and go to state 207
    InOutX                         shift and go to state 164
    FunctionLiteralBody            shift and go to state 219
    BasicTypeX                     shift and go to state 222
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 514
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    ForeachTypeAttributes_opt      shift and go to state 515
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 196
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 430
    BodyStatement                  shift and go to state 213
    InOut_opt                      shift and go to state 156
    Type                           shift and go to state 431
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ForeachTypeAttributes          shift and go to state 516
    InOut                          shift and go to state 161
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 348

    (318) IfStatement -> IF . LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> IF . LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4

    LPAREN          shift and go to state 517


state 349

    (301) NonEmptyStatementNoCaseNoDefault -> WithStatement .

    SEMICOLON       reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    CASE            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    DEFAULT         reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    LBRACE          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    IDENTIFIER      reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    IF              reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    WHILE           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    DO              reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    FOR             reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    SWITCH          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    FINAL           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    CONTINUE        reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    BREAK           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    RETURN          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    GOTO            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    WITH            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    MIXIN           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    IMPORT          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    STATIC          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    LPAREN          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    ALIAS           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    ENUM            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    EXTERN          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    AUTO            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    CONST           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    IMMUTABLE       reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    FOREACH         reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    FOREACH_REVERSE reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    CLASS           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    UNION           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    AMPERSAND       reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    PLUS_PLUS       reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    MINUS_MINUS     reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    TIMES           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    MINUS           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    PLUS            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    EXCLAMATION     reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    TILDE           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    CAST            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    DOT             reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    THIS            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    NULL            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    TRUE            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    FALSE           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    DOLLAR          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    INUMBER         reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    DNUMBER         reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    LIT_CHAR        reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    LIT_STR         reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    LBRACKET        reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    FUNCTION        reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    NEW             reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    BOOL            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    SHORT           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    USHORT          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    INT             reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    UINT            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    LONG            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    ULONG           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    CHAR            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    FLOAT           reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    VOID            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    TYPEOF          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    TYPEID          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    BODY            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    RBRACE          reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)
    ELSE            reduce using rule 301 (NonEmptyStatementNoCaseNoDefault -> WithStatement .)


state 350

    (290) NonEmptyStatementNoCaseNoDefault -> IfStatement .

    SEMICOLON       reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    CASE            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    DEFAULT         reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    LBRACE          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    IDENTIFIER      reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    IF              reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    WHILE           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    DO              reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    FOR             reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    SWITCH          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    FINAL           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    CONTINUE        reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    BREAK           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    RETURN          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    GOTO            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    WITH            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    MIXIN           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    IMPORT          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    STATIC          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    LPAREN          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    ALIAS           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    ENUM            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    EXTERN          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    AUTO            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    CONST           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    IMMUTABLE       reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    FOREACH         reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    FOREACH_REVERSE reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    CLASS           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    UNION           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    AMPERSAND       reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    PLUS_PLUS       reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    MINUS_MINUS     reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    TIMES           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    MINUS           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    PLUS            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    EXCLAMATION     reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    TILDE           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    CAST            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    DOT             reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    THIS            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    NULL            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    TRUE            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    FALSE           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    DOLLAR          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    INUMBER         reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    DNUMBER         reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    LIT_CHAR        reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    LIT_STR         reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    LBRACKET        reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    FUNCTION        reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    NEW             reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    BOOL            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    SHORT           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    USHORT          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    INT             reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    UINT            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    LONG            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    ULONG           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    CHAR            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    FLOAT           reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    VOID            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    TYPEOF          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    TYPEID          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    BODY            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    RBRACE          reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)
    ELSE            reduce using rule 290 (NonEmptyStatementNoCaseNoDefault -> IfStatement .)


state 351

    (472) BodyStatement -> BODY BlockStatement .

    POWER           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DOT             reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    PLUS_PLUS       reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    MINUS_MINUS     reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LPAREN          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    TIMES           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DIV             reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    MODULO          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    PLUS            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    MINUS           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LEFT_SHIFT      reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    RIGHT_SHIFT     reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    AMPERSAND       reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    CARET           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    PIPE            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DOUBLE_AMPERSAND reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    QUESTION        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DOUBLE_PIPE     reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    ASSIGN          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_PLUS         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_MINUS        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_TIMES        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_DIV          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_MODULO       reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_AND_BIT      reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_OR_BIT       reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_XOR_BIT      reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_LEFT         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EQ_RIGHT        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    RBRACKET        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    RANGE           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    COMMA           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    RPAREN          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    SEMICOLON       reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    RBRACE          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    COLON           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    IS_EQ           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    NOT_EQ          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LESS            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    GREATER_EQ      reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    GREATER         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LESS_EQ         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    ALIAS           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    ENUM            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    IMPORT          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    STATIC          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    CLASS           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    UNION           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EXTERN          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    FINAL           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    AUTO            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    CONST           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    IMMUTABLE       reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    BOOL            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    SHORT           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    USHORT          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    INT             reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    UINT            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LONG            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    ULONG           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    CHAR            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    FLOAT           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    VOID            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    IDENTIFIER      reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    TYPEOF          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    $end            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    NEW             reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DELETE          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    MIXIN           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    PRIVATE         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    PROTECTED       reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    PUBLIC          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    CASE            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DEFAULT         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LBRACE          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    IF              reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    WHILE           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DO              reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    FOR             reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    SWITCH          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    CONTINUE        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    BREAK           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    RETURN          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    GOTO            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    WITH            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    FOREACH         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    FOREACH_REVERSE reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    EXCLAMATION     reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    TILDE           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    CAST            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    THIS            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    NULL            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    TRUE            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    FALSE           reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DOLLAR          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    INUMBER         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    DNUMBER         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LIT_CHAR        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LIT_STR         reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    LBRACKET        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    FUNCTION        reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    TYPEID          reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    BODY            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)
    ELSE            reduce using rule 472 (BodyStatement -> BODY BlockStatement .)


state 352

    (464) MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .

    LBRACE          reduce using rule 464 (MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .)
    BODY            reduce using rule 464 (MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .)
    SEMICOLON       reduce using rule 464 (MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .)
    ASSIGN          reduce using rule 464 (MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .)
    COMMA           reduce using rule 464 (MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .)
    RPAREN          reduce using rule 464 (MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .)
    ELLIPSIS        reduce using rule 464 (MemberFunctionAttributes -> MemberFunctionAttribute MemberFunctionAttributes .)


state 353

    (454) Parameter -> InOut_opt Type .
    (455) Parameter -> InOut_opt Type . ELLIPSIS

    COMMA           reduce using rule 454 (Parameter -> InOut_opt Type .)
    RPAREN          reduce using rule 454 (Parameter -> InOut_opt Type .)
    ELLIPSIS        shift and go to state 518


state 354

    (451) Parameter -> InOut_opt BasicType . Declarator
    (452) Parameter -> InOut_opt BasicType . Declarator ELLIPSIS
    (453) Parameter -> InOut_opt BasicType . Declarator ASSIGN AssignExpression
    (75) Type -> BasicType . BasicType2_opt
    (57) Declarator -> . VarDeclarator
    (58) Declarator -> . AltDeclarator
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (59) VarDeclarator -> . BasicType2_opt IDENTIFIER
    (60) AltDeclarator -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    ELLIPSIS        reduce using rule 477 (empty -> .)
    COMMA           reduce using rule 477 (empty -> .)
    RPAREN          reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

    VarDeclarator                  shift and go to state 519
    BasicType2X                    shift and go to state 81
    AltDeclarator                  shift and go to state 521
    empty                          shift and go to state 86
    Declarator                     shift and go to state 522
    BasicType2_opt                 shift and go to state 520
    BasicType2                     shift and go to state 90

state 355

    (457) InOut -> InOut InOutX .

    AUTO            reduce using rule 457 (InOut -> InOut InOutX .)
    FINAL           reduce using rule 457 (InOut -> InOut InOutX .)
    SCOPE           reduce using rule 457 (InOut -> InOut InOutX .)
    DOT             reduce using rule 457 (InOut -> InOut InOutX .)
    BOOL            reduce using rule 457 (InOut -> InOut InOutX .)
    SHORT           reduce using rule 457 (InOut -> InOut InOutX .)
    USHORT          reduce using rule 457 (InOut -> InOut InOutX .)
    INT             reduce using rule 457 (InOut -> InOut InOutX .)
    UINT            reduce using rule 457 (InOut -> InOut InOutX .)
    LONG            reduce using rule 457 (InOut -> InOut InOutX .)
    ULONG           reduce using rule 457 (InOut -> InOut InOutX .)
    CHAR            reduce using rule 457 (InOut -> InOut InOutX .)
    FLOAT           reduce using rule 457 (InOut -> InOut InOutX .)
    VOID            reduce using rule 457 (InOut -> InOut InOutX .)
    IDENTIFIER      reduce using rule 457 (InOut -> InOut InOutX .)
    TYPEOF          reduce using rule 457 (InOut -> InOut InOutX .)


state 356

    (445) Parameters -> LPAREN ParameterList_opt RPAREN .

    CONST           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    IMMUTABLE       reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    RETURN          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    LBRACE          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    BODY            reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    SEMICOLON       reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    TIMES           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    LBRACKET        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    FUNCTION        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    IDENTIFIER      reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    LPAREN          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    COMMA           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    RPAREN          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    POWER           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    DOT             reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    PLUS_PLUS       reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    MINUS_MINUS     reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    DIV             reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    MODULO          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    PLUS            reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    MINUS           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    LEFT_SHIFT      reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    RIGHT_SHIFT     reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    IS_EQ           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    NOT_EQ          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    LESS            reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    GREATER_EQ      reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    GREATER         reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    LESS_EQ         reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    AMPERSAND       reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    CARET           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    PIPE            reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    QUESTION        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    DOUBLE_PIPE     reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    ASSIGN          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_PLUS         reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_MINUS        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_TIMES        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_DIV          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_MODULO       reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_AND_BIT      reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_OR_BIT       reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_XOR_BIT      reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_LEFT         reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    EQ_RIGHT        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    RBRACKET        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    RANGE           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    RBRACE          reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    COLON           reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)
    ELLIPSIS        reduce using rule 445 (Parameters -> LPAREN ParameterList_opt RPAREN .)


state 357

    (447) ParameterList -> Parameter COMMA . ParameterList
    (446) ParameterList -> . Parameter
    (447) ParameterList -> . Parameter COMMA ParameterList
    (448) ParameterList -> . ELLIPSIS
    (451) Parameter -> . InOut_opt BasicType Declarator
    (452) Parameter -> . InOut_opt BasicType Declarator ELLIPSIS
    (453) Parameter -> . InOut_opt BasicType Declarator ASSIGN AssignExpression
    (454) Parameter -> . InOut_opt Type
    (455) Parameter -> . InOut_opt Type ELLIPSIS
    (461) InOut_opt -> . InOut
    (462) InOut_opt -> . empty
    (456) InOut -> . InOutX
    (457) InOut -> . InOut InOutX
    (477) empty -> .
    (458) InOutX -> . AUTO
    (459) InOutX -> . FINAL
    (460) InOutX -> . SCOPE

    ELLIPSIS        shift and go to state 162
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AUTO            shift and go to state 157
    FINAL           shift and go to state 159
    SCOPE           shift and go to state 158

    InOut_opt                      shift and go to state 156
    InOutX                         shift and go to state 164
    ParameterList                  shift and go to state 523
    empty                          shift and go to state 524
    Parameter                      shift and go to state 165
    InOut                          shift and go to state 161

state 358

    (142) VoidInitializer -> VOID .
    (92) BasicTypeX -> VOID .

    COMMA           reduce using rule 142 (VoidInitializer -> VOID .)
    SEMICOLON       reduce using rule 142 (VoidInitializer -> VOID .)
    DOT             reduce using rule 92 (BasicTypeX -> VOID .)
    LPAREN          reduce using rule 92 (BasicTypeX -> VOID .)


state 359

    (119) ArrayInitializer -> LBRACKET . ArrayMemberInitializations_opt RBRACKET
    (255) ArrayLiteral -> LBRACKET . ArgumentList_opt RBRACKET
    (123) ArrayMemberInitializations_opt -> . ArrayMemberInitializations
    (124) ArrayMemberInitializations_opt -> . empty
    (217) ArgumentList_opt -> . ArgumentList
    (218) ArgumentList_opt -> . empty
    (120) ArrayMemberInitializations -> . ArrayMemberInitialization
    (121) ArrayMemberInitializations -> . ArrayMemberInitialization COMMA
    (122) ArrayMemberInitializations -> . ArrayMemberInitialization COMMA ArrayMemberInitializations
    (477) empty -> .
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (125) ArrayMemberInitialization -> . NonVoidInitializer
    (126) ArrayMemberInitialization -> . AssignExpression COLON NonVoidInitializer
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RBRACKET        reduce using rule 477 (empty -> .)
    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    ArrayMemberInitialization      shift and go to state 527
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 366
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    ArrayMemberInitializations     shift and go to state 528
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    NonVoidInitializer             shift and go to state 525
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 529
    ArrayInitializer               shift and go to state 361
    ArrayMemberInitializations_opt shift and go to state 526
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ArgumentList_opt               shift and go to state 367
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 530

state 360

    (115) Initializer -> NonVoidInitializer .

    COMMA           reduce using rule 115 (Initializer -> NonVoidInitializer .)
    SEMICOLON       reduce using rule 115 (Initializer -> NonVoidInitializer .)


state 361

    (117) NonVoidInitializer -> ArrayInitializer .

    COMMA           reduce using rule 117 (NonVoidInitializer -> ArrayInitializer .)
    RBRACKET        reduce using rule 117 (NonVoidInitializer -> ArrayInitializer .)
    SEMICOLON       reduce using rule 117 (NonVoidInitializer -> ArrayInitializer .)


state 362

    (114) Initializer -> VoidInitializer .

    COMMA           reduce using rule 114 (Initializer -> VoidInitializer .)
    SEMICOLON       reduce using rule 114 (Initializer -> VoidInitializer .)


state 363

    (44) DeclaratorInitializer -> VarDeclarator ASSIGN Initializer .

    COMMA           reduce using rule 44 (DeclaratorInitializer -> VarDeclarator ASSIGN Initializer .)
    SEMICOLON       reduce using rule 44 (DeclaratorInitializer -> VarDeclarator ASSIGN Initializer .)


state 364

    (116) NonVoidInitializer -> ExpInitializer .

    COMMA           reduce using rule 116 (NonVoidInitializer -> ExpInitializer .)
    RBRACKET        reduce using rule 116 (NonVoidInitializer -> ExpInitializer .)
    SEMICOLON       reduce using rule 116 (NonVoidInitializer -> ExpInitializer .)


state 365

    (118) ExpInitializer -> AssignExpression .

    COMMA           reduce using rule 118 (ExpInitializer -> AssignExpression .)
    SEMICOLON       reduce using rule 118 (ExpInitializer -> AssignExpression .)
    RBRACKET        reduce using rule 118 (ExpInitializer -> AssignExpression .)


state 366

    (217) ArgumentList_opt -> ArgumentList .

    RPAREN          reduce using rule 217 (ArgumentList_opt -> ArgumentList .)
    RBRACKET        reduce using rule 217 (ArgumentList_opt -> ArgumentList .)


state 367

    (255) ArrayLiteral -> LBRACKET ArgumentList_opt . RBRACKET

    RBRACKET        shift and go to state 531


state 368

    (218) ArgumentList_opt -> empty .

    RPAREN          reduce using rule 218 (ArgumentList_opt -> empty .)
    RBRACKET        reduce using rule 218 (ArgumentList_opt -> empty .)


state 369

    (219) ArgumentList -> AssignExpression .
    (220) ArgumentList -> AssignExpression . COMMA
    (221) ArgumentList -> AssignExpression . COMMA ArgumentList

    RPAREN          reduce using rule 219 (ArgumentList -> AssignExpression .)
    RBRACKET        reduce using rule 219 (ArgumentList -> AssignExpression .)
    COLON           reduce using rule 219 (ArgumentList -> AssignExpression .)
    COMMA           shift and go to state 532


state 370

    (177) AndExpression -> AndExpression AMPERSAND . CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 533
    NewAnonClassExpression         shift and go to state 185

state 371

    (201) UnaryExpression -> MINUS UnaryExpression .

    TIMES           reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    DIV             reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    MODULO          reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    PLUS            reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    MINUS           reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    LEFT_SHIFT      reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    IS_EQ           reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    NOT_EQ          reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    LESS            reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    GREATER_EQ      reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    GREATER         reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    LESS_EQ         reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    AMPERSAND       reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    CARET           reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    PIPE            reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    QUESTION        reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    ASSIGN          reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_PLUS         reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_MINUS        reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_TIMES        reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_DIV          reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_MODULO       reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_AND_BIT      reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_OR_BIT       reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_LEFT         reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    EQ_RIGHT        reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    COMMA           reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    RPAREN          reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    RBRACKET        reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    RANGE           reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    SEMICOLON       reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    RBRACE          reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)
    COLON           reduce using rule 201 (UnaryExpression -> MINUS UnaryExpression .)


state 372

    (167) ConditionalExpression -> OrOrExpression QUESTION . Expression COLON ConditionalExpression
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 534
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 373

    (169) OrOrExpression -> OrOrExpression DOUBLE_PIPE . AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 535
    NewAnonClassExpression         shift and go to state 185

state 374

    (202) UnaryExpression -> PLUS UnaryExpression .

    TIMES           reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    DIV             reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    MODULO          reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    PLUS            reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    MINUS           reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    LEFT_SHIFT      reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    IS_EQ           reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    NOT_EQ          reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    LESS            reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    GREATER_EQ      reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    GREATER         reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    LESS_EQ         reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    AMPERSAND       reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    CARET           reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    PIPE            reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    QUESTION        reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    ASSIGN          reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_PLUS         reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_MINUS        reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_TIMES        reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_DIV          reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_MODULO       reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_AND_BIT      reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_OR_BIT       reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_LEFT         reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    EQ_RIGHT        reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    COMMA           reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    RPAREN          reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    RBRACKET        reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    RANGE           reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    SEMICOLON       reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    RBRACE          reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)
    COLON           reduce using rule 202 (UnaryExpression -> PLUS UnaryExpression .)


state 375

    (270) ImportExpression -> IMPORT LPAREN . AssignExpression RPAREN
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 536

state 376

    (165) AssignExpression -> ConditionalExpression EQ_RIGHT . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 537

state 377

    (161) AssignExpression -> ConditionalExpression EQ_AND_BIT . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 538

state 378

    (158) AssignExpression -> ConditionalExpression EQ_TIMES . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 539

state 379

    (156) AssignExpression -> ConditionalExpression EQ_PLUS . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 540

state 380

    (159) AssignExpression -> ConditionalExpression EQ_DIV . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 541

state 381

    (163) AssignExpression -> ConditionalExpression EQ_XOR_BIT . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 542

state 382

    (157) AssignExpression -> ConditionalExpression EQ_MINUS . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 543

state 383

    (164) AssignExpression -> ConditionalExpression EQ_LEFT . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 544

state 384

    (162) AssignExpression -> ConditionalExpression EQ_OR_BIT . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 545

state 385

    (160) AssignExpression -> ConditionalExpression EQ_MODULO . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 546

state 386

    (155) AssignExpression -> ConditionalExpression ASSIGN . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 547

state 387

    (186) RelExpression -> ShiftExpression LESS_EQ . ShiftExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 548
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 388

    (181) EqualExpression -> ShiftExpression IS_EQ . ShiftExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 549
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 389

    (185) RelExpression -> ShiftExpression GREATER . ShiftExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 550
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 390

    (183) RelExpression -> ShiftExpression LESS . ShiftExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 551
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 391

    (188) ShiftExpression -> ShiftExpression LEFT_SHIFT . AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 552
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 392

    (184) RelExpression -> ShiftExpression GREATER_EQ . ShiftExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 553
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 393

    (189) ShiftExpression -> ShiftExpression RIGHT_SHIFT . AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 554
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 394

    (182) EqualExpression -> ShiftExpression NOT_EQ . ShiftExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 555
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 395

    (196) MulExpression -> MulExpression MODULO . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 556
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 396

    (195) MulExpression -> MulExpression DIV . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 557
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 397

    (194) MulExpression -> MulExpression TIMES . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 558
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 398

    (264) ParameterMemberAttributes -> Parameters MemberFunctionAttributes_opt .

    LBRACE          reduce using rule 264 (ParameterMemberAttributes -> Parameters MemberFunctionAttributes_opt .)
    BODY            reduce using rule 264 (ParameterMemberAttributes -> Parameters MemberFunctionAttributes_opt .)


state 399

    (259) FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .

    POWER           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    DOT             reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    PLUS_PLUS       reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    MINUS_MINUS     reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    LPAREN          reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    TIMES           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    DIV             reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    MODULO          reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    PLUS            reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    MINUS           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    LEFT_SHIFT      reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    RIGHT_SHIFT     reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    IS_EQ           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    NOT_EQ          reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    LESS            reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    GREATER_EQ      reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    GREATER         reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    LESS_EQ         reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    AMPERSAND       reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    CARET           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    PIPE            reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    DOUBLE_AMPERSAND reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    QUESTION        reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    DOUBLE_PIPE     reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    ASSIGN          reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_PLUS         reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_MINUS        reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_TIMES        reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_DIV          reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_MODULO       reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_AND_BIT      reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_OR_BIT       reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_XOR_BIT      reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_LEFT         reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    EQ_RIGHT        reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    RBRACKET        reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    RANGE           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    COMMA           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    RPAREN          reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    SEMICOLON       reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    RBRACE          reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)
    COLON           reduce using rule 259 (FunctionLiteral -> ParameterMemberAttributes FunctionLiteralBody .)


state 400

    (100) BasicType2X -> LBRACKET Type RBRACKET .

    TIMES           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    LBRACKET        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    FUNCTION        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    IDENTIFIER      reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    LBRACE          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    SEMICOLON       reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    BODY            reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    COMMA           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    LPAREN          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    RPAREN          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    POWER           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    DOT             reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    PLUS_PLUS       reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    MINUS_MINUS     reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    DIV             reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    MODULO          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    PLUS            reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    MINUS           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    LEFT_SHIFT      reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    RIGHT_SHIFT     reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    IS_EQ           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    NOT_EQ          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    LESS            reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    GREATER_EQ      reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    GREATER         reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    LESS_EQ         reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    AMPERSAND       reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    CARET           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    PIPE            reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    QUESTION        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    DOUBLE_PIPE     reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    ASSIGN          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_PLUS         reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_MINUS        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_TIMES        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_DIV          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_MODULO       reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_AND_BIT      reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_OR_BIT       reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_XOR_BIT      reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_LEFT         reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    EQ_RIGHT        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    RBRACKET        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    RANGE           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    RBRACE          reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    COLON           reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)
    ELLIPSIS        reduce using rule 100 (BasicType2X -> LBRACKET Type RBRACKET .)


state 401

    (199) UnaryExpression -> MINUS_MINUS UnaryExpression .

    TIMES           reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    DIV             reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    MODULO          reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    PLUS            reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    MINUS           reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    LEFT_SHIFT      reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    IS_EQ           reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    NOT_EQ          reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    LESS            reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    GREATER_EQ      reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    GREATER         reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    LESS_EQ         reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    AMPERSAND       reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    CARET           reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    PIPE            reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    QUESTION        reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    ASSIGN          reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_PLUS         reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_MINUS        reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_TIMES        reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_DIV          reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_MODULO       reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_AND_BIT      reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_OR_BIT       reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_LEFT         reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    EQ_RIGHT        reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    COMMA           reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    RPAREN          reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    RBRACKET        reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    RANGE           reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    SEMICOLON       reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    RBRACE          reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)
    COLON           reduce using rule 199 (UnaryExpression -> MINUS_MINUS UnaryExpression .)


state 402

    (258) FunctionLiteral -> FUNCTION Type_opt . ParameterAttributes_opt FunctionLiteralBody
    (262) ParameterAttributes_opt -> . ParameterAttributes_opt
    (263) ParameterAttributes_opt -> . empty
    (477) empty -> .

    LBRACE          reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)

    empty                          shift and go to state 559
    ParameterAttributes_opt        shift and go to state 560

state 403

    (76) Type_opt -> Type .

    LBRACE          reduce using rule 76 (Type_opt -> Type .)
    BODY            reduce using rule 76 (Type_opt -> Type .)


state 404

    (77) Type_opt -> empty .

    LBRACE          reduce using rule 77 (Type_opt -> empty .)
    BODY            reduce using rule 77 (Type_opt -> empty .)


state 405

    (173) OrExpression -> OrExpression PIPE . XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 561
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    NewAnonClassExpression         shift and go to state 185

state 406

    (197) UnaryExpression -> AMPERSAND UnaryExpression .

    TIMES           reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    DIV             reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    MODULO          reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    PLUS            reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    MINUS           reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    LEFT_SHIFT      reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    IS_EQ           reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    NOT_EQ          reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    LESS            reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    GREATER_EQ      reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    GREATER         reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    LESS_EQ         reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    AMPERSAND       reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    CARET           reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    PIPE            reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    QUESTION        reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    ASSIGN          reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_PLUS         reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_MINUS        reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_TIMES        reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_DIV          reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_MODULO       reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_AND_BIT      reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_OR_BIT       reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_LEFT         reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    EQ_RIGHT        reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    COMMA           reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    RPAREN          reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    RBRACKET        reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    RANGE           reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    SEMICOLON       reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    RBRACE          reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)
    COLON           reduce using rule 197 (UnaryExpression -> AMPERSAND UnaryExpression .)


state 407

    (271) TypeidExpression -> TYPEID LPAREN . Type RPAREN
    (272) TypeidExpression -> TYPEID LPAREN . Expression RPAREN
    (75) Type -> . BasicType BasicType2_opt
    (151) Expression -> . CommaExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    DOT             shift and go to state 203
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 214
    TYPEOF          shift and go to state 47
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 189
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    Type                           shift and go to state 562
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 207
    BasicTypeX                     shift and go to state 222
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 196
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 563
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 408

    (198) UnaryExpression -> PLUS_PLUS UnaryExpression .

    TIMES           reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    DIV             reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    MODULO          reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    PLUS            reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    MINUS           reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    LEFT_SHIFT      reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    IS_EQ           reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    NOT_EQ          reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    LESS            reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    GREATER_EQ      reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    GREATER         reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    LESS_EQ         reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    AMPERSAND       reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    CARET           reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    PIPE            reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    QUESTION        reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    ASSIGN          reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_PLUS         reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_MINUS        reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_TIMES        reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_DIV          reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_MODULO       reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_AND_BIT      reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_OR_BIT       reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_LEFT         reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    EQ_RIGHT        reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    COMMA           reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    RPAREN          reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    RBRACKET        reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    RANGE           reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    SEMICOLON       reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    RBRACE          reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)
    COLON           reduce using rule 198 (UnaryExpression -> PLUS_PLUS UnaryExpression .)


state 409

    (203) UnaryExpression -> EXCLAMATION UnaryExpression .

    TIMES           reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    DIV             reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    MODULO          reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    PLUS            reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    MINUS           reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    LEFT_SHIFT      reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    IS_EQ           reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    NOT_EQ          reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    LESS            reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    GREATER_EQ      reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    GREATER         reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    LESS_EQ         reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    AMPERSAND       reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    CARET           reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    PIPE            reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    QUESTION        reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    ASSIGN          reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_PLUS         reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_MINUS        reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_TIMES        reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_DIV          reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_MODULO       reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_AND_BIT      reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_OR_BIT       reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_LEFT         reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    EQ_RIGHT        reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    COMMA           reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    RPAREN          reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    RBRACKET        reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    RANGE           reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    SEMICOLON       reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    RBRACE          reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)
    COLON           reduce using rule 203 (UnaryExpression -> EXCLAMATION UnaryExpression .)


state 410

    (231) PostfixExpression -> PostfixExpression LPAREN . ArgumentList RPAREN
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 564
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 411

    (225) PowExpression -> PostfixExpression POWER . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 565
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 412

    (230) PostfixExpression -> PostfixExpression MINUS_MINUS .

    POWER           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    DOT             reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    PLUS_PLUS       reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    MINUS_MINUS     reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    LPAREN          reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    TIMES           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    DIV             reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    MODULO          reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    PLUS            reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    MINUS           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    LEFT_SHIFT      reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    RIGHT_SHIFT     reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    IS_EQ           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    NOT_EQ          reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    LESS            reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    GREATER_EQ      reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    GREATER         reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    LESS_EQ         reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    AMPERSAND       reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    CARET           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    PIPE            reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    DOUBLE_AMPERSAND reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    QUESTION        reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    DOUBLE_PIPE     reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    ASSIGN          reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_PLUS         reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_MINUS        reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_TIMES        reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_DIV          reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_MODULO       reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_AND_BIT      reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_OR_BIT       reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_XOR_BIT      reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_LEFT         reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    EQ_RIGHT        reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    RBRACKET        reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    RANGE           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    COMMA           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    RPAREN          reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    SEMICOLON       reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    RBRACE          reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)
    COLON           reduce using rule 230 (PostfixExpression -> PostfixExpression MINUS_MINUS .)


state 413

    (229) PostfixExpression -> PostfixExpression PLUS_PLUS .

    POWER           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    DOT             reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    PLUS_PLUS       reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    MINUS_MINUS     reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    LPAREN          reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    TIMES           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    DIV             reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    MODULO          reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    PLUS            reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    MINUS           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    LEFT_SHIFT      reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    RIGHT_SHIFT     reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    IS_EQ           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    NOT_EQ          reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    LESS            reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    GREATER_EQ      reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    GREATER         reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    LESS_EQ         reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    AMPERSAND       reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    CARET           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    PIPE            reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    DOUBLE_AMPERSAND reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    QUESTION        reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    DOUBLE_PIPE     reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    ASSIGN          reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_PLUS         reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_MINUS        reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_TIMES        reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_DIV          reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_MODULO       reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_AND_BIT      reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_OR_BIT       reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_XOR_BIT      reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_LEFT         reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    EQ_RIGHT        reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    RBRACKET        reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    RANGE           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    COMMA           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    RPAREN          reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    SEMICOLON       reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    RBRACE          reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)
    COLON           reduce using rule 229 (PostfixExpression -> PostfixExpression PLUS_PLUS .)


state 414

    (227) PostfixExpression -> PostfixExpression DOT . IDENTIFIER
    (228) PostfixExpression -> PostfixExpression DOT . NewExpression
    (209) NewExpression -> . NEW AllocatorArguments_opt Type
    (210) NewExpression -> . NewExpressionWithArgs
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody

    IDENTIFIER      shift and go to state 569
    NEW             shift and go to state 568

    NewExpressionWithArgs          shift and go to state 566
    NewExpression                  shift and go to state 567
    NewAnonClassExpression         shift and go to state 185

state 415

    (211) NewExpressionWithArgs -> NEW AllocatorArguments_opt . Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> NEW AllocatorArguments_opt . Type LPAREN ArgumentList_opt RPAREN
    (412) NewAnonClassExpression -> NEW AllocatorArguments_opt . CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    CLASS           shift and go to state 571
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 124
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    Type                           shift and go to state 570

state 416

    (214) AllocatorArguments -> LPAREN . ArgumentList_opt RPAREN
    (217) ArgumentList_opt -> . ArgumentList
    (218) ArgumentList_opt -> . empty
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (477) empty -> .
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RPAREN          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 366
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 368
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ArgumentList_opt               shift and go to state 572
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 417

    (215) AllocatorArguments_opt -> AllocatorArguments .

    CLASS           reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    DOT             reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    BOOL            reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    SHORT           reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    USHORT          reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    INT             reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    UINT            reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    LONG            reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    ULONG           reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    CHAR            reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    FLOAT           reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    VOID            reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    IDENTIFIER      reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)
    TYPEOF          reduce using rule 215 (AllocatorArguments_opt -> AllocatorArguments .)


state 418

    (216) AllocatorArguments_opt -> empty .

    CLASS           reduce using rule 216 (AllocatorArguments_opt -> empty .)
    DOT             reduce using rule 216 (AllocatorArguments_opt -> empty .)
    BOOL            reduce using rule 216 (AllocatorArguments_opt -> empty .)
    SHORT           reduce using rule 216 (AllocatorArguments_opt -> empty .)
    USHORT          reduce using rule 216 (AllocatorArguments_opt -> empty .)
    INT             reduce using rule 216 (AllocatorArguments_opt -> empty .)
    UINT            reduce using rule 216 (AllocatorArguments_opt -> empty .)
    LONG            reduce using rule 216 (AllocatorArguments_opt -> empty .)
    ULONG           reduce using rule 216 (AllocatorArguments_opt -> empty .)
    CHAR            reduce using rule 216 (AllocatorArguments_opt -> empty .)
    FLOAT           reduce using rule 216 (AllocatorArguments_opt -> empty .)
    VOID            reduce using rule 216 (AllocatorArguments_opt -> empty .)
    IDENTIFIER      reduce using rule 216 (AllocatorArguments_opt -> empty .)
    TYPEOF          reduce using rule 216 (AllocatorArguments_opt -> empty .)


state 419

    (235) PrimaryExpression -> DOT IDENTIFIER .
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList

  ! reduce/reduce conflict for LPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    POWER           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    PLUS_PLUS       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    MINUS_MINUS     reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    DIV             reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    MODULO          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    PLUS            reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    MINUS           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    IS_EQ           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    NOT_EQ          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    LESS            reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    GREATER_EQ      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    GREATER         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    LESS_EQ         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    AMPERSAND       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    CARET           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    PIPE            reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    QUESTION        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    ASSIGN          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_PLUS         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_MINUS        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_TIMES        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_DIV          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_MODULO       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_LEFT         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_RIGHT        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    RANGE           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    COMMA           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    RBRACE          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    COLON           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    FUNCTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RBRACKET        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 91

  ! DOT             [ reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .) ]
  ! RBRACKET        [ reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .) ]
  ! LBRACKET        [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 420

    (232) PostfixExpression -> BasicType LPAREN . ArgumentList_opt RPAREN
    (217) ArgumentList_opt -> . ArgumentList
    (218) ArgumentList_opt -> . empty
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (477) empty -> .
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RPAREN          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 366
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 368
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ArgumentList_opt               shift and go to state 573
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 421

    (222) CastExpression -> CAST LPAREN . Type RPAREN UnaryExpression
    (223) CastExpression -> CAST LPAREN . RPAREN UnaryExpression
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    RPAREN          shift and go to state 574
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    Type                           shift and go to state 575
    BasicType                      shift and go to state 124
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33

state 422

    (208) ComplementExpression -> TILDE UnaryExpression .

    TIMES           reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    DIV             reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    MODULO          reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    PLUS            reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    MINUS           reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    LEFT_SHIFT      reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    IS_EQ           reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    NOT_EQ          reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    LESS            reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    GREATER_EQ      reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    GREATER         reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    LESS_EQ         reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    AMPERSAND       reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    CARET           reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    PIPE            reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    QUESTION        reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    ASSIGN          reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_PLUS         reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_MINUS        reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_TIMES        reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_DIV          reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_MODULO       reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_AND_BIT      reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_OR_BIT       reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_LEFT         reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    EQ_RIGHT        reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    COMMA           reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    RBRACKET        reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    SEMICOLON       reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    RANGE           reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    RPAREN          reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    RBRACE          reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)
    COLON           reduce using rule 208 (ComplementExpression -> TILDE UnaryExpression .)


state 423

    (104) IdentifierList -> IDENTIFIER LBRACKET . AssignExpression RBRACKET DOT IdentifierList
    (256) ArrayLiteral -> IDENTIFIER LBRACKET . INUMBER RBRACKET
    (257) ArrayLiteral -> IDENTIFIER LBRACKET . AssignExpression RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    INUMBER         shift and go to state 576
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 577

state 424

    (171) AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND . OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 578
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    NewAnonClassExpression         shift and go to state 185

state 425

    (251) PrimaryExpression -> BasicTypeX LPAREN . ArgumentList_opt RPAREN
    (217) ArgumentList_opt -> . ArgumentList
    (218) ArgumentList_opt -> . empty
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (477) empty -> .
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RPAREN          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 366
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 368
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ArgumentList_opt               shift and go to state 579
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 426

    (250) PrimaryExpression -> BasicTypeX DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 580


state 427

    (175) XorExpression -> XorExpression CARET . AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 581
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    NewAnonClassExpression         shift and go to state 185

state 428

    (269) MixinExpression -> MIXIN LPAREN . AssignExpression RPAREN
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 582

state 429

    (200) UnaryExpression -> TIMES UnaryExpression .

    TIMES           reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    DIV             reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    MODULO          reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    PLUS            reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    MINUS           reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    LEFT_SHIFT      reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    IS_EQ           reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    NOT_EQ          reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    LESS            reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    GREATER_EQ      reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    GREATER         reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    LESS_EQ         reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    AMPERSAND       reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    CARET           reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    PIPE            reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    QUESTION        reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    ASSIGN          reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_PLUS         reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_MINUS        reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_TIMES        reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_DIV          reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_MODULO       reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_AND_BIT      reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_OR_BIT       reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_LEFT         reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    EQ_RIGHT        reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    COMMA           reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    RPAREN          reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    RBRACKET        reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    RANGE           reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    SEMICOLON       reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    RBRACE          reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)
    COLON           reduce using rule 200 (UnaryExpression -> TIMES UnaryExpression .)


state 430

    (253) PrimaryExpression -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 583


state 431

    (205) UnaryExpression -> LPAREN Type . RPAREN DOT IDENTIFIER

    RPAREN          shift and go to state 584


state 432

    (191) AddExpression -> AddExpression PLUS . MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 585
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 433

    (192) AddExpression -> AddExpression MINUS . MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 586
    ParameterMemberAttributes      shift and go to state 187
    NewAnonClassExpression         shift and go to state 185

state 434

    (267) LIT_STRPlus -> LIT_STR LIT_STRPlus .

    POWER           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    DOT             reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    PLUS_PLUS       reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    MINUS_MINUS     reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    LPAREN          reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    TIMES           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    DIV             reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    MODULO          reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    PLUS            reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    MINUS           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    LEFT_SHIFT      reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    RIGHT_SHIFT     reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    IS_EQ           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    NOT_EQ          reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    LESS            reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    GREATER_EQ      reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    GREATER         reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    LESS_EQ         reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    AMPERSAND       reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    CARET           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    PIPE            reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    DOUBLE_AMPERSAND reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    QUESTION        reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    DOUBLE_PIPE     reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    ASSIGN          reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_PLUS         reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_MINUS        reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_TIMES        reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_DIV          reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_MODULO       reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_AND_BIT      reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_OR_BIT       reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_XOR_BIT      reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_LEFT         reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    EQ_RIGHT        reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    RBRACKET        reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    RANGE           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    COMMA           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    RPAREN          reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    SEMICOLON       reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    RBRACE          reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)
    COLON           reduce using rule 267 (LIT_STRPlus -> LIT_STR LIT_STRPlus .)


state 435

    (98) BasicType2X -> LBRACKET AssignExpression RBRACKET .

    TIMES           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    LBRACKET        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    FUNCTION        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    IDENTIFIER      reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    LBRACE          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    SEMICOLON       reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    BODY            reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    COMMA           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    LPAREN          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    RPAREN          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    POWER           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    DOT             reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    PLUS_PLUS       reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    MINUS_MINUS     reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    DIV             reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    MODULO          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    PLUS            reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    MINUS           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    LEFT_SHIFT      reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    IS_EQ           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    NOT_EQ          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    LESS            reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    GREATER_EQ      reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    GREATER         reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    LESS_EQ         reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    AMPERSAND       reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    CARET           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    PIPE            reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    QUESTION        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    DOUBLE_PIPE     reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    ASSIGN          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_PLUS         reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_MINUS        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_TIMES        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_DIV          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_MODULO       reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_AND_BIT      reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_OR_BIT       reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_XOR_BIT      reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_LEFT         reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    EQ_RIGHT        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    RBRACKET        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    RANGE           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    RBRACE          reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    COLON           reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)
    ELLIPSIS        reduce using rule 98 (BasicType2X -> LBRACKET AssignExpression RBRACKET .)


state 436

    (99) BasicType2X -> LBRACKET AssignExpression RANGE . AssignExpression RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 587

state 437

    (61) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX . RPAREN
    (62) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX . RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX . RPAREN AltDeclaratorSuffixes

    RPAREN          shift and go to state 588


state 438

    (66) AltDeclaratorX -> AltDeclarator .

    RPAREN          reduce using rule 66 (AltDeclaratorX -> AltDeclarator .)


state 439

    (64) AltDeclaratorX -> BasicType2_opt . IDENTIFIER
    (65) AltDeclaratorX -> BasicType2_opt . IDENTIFIER AltFuncDeclaratorSuffix
    (60) AltDeclarator -> BasicType2_opt . IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes

    IDENTIFIER      shift and go to state 589
    LPAREN          shift and go to state 235


state 440

    (443) FuncDeclarator -> BasicType2_opt IDENTIFIER FuncDeclaratorSuffix .

    SEMICOLON       reduce using rule 443 (FuncDeclarator -> BasicType2_opt IDENTIFIER FuncDeclaratorSuffix .)
    LBRACE          reduce using rule 443 (FuncDeclarator -> BasicType2_opt IDENTIFIER FuncDeclaratorSuffix .)
    BODY            reduce using rule 443 (FuncDeclarator -> BasicType2_opt IDENTIFIER FuncDeclaratorSuffix .)


state 441

    (71) AltDeclaratorSuffix -> LBRACKET . RBRACKET
    (72) AltDeclaratorSuffix -> LBRACKET . AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> LBRACKET . Type RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (75) Type -> . BasicType BasicType2_opt
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RBRACKET        shift and go to state 591
    DOT             shift and go to state 203
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 214
    TYPEOF          shift and go to state 47
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 189
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    Type                           shift and go to state 590
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 207
    BasicTypeX                     shift and go to state 222
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 196
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 592

state 442

    (67) AltDeclaratorSuffixes -> AltDeclaratorSuffix .
    (68) AltDeclaratorSuffixes -> AltDeclaratorSuffix . AltDeclaratorSuffixes
    (67) AltDeclaratorSuffixes -> . AltDeclaratorSuffix
    (68) AltDeclaratorSuffixes -> . AltDeclaratorSuffix AltDeclaratorSuffixes
    (71) AltDeclaratorSuffix -> . LBRACKET RBRACKET
    (72) AltDeclaratorSuffix -> . LBRACKET AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> . LBRACKET Type RBRACKET

    ASSIGN          reduce using rule 67 (AltDeclaratorSuffixes -> AltDeclaratorSuffix .)
    COMMA           reduce using rule 67 (AltDeclaratorSuffixes -> AltDeclaratorSuffix .)
    SEMICOLON       reduce using rule 67 (AltDeclaratorSuffixes -> AltDeclaratorSuffix .)
    RPAREN          reduce using rule 67 (AltDeclaratorSuffixes -> AltDeclaratorSuffix .)
    ELLIPSIS        reduce using rule 67 (AltDeclaratorSuffixes -> AltDeclaratorSuffix .)
    LBRACKET        shift and go to state 441

    AltDeclaratorSuffix            shift and go to state 442
    AltDeclaratorSuffixes          shift and go to state 593

state 443

    (60) AltDeclarator -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .

    ASSIGN          reduce using rule 60 (AltDeclarator -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .)
    COMMA           reduce using rule 60 (AltDeclarator -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .)
    SEMICOLON       reduce using rule 60 (AltDeclarator -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .)
    ELLIPSIS        reduce using rule 60 (AltDeclarator -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .)
    RPAREN          reduce using rule 60 (AltDeclarator -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .)


state 444

    (47) DeclaratorIdentifierList -> DeclaratorIdentifier .
    (48) DeclaratorIdentifierList -> DeclaratorIdentifier . COMMA DeclaratorIdentifierList

    SEMICOLON       reduce using rule 47 (DeclaratorIdentifierList -> DeclaratorIdentifier .)
    COMMA           shift and go to state 594


state 445

    (50) DeclaratorIdentifier -> AltDeclaratorIdentifier .

    COMMA           reduce using rule 50 (DeclaratorIdentifier -> AltDeclaratorIdentifier .)
    SEMICOLON       reduce using rule 50 (DeclaratorIdentifier -> AltDeclaratorIdentifier .)


state 446

    (42) Declarators -> DeclaratorInitializer COMMA DeclaratorIdentifierList .

    SEMICOLON       reduce using rule 42 (Declarators -> DeclaratorInitializer COMMA DeclaratorIdentifierList .)


state 447

    (55) AltDeclaratorIdentifier -> BasicType2_opt . IDENTIFIER AltDeclaratorSuffixes
    (56) AltDeclaratorIdentifier -> BasicType2_opt . IDENTIFIER AltDeclaratorSuffixes ASSIGN Initializer

    IDENTIFIER      shift and go to state 595


state 448

    (51) VarDeclaratorIdentifier -> IDENTIFIER .
    (52) VarDeclaratorIdentifier -> IDENTIFIER . ASSIGN Initializer

    COMMA           reduce using rule 51 (VarDeclaratorIdentifier -> IDENTIFIER .)
    SEMICOLON       reduce using rule 51 (VarDeclaratorIdentifier -> IDENTIFIER .)
    ASSIGN          shift and go to state 596


state 449

    (49) DeclaratorIdentifier -> VarDeclaratorIdentifier .

    COMMA           reduce using rule 49 (DeclaratorIdentifier -> VarDeclaratorIdentifier .)
    SEMICOLON       reduce using rule 49 (DeclaratorIdentifier -> VarDeclaratorIdentifier .)


state 450

    (53) AltDeclaratorIdentifier -> BasicType2 . IDENTIFIER AltDeclaratorSuffixes_opt
    (54) AltDeclaratorIdentifier -> BasicType2 . IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN Initializer
    (94) BasicType2_opt -> BasicType2 .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 597

  ! IDENTIFIER      [ reduce using rule 94 (BasicType2_opt -> BasicType2 .) ]


state 451

    (45) DeclaratorInitializer -> AltDeclarator ASSIGN Initializer .

    COMMA           reduce using rule 45 (DeclaratorInitializer -> AltDeclarator ASSIGN Initializer .)
    SEMICOLON       reduce using rule 45 (DeclaratorInitializer -> AltDeclarator ASSIGN Initializer .)


state 452

    (104) IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET . DOT IdentifierList

    DOT             shift and go to state 598


state 453

    (141) Typeof -> TYPEOF LPAREN RETURN RPAREN .

    DOT             reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    POWER           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    PLUS_PLUS       reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    MINUS_MINUS     reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    LPAREN          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    TIMES           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    DIV             reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    MODULO          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    PLUS            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    MINUS           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    LEFT_SHIFT      reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    RIGHT_SHIFT     reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    IS_EQ           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    NOT_EQ          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    LESS            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    GREATER_EQ      reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    GREATER         reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    LESS_EQ         reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    AMPERSAND       reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    CARET           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    PIPE            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    QUESTION        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    DOUBLE_PIPE     reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    ASSIGN          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_PLUS         reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_MINUS        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_TIMES        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_DIV          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_MODULO       reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_AND_BIT      reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_OR_BIT       reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_XOR_BIT      reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_LEFT         reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    EQ_RIGHT        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    COMMA           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    COLON           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    LBRACE          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    SEMICOLON       reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    RPAREN          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    RBRACKET        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    RANGE           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    RBRACE          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    LBRACKET        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    FUNCTION        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    IDENTIFIER      reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    ELLIPSIS        reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    BODY            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    BOOL            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    SHORT           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    USHORT          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    INT             reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    UINT            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    LONG            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    ULONG           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    CHAR            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    FLOAT           reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    VOID            reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)
    TYPEOF          reduce using rule 141 (Typeof -> TYPEOF LPAREN RETURN RPAREN .)


state 454

    (140) Typeof -> TYPEOF LPAREN Expression RPAREN .

    DOT             reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    POWER           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    PLUS_PLUS       reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    MINUS_MINUS     reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    TIMES           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    DIV             reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    MODULO          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    PLUS            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    MINUS           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    LEFT_SHIFT      reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    IS_EQ           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    NOT_EQ          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    LESS            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    GREATER_EQ      reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    GREATER         reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    LESS_EQ         reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    AMPERSAND       reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    CARET           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    PIPE            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    QUESTION        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    DOUBLE_PIPE     reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_PLUS         reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_MINUS        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_TIMES        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_DIV          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_MODULO       reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_AND_BIT      reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_OR_BIT       reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_XOR_BIT      reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_LEFT         reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    EQ_RIGHT        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    COMMA           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    COLON           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    RBRACKET        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    RANGE           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    LBRACKET        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    FUNCTION        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    IDENTIFIER      reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    ELLIPSIS        reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    BODY            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    BOOL            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    SHORT           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    USHORT          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    INT             reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    UINT            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    LONG            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    ULONG           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    CHAR            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    FLOAT           reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    VOID            reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)
    TYPEOF          reduce using rule 140 (Typeof -> TYPEOF LPAREN Expression RPAREN .)


state 455

    (153) CommaExpression -> AssignExpression COMMA . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 599
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 456

    (399) BaseClassList -> COLON SuperClass COMMA . Interfaces
    (404) Interfaces -> . Interface
    (405) Interfaces -> . Interface COMMA Interfaces
    (406) Interface -> . BasicType
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    Interfaces                     shift and go to state 600
    BasicType                      shift and go to state 601
    BasicTypeX                     shift and go to state 38
    IdentifierList                 shift and go to state 33
    Interface                      shift and go to state 259
    Typeof                         shift and go to state 42

state 457

    (405) Interfaces -> Interface COMMA . Interfaces
    (404) Interfaces -> . Interface
    (405) Interfaces -> . Interface COMMA Interfaces
    (406) Interface -> . BasicType
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    Interfaces                     shift and go to state 602
    BasicType                      shift and go to state 601
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    Interface                      shift and go to state 259

state 458

    (408) Allocator -> NEW Parameters FunctionBody .

    SEMICOLON       reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    NEW             reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    DELETE          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    ALIAS           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    MIXIN           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    ENUM            reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    IMPORT          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    STATIC          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    PRIVATE         reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    PROTECTED       reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    PUBLIC          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    CLASS           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    UNION           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    EXTERN          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    FINAL           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    AUTO            reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    CONST           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    IMMUTABLE       reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    DOT             reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    BOOL            reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    SHORT           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    USHORT          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    INT             reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    UINT            reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    LONG            reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    ULONG           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    CHAR            reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    FLOAT           reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    VOID            reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    IDENTIFIER      reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    TYPEOF          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)
    RBRACE          reduce using rule 408 (Allocator -> NEW Parameters FunctionBody .)


state 459

    (407) Allocator -> NEW Parameters SEMICOLON .

    SEMICOLON       reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    NEW             reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    DELETE          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    ALIAS           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    MIXIN           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    ENUM            reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    IMPORT          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    STATIC          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    PRIVATE         reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    PROTECTED       reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    PUBLIC          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    CLASS           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    UNION           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    EXTERN          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    FINAL           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    AUTO            reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    CONST           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    IMMUTABLE       reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    DOT             reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    BOOL            reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    SHORT           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    USHORT          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    INT             reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    UINT            reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    LONG            reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    ULONG           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    CHAR            reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    FLOAT           reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    VOID            reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    IDENTIFIER      reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    TYPEOF          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)
    RBRACE          reduce using rule 407 (Allocator -> NEW Parameters SEMICOLON .)


state 460

    (411) AliasThis -> ALIAS IDENTIFIER THIS . SEMICOLON

    SEMICOLON       shift and go to state 603


state 461

    (147) DeclarationBlock -> LBRACE DeclDefs_opt . RBRACE

    RBRACE          shift and go to state 604


state 462

    (33) MixinDeclaration -> MIXIN LPAREN AssignExpression . RPAREN SEMICOLON

    RPAREN          shift and go to state 605


state 463

    (410) Deallocator -> DELETE Parameters FunctionBody .

    SEMICOLON       reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    NEW             reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    DELETE          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    ALIAS           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    MIXIN           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    ENUM            reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    IMPORT          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    STATIC          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    PRIVATE         reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    PROTECTED       reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    PUBLIC          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    CLASS           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    UNION           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    EXTERN          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    FINAL           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    AUTO            reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    CONST           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    IMMUTABLE       reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    DOT             reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    BOOL            reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    SHORT           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    USHORT          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    INT             reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    UINT            reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    LONG            reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    ULONG           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    CHAR            reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    FLOAT           reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    VOID            reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    IDENTIFIER      reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    TYPEOF          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)
    RBRACE          reduce using rule 410 (Deallocator -> DELETE Parameters FunctionBody .)


state 464

    (409) Deallocator -> DELETE Parameters SEMICOLON .

    SEMICOLON       reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    NEW             reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    DELETE          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    ALIAS           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    MIXIN           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    ENUM            reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    IMPORT          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    STATIC          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    PRIVATE         reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    PROTECTED       reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    PUBLIC          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    CLASS           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    UNION           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    EXTERN          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    FINAL           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    AUTO            reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    CONST           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    IMMUTABLE       reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    DOT             reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    BOOL            reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    SHORT           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    USHORT          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    INT             reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    UINT            reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    LONG            reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    ULONG           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    CHAR            reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    FLOAT           reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    VOID            reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    IDENTIFIER      reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    TYPEOF          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)
    RBRACE          reduce using rule 409 (Deallocator -> DELETE Parameters SEMICOLON .)


state 465

    (438) AnonymousEnumMember -> Type IDENTIFIER ASSIGN . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 606

state 466

    (430) EnumMember -> IDENTIFIER ASSIGN AssignExpression .

    COMMA           reduce using rule 430 (EnumMember -> IDENTIFIER ASSIGN AssignExpression .)
    RBRACE          reduce using rule 430 (EnumMember -> IDENTIFIER ASSIGN AssignExpression .)


state 467

    (428) EnumMembers -> EnumMember COMMA EnumMembers .

    RBRACE          reduce using rule 428 (EnumMembers -> EnumMember COMMA EnumMembers .)


state 468

    (436) AnonymousEnumMembers -> AnonymousEnumMember COMMA AnonymousEnumMembers .

    RBRACE          reduce using rule 436 (AnonymousEnumMembers -> AnonymousEnumMember COMMA AnonymousEnumMembers .)


state 469

    (437) AnonymousEnumMember -> EnumMember .

    COMMA           reduce using rule 437 (AnonymousEnumMember -> EnumMember .)
    RBRACE          reduce using rule 437 (AnonymousEnumMember -> EnumMember .)


state 470

    (431) AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers . RBRACE

    RBRACE          shift and go to state 607


state 471

    (424) EnumBody -> LBRACE EnumMembers RBRACE .

    ALIAS           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    ENUM            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    IMPORT          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    STATIC          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    CLASS           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    UNION           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    EXTERN          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    FINAL           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    AUTO            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    CONST           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    IMMUTABLE       reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    DOT             reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    BOOL            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    SHORT           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    USHORT          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    INT             reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    UINT            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    LONG            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    ULONG           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    CHAR            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    FLOAT           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    VOID            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    IDENTIFIER      reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    TYPEOF          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    $end            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    SEMICOLON       reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    NEW             reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    DELETE          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    MIXIN           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    PRIVATE         reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    PROTECTED       reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    PUBLIC          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    RBRACE          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    CASE            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    DEFAULT         reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    LBRACE          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    IF              reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    WHILE           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    DO              reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    FOR             reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    SWITCH          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    CONTINUE        reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    BREAK           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    RETURN          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    GOTO            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    WITH            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    LPAREN          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    FOREACH         reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    FOREACH_REVERSE reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    AMPERSAND       reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    PLUS_PLUS       reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    MINUS_MINUS     reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    TIMES           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    MINUS           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    PLUS            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    EXCLAMATION     reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    TILDE           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    CAST            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    THIS            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    NULL            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    TRUE            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    FALSE           reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    DOLLAR          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    INUMBER         reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    DNUMBER         reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    LIT_CHAR        reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    LIT_STR         reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    LBRACKET        reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    FUNCTION        reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    TYPEID          reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    BODY            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)
    ELSE            reduce using rule 424 (EnumBody -> LBRACE EnumMembers RBRACE .)


state 472

    (421) EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .

    SEMICOLON       reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    CASE            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    DEFAULT         reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    LBRACE          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    IDENTIFIER      reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    IF              reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    WHILE           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    DO              reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    FOR             reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    SWITCH          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    FINAL           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    CONTINUE        reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    BREAK           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    RETURN          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    GOTO            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    WITH            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    MIXIN           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    IMPORT          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    STATIC          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    LPAREN          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    ALIAS           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    ENUM            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    EXTERN          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    AUTO            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    CONST           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    IMMUTABLE       reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    FOREACH         reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    FOREACH_REVERSE reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    CLASS           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    UNION           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    AMPERSAND       reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    PLUS_PLUS       reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    MINUS_MINUS     reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    TIMES           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    MINUS           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    PLUS            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    EXCLAMATION     reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    TILDE           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    CAST            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    DOT             reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    THIS            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    NULL            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    TRUE            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    FALSE           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    DOLLAR          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    INUMBER         reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    DNUMBER         reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    LIT_CHAR        reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    LIT_STR         reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    LBRACKET        reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    FUNCTION        reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    NEW             reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    BOOL            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    SHORT           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    USHORT          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    INT             reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    UINT            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    LONG            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    ULONG           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    CHAR            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    FLOAT           reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    VOID            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    TYPEOF          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    TYPEID          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    BODY            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    RBRACE          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    DELETE          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    PRIVATE         reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    PROTECTED       reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    PUBLIC          reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    ELSE            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)
    $end            reduce using rule 421 (EnumDeclaration -> ENUM IDENTIFIER COLON EnumBaseType EnumBody .)


state 473

    (133) AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .

    SEMICOLON       reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    CASE            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    DEFAULT         reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    LBRACE          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    IDENTIFIER      reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    IF              reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    WHILE           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    DO              reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    FOR             reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    SWITCH          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    FINAL           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    CONTINUE        reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    BREAK           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    RETURN          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    GOTO            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    WITH            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    MIXIN           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    IMPORT          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    STATIC          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    LPAREN          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    ALIAS           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    ENUM            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    EXTERN          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    AUTO            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    CONST           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    IMMUTABLE       reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    FOREACH         reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    FOREACH_REVERSE reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    CLASS           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    UNION           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    AMPERSAND       reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    PLUS_PLUS       reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    MINUS_MINUS     reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    TIMES           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    MINUS           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    PLUS            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    EXCLAMATION     reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    TILDE           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    CAST            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    DOT             reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    THIS            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    NULL            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    TRUE            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    FALSE           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    DOLLAR          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    INUMBER         reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    DNUMBER         reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    LIT_CHAR        reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    LIT_STR         reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    LBRACKET        reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    FUNCTION        reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    NEW             reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    BOOL            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    SHORT           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    USHORT          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    INT             reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    UINT            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    LONG            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    ULONG           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    CHAR            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    FLOAT           reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    VOID            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    TYPEOF          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    TYPEID          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    BODY            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    RBRACE          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    ELSE            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    DELETE          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    PRIVATE         reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    PROTECTED       reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    PUBLIC          reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)
    $end            reduce using rule 133 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType Declarators SEMICOLON .)


state 474

    (134) AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .

    SEMICOLON       reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CASE            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DEFAULT         reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LBRACE          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IDENTIFIER      reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IF              reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    WHILE           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DO              reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FOR             reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    SWITCH          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FINAL           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CONTINUE        reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    BREAK           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    RETURN          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    GOTO            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    WITH            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    MIXIN           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IMPORT          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    STATIC          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LPAREN          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ALIAS           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ENUM            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    EXTERN          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    AUTO            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CONST           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    IMMUTABLE       reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FOREACH         reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FOREACH_REVERSE reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CLASS           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    UNION           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    AMPERSAND       reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PLUS_PLUS       reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    MINUS_MINUS     reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TIMES           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    MINUS           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PLUS            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    EXCLAMATION     reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TILDE           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CAST            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DOT             reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    THIS            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    NULL            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TRUE            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FALSE           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DOLLAR          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    INUMBER         reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DNUMBER         reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LIT_CHAR        reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LIT_STR         reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LBRACKET        reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FUNCTION        reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    NEW             reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    BOOL            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    SHORT           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    USHORT          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    INT             reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    UINT            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    LONG            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ULONG           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    CHAR            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    FLOAT           reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    VOID            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TYPEOF          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    TYPEID          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    BODY            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    RBRACE          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    ELSE            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    DELETE          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PRIVATE         reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PROTECTED       reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    PUBLIC          reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)
    $end            reduce using rule 134 (AliasDeclaration -> ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON .)


state 475

    (138) AliasDeclarationY -> IDENTIFIER ASSIGN StorageClasses_opt Type .

    SEMICOLON       reduce using rule 138 (AliasDeclarationY -> IDENTIFIER ASSIGN StorageClasses_opt Type .)
    COMMA           reduce using rule 138 (AliasDeclarationY -> IDENTIFIER ASSIGN StorageClasses_opt Type .)


state 476

    (29) ImportBindList -> ImportBind COMMA . ImportBindList
    (28) ImportBindList -> . ImportBind
    (29) ImportBindList -> . ImportBind COMMA ImportBindList
    (30) ImportBind -> . IDENTIFIER
    (31) ImportBind -> . IDENTIFIER ASSIGN IDENTIFIER

    IDENTIFIER      shift and go to state 292

    ImportBind                     shift and go to state 291
    ImportBindList                 shift and go to state 608

state 477

    (31) ImportBind -> IDENTIFIER ASSIGN . IDENTIFIER

    IDENTIFIER      shift and go to state 609


state 478

    (314) StatementList -> Statement StatementList .

    RBRACE          reduce using rule 314 (StatementList -> Statement StatementList .)


state 479

    (386) WithStatement -> WITH LPAREN . Expression RPAREN ScopeStatement
    (387) WithStatement -> WITH LPAREN . Symbol RPAREN ScopeStatement
    (151) Expression -> . CommaExpression
    (473) Symbol -> . SymbolTail
    (474) Symbol -> . DOT SymbolTail
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (475) SymbolTail -> . IDENTIFIER
    (476) SymbolTail -> . IDENTIFIER DOT SymbolTail
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    DOT             shift and go to state 611
    IDENTIFIER      shift and go to state 614
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    SymbolTail                     shift and go to state 610
    Symbol                         shift and go to state 612
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 613
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    TypeidExpression               shift and go to state 220
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 480

    (384) GotoStatement -> GOTO CASE . SEMICOLON
    (385) GotoStatement -> GOTO CASE . Expression SEMICOLON
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    SEMICOLON       shift and go to state 615
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 616
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 481

    (383) GotoStatement -> GOTO DEFAULT . SEMICOLON

    SEMICOLON       shift and go to state 617


state 482

    (382) GotoStatement -> GOTO IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 618


state 483

    (312) BlockStatement -> LBRACE StatementList RBRACE .

    ALIAS           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    ENUM            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    IMPORT          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    STATIC          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    CLASS           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    UNION           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EXTERN          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    FINAL           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    AUTO            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    CONST           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    IMMUTABLE       reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DOT             reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    BOOL            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    SHORT           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    USHORT          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    INT             reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    UINT            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LONG            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    ULONG           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    CHAR            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    FLOAT           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    VOID            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    IDENTIFIER      reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    TYPEOF          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    $end            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    SEMICOLON       reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    NEW             reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DELETE          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    MIXIN           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    PRIVATE         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    PROTECTED       reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    PUBLIC          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    RBRACE          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    CASE            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DEFAULT         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LBRACE          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    IF              reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    WHILE           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DO              reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    FOR             reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    SWITCH          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    CONTINUE        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    BREAK           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    RETURN          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    GOTO            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    WITH            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LPAREN          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    FOREACH         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    FOREACH_REVERSE reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    AMPERSAND       reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    PLUS_PLUS       reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    MINUS_MINUS     reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    TIMES           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    MINUS           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    PLUS            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EXCLAMATION     reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    TILDE           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    CAST            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    THIS            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    NULL            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    TRUE            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    FALSE           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DOLLAR          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    INUMBER         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DNUMBER         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LIT_CHAR        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LIT_STR         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LBRACKET        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    FUNCTION        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    TYPEID          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    BODY            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    POWER           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DIV             reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    MODULO          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LEFT_SHIFT      reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    RIGHT_SHIFT     reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    IS_EQ           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    NOT_EQ          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LESS            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    GREATER_EQ      reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    GREATER         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    LESS_EQ         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    CARET           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    PIPE            reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DOUBLE_AMPERSAND reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    QUESTION        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    DOUBLE_PIPE     reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    ASSIGN          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_PLUS         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_MINUS        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_TIMES        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_DIV          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_MODULO       reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_AND_BIT      reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_OR_BIT       reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_XOR_BIT      reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_LEFT         reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    EQ_RIGHT        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    COMMA           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    RBRACKET        reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    RANGE           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    RPAREN          reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)
    COLON           reduce using rule 312 (BlockStatement -> LBRACE StatementList RBRACE .)


state 484

    (378) Expression_opt -> empty .

    SEMICOLON       reduce using rule 378 (Expression_opt -> empty .)


state 485

    (377) Expression_opt -> Expression .

    SEMICOLON       reduce using rule 377 (Expression_opt -> Expression .)


state 486

    (381) ReturnStatement -> RETURN Expression_opt . SEMICOLON

    SEMICOLON       shift and go to state 619


state 487

    (343) AggregateForeach -> Foreach LPAREN . ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (347) ForeachTypeList -> . ForeachType
    (348) ForeachTypeList -> . ForeachType COMMA ForeachTypeList
    (349) ForeachType -> . ForeachTypeAttributes_opt BasicType Declarator
    (350) ForeachType -> . ForeachTypeAttributes_opt IDENTIFIER
    (351) ForeachType -> . ForeachTypeAttributes_opt ALIAS IDENTIFIER
    (352) ForeachTypeAttributes_opt -> . ForeachTypeAttributes
    (353) ForeachTypeAttributes_opt -> . empty
    (354) ForeachTypeAttributes -> . ForeachTypeAttribute
    (355) ForeachTypeAttributes -> . ForeachTypeAttribute ForeachTypeAttributes_opt
    (477) empty -> .
    (356) ForeachTypeAttribute -> . ENUM

    IDENTIFIER      reduce using rule 477 (empty -> .)
    ALIAS           reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ENUM            shift and go to state 512

    ForeachType                    shift and go to state 620
    ForeachTypeAttributes_opt      shift and go to state 515
    ForeachTypeAttribute           shift and go to state 511
    ForeachTypeAttributes          shift and go to state 516
    ForeachTypeList                shift and go to state 621
    empty                          shift and go to state 622

state 488

    (374) FinalSwitchStatement -> FINAL SWITCH . LPAREN Expression RPAREN ScopeStatement

    LPAREN          shift and go to state 623


state 489

    (363) CaseStatement -> CASE ArgumentList . COLON ScopeStatementList

    COLON           shift and go to state 624


state 490

    (364) CaseRangeStatement -> CASE FirstExp . COLON RANGE LastExp COLON ScopeStatementList

    COLON           shift and go to state 625


state 491

    (219) ArgumentList -> AssignExpression .
    (220) ArgumentList -> AssignExpression . COMMA
    (221) ArgumentList -> AssignExpression . COMMA ArgumentList
    (365) FirstExp -> AssignExpression .

  ! reduce/reduce conflict for COLON resolved using rule 219 (ArgumentList -> AssignExpression .)
    COLON           reduce using rule 219 (ArgumentList -> AssignExpression .)
    COMMA           shift and go to state 532

  ! COLON           [ reduce using rule 365 (FirstExp -> AssignExpression .) ]


state 492

    (331) ForStatement -> FOR LPAREN . Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (335) Initialize -> . SEMICOLON
    (336) Initialize -> . NoScopeNonEmptyStatement
    (276) NoScopeNonEmptyStatement -> . NonEmptyStatement
    (277) NoScopeNonEmptyStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    SEMICOLON       shift and go to state 626
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 508
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    Initialize                     shift and go to state 627
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 509
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    NoScopeNonEmptyStatement       shift and go to state 628
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 493

    (379) ContinueStatement -> CONTINUE IDENTIFIER_opt . SEMICOLON

    SEMICOLON       shift and go to state 629


state 494

    (375) IDENTIFIER_opt -> IDENTIFIER .

    SEMICOLON       reduce using rule 375 (IDENTIFIER_opt -> IDENTIFIER .)


state 495

    (376) IDENTIFIER_opt -> empty .

    SEMICOLON       reduce using rule 376 (IDENTIFIER_opt -> empty .)


state 496

    (388) MixinStatement -> MIXIN LPAREN . AssignExpression RPAREN SEMICOLON
    (269) MixinExpression -> MIXIN LPAREN . AssignExpression RPAREN
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    MulExpression                  shift and go to state 184
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 630

state 497

    (306) ScopeStatement -> BlockStatement .
    (265) FunctionLiteralBody -> BlockStatement .

  ! reduce/reduce conflict for DOT resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for TIMES resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CASE            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    DEFAULT         reduce using rule 306 (ScopeStatement -> BlockStatement .)
    LBRACE          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    IDENTIFIER      reduce using rule 306 (ScopeStatement -> BlockStatement .)
    IF              reduce using rule 306 (ScopeStatement -> BlockStatement .)
    WHILE           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    DO              reduce using rule 306 (ScopeStatement -> BlockStatement .)
    FOR             reduce using rule 306 (ScopeStatement -> BlockStatement .)
    SWITCH          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    FINAL           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    CONTINUE        reduce using rule 306 (ScopeStatement -> BlockStatement .)
    BREAK           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    RETURN          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    GOTO            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    WITH            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    MIXIN           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    IMPORT          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    STATIC          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    ALIAS           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    ENUM            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    EXTERN          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    AUTO            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    CONST           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    IMMUTABLE       reduce using rule 306 (ScopeStatement -> BlockStatement .)
    FOREACH         reduce using rule 306 (ScopeStatement -> BlockStatement .)
    FOREACH_REVERSE reduce using rule 306 (ScopeStatement -> BlockStatement .)
    CLASS           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    UNION           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    EXCLAMATION     reduce using rule 306 (ScopeStatement -> BlockStatement .)
    TILDE           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    CAST            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    THIS            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    NULL            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    TRUE            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    FALSE           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    DOLLAR          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    INUMBER         reduce using rule 306 (ScopeStatement -> BlockStatement .)
    DNUMBER         reduce using rule 306 (ScopeStatement -> BlockStatement .)
    LIT_CHAR        reduce using rule 306 (ScopeStatement -> BlockStatement .)
    LIT_STR         reduce using rule 306 (ScopeStatement -> BlockStatement .)
    LBRACKET        reduce using rule 306 (ScopeStatement -> BlockStatement .)
    FUNCTION        reduce using rule 306 (ScopeStatement -> BlockStatement .)
    NEW             reduce using rule 306 (ScopeStatement -> BlockStatement .)
    BOOL            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    SHORT           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    USHORT          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    INT             reduce using rule 306 (ScopeStatement -> BlockStatement .)
    UINT            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    LONG            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    ULONG           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    CHAR            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    FLOAT           reduce using rule 306 (ScopeStatement -> BlockStatement .)
    VOID            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    TYPEOF          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    TYPEID          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    BODY            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    RBRACE          reduce using rule 306 (ScopeStatement -> BlockStatement .)
    ELSE            reduce using rule 306 (ScopeStatement -> BlockStatement .)
    POWER           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOT             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS_PLUS       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS_MINUS     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LPAREN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    TIMES           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DIV             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MODULO          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LEFT_SHIFT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RIGHT_SHIFT     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    IS_EQ           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    NOT_EQ          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER_EQ      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS_EQ         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    AMPERSAND       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CARET           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PIPE            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_AMPERSAND reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    QUESTION        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_PIPE     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    ASSIGN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_PLUS         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MINUS        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_TIMES        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_DIV          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MODULO       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_AND_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_OR_BIT       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_XOR_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_LEFT         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_RIGHT        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    COMMA           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    SEMICOLON       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)

  ! SEMICOLON       [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! LPAREN          [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! AMPERSAND       [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! PLUS_PLUS       [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! MINUS_MINUS     [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! TIMES           [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! MINUS           [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! PLUS            [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]
  ! DOT             [ reduce using rule 306 (ScopeStatement -> BlockStatement .) ]


state 498

    (361) ForeachRangeStatement -> RangeForeach ScopeStatement .

    SEMICOLON       reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    CASE            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    DEFAULT         reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    LBRACE          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    IDENTIFIER      reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    IF              reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    WHILE           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    DO              reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    FOR             reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    SWITCH          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    FINAL           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    CONTINUE        reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    BREAK           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    RETURN          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    GOTO            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    WITH            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    MIXIN           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    IMPORT          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    STATIC          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    LPAREN          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    ALIAS           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    ENUM            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    EXTERN          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    AUTO            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    CONST           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    IMMUTABLE       reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    FOREACH         reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    FOREACH_REVERSE reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    CLASS           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    UNION           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    AMPERSAND       reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    PLUS_PLUS       reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    MINUS_MINUS     reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    TIMES           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    MINUS           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    PLUS            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    EXCLAMATION     reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    TILDE           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    CAST            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    DOT             reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    THIS            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    NULL            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    TRUE            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    FALSE           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    DOLLAR          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    INUMBER         reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    DNUMBER         reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    LIT_CHAR        reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    LIT_STR         reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    LBRACKET        reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    FUNCTION        reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    NEW             reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    BOOL            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    SHORT           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    USHORT          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    INT             reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    UINT            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    LONG            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    ULONG           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    CHAR            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    FLOAT           reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    VOID            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    TYPEOF          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    TYPEID          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    BODY            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    RBRACE          reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)
    ELSE            reduce using rule 361 (ForeachRangeStatement -> RangeForeach ScopeStatement .)


state 499

    (305) ScopeStatement -> NonEmptyStatement .

    SEMICOLON       reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    CASE            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    DEFAULT         reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    LBRACE          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    IDENTIFIER      reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    IF              reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    WHILE           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    DO              reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    FOR             reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    SWITCH          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    FINAL           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    CONTINUE        reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    BREAK           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    RETURN          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    GOTO            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    WITH            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    MIXIN           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    IMPORT          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    STATIC          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    LPAREN          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    ALIAS           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    ENUM            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    EXTERN          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    AUTO            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    CONST           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    IMMUTABLE       reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    FOREACH         reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    FOREACH_REVERSE reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    CLASS           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    UNION           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    AMPERSAND       reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    PLUS_PLUS       reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    MINUS_MINUS     reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    TIMES           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    MINUS           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    PLUS            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    EXCLAMATION     reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    TILDE           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    CAST            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    DOT             reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    THIS            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    NULL            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    TRUE            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    FALSE           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    DOLLAR          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    INUMBER         reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    DNUMBER         reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    LIT_CHAR        reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    LIT_STR         reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    LBRACKET        reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    FUNCTION        reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    NEW             reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    BOOL            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    SHORT           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    USHORT          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    INT             reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    UINT            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    LONG            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    ULONG           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    CHAR            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    FLOAT           reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    VOID            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    TYPEOF          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    TYPEID          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    BODY            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    RBRACE          reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)
    ELSE            reduce using rule 305 (ScopeStatement -> NonEmptyStatement .)


state 500

    (367) DefaultStatement -> DEFAULT COLON . ScopeStatementList
    (368) ScopeStatementList -> . StatementListNoCaseNoDefault
    (369) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault
    (370) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault StatementListNoCaseNoDefault
    (371) StatementNoCaseNoDefault -> . SEMICOLON
    (372) StatementNoCaseNoDefault -> . NonEmptyStatementNoCaseNoDefault
    (373) StatementNoCaseNoDefault -> . ScopeBlockStatement
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (307) ScopeBlockStatement -> . BlockStatement
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    SEMICOLON       shift and go to state 633
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LBRACE          shift and go to state 145
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    BlockStatement                 shift and go to state 300
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    ScopeStatementList             shift and go to state 631
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    StatementNoCaseNoDefault       shift and go to state 632
    StorageClasses_opt             shift and go to state 9
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    StatementListNoCaseNoDefault   shift and go to state 634
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    LIT_STRPlus                    shift and go to state 210
    empty                          shift and go to state 62
    NonEmptyStatementNoCaseNoDefault shift and go to state 635
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    ScopeBlockStatement            shift and go to state 636
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 501

    (329) WhileStatement -> WHILE LPAREN . Expression RPAREN ScopeStatement
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 637
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 502

    (362) SwitchStatement -> SWITCH LPAREN . Expression RPAREN ScopeStatement
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 638
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 503

    (308) LabeledStatement -> IDENTIFIER COLON .
    (309) LabeledStatement -> IDENTIFIER COLON . NoScopeStatement
    (310) LabeledStatement -> IDENTIFIER COLON . Statement
    (278) NoScopeStatement -> . SEMICOLON
    (279) NoScopeStatement -> . NonEmptyStatement
    (280) NoScopeStatement -> . BlockStatement
    (273) Statement -> . SEMICOLON
    (274) Statement -> . NonEmptyStatement
    (275) Statement -> . ScopeBlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (307) ScopeBlockStatement -> . BlockStatement
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for WITH resolved as shift
  ! shift/reduce conflict for MIXIN resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ALIAS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for EXTERN resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for IMMUTABLE resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FOREACH_REVERSE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! reduce/reduce conflict for DOT resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for BOOL resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for SHORT resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for USHORT resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for INT resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for UINT resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for LONG resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for ULONG resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for CHAR resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for FLOAT resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! reduce/reduce conflict for VOID resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! reduce/reduce conflict for TYPEOF resolved using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for TILDE resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for INUMBER resolved as shift
  ! shift/reduce conflict for DNUMBER resolved as shift
  ! shift/reduce conflict for LIT_CHAR resolved as shift
  ! shift/reduce conflict for LIT_STR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for USHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for UINT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for ULONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for TYPEID resolved as shift
  ! shift/reduce conflict for BODY resolved as shift
    RBRACE          reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
    ELSE            reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .)
    SEMICOLON       shift and go to state 641
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! AMPERSAND       [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! PLUS_PLUS       [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! MINUS_MINUS     [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! TIMES           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! MINUS           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! PLUS            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! EXCLAMATION     [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! LPAREN          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! TILDE           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! CAST            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! IDENTIFIER      [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! DOT             [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! THIS            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! NULL            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! TRUE            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! FALSE           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! DOLLAR          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! INUMBER         [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! DNUMBER         [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! LIT_CHAR        [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! LIT_STR         [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! LBRACKET        [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! FUNCTION        [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! MIXIN           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! IMPORT          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! NEW             [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! BOOL            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! SHORT           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! USHORT          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! INT             [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! UINT            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! LONG            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! ULONG           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! CHAR            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! FLOAT           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! VOID            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! TYPEOF          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! TYPEID          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! LBRACE          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! BODY            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! SEMICOLON       [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! CASE            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! DEFAULT         [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! IF              [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! WHILE           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! DO              [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! FOR             [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! SWITCH          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! FINAL           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! CONTINUE        [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! BREAK           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! RETURN          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! GOTO            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! WITH            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! STATIC          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! ALIAS           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! ENUM            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! EXTERN          [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! AUTO            [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! CONST           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! IMMUTABLE       [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! FOREACH         [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! FOREACH_REVERSE [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! CLASS           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! UNION           [ reduce using rule 308 (LabeledStatement -> IDENTIFIER COLON .) ]
  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ reduce using rule 477 (empty -> .) ]
  ! SHORT           [ reduce using rule 477 (empty -> .) ]
  ! USHORT          [ reduce using rule 477 (empty -> .) ]
  ! INT             [ reduce using rule 477 (empty -> .) ]
  ! UINT            [ reduce using rule 477 (empty -> .) ]
  ! LONG            [ reduce using rule 477 (empty -> .) ]
  ! ULONG           [ reduce using rule 477 (empty -> .) ]
  ! CHAR            [ reduce using rule 477 (empty -> .) ]
  ! FLOAT           [ reduce using rule 477 (empty -> .) ]
  ! VOID            [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 477 (empty -> .) ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    Statement                      shift and go to state 639
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 640
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    NoScopeStatement               shift and go to state 642
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 643
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    ScopeBlockStatement            shift and go to state 345
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 504

    (317) DeclarationStatement -> StorageClasses Declaration .

    SEMICOLON       reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    CASE            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    DEFAULT         reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    LBRACE          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    IDENTIFIER      reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    IF              reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    WHILE           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    DO              reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    FOR             reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    SWITCH          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    FINAL           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    CONTINUE        reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    BREAK           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    RETURN          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    GOTO            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    WITH            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    MIXIN           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    IMPORT          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    STATIC          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    LPAREN          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    ALIAS           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    ENUM            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    EXTERN          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    AUTO            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    CONST           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    IMMUTABLE       reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    FOREACH         reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    FOREACH_REVERSE reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    CLASS           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    UNION           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    AMPERSAND       reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    PLUS_PLUS       reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    MINUS_MINUS     reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    TIMES           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    MINUS           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    PLUS            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    EXCLAMATION     reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    TILDE           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    CAST            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    DOT             reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    THIS            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    NULL            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    TRUE            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    FALSE           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    DOLLAR          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    INUMBER         reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    DNUMBER         reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    LIT_CHAR        reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    LIT_STR         reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    LBRACKET        reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    FUNCTION        reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    NEW             reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    BOOL            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    SHORT           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    USHORT          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    INT             reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    UINT            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    LONG            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    ULONG           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    CHAR            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    FLOAT           reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    VOID            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    TYPEOF          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    TYPEID          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    BODY            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    RBRACE          reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)
    ELSE            reduce using rule 317 (DeclarationStatement -> StorageClasses Declaration .)


state 505

    (315) ExpressionStatement -> Expression SEMICOLON .

    SEMICOLON       reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    CASE            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    DEFAULT         reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    LBRACE          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    IDENTIFIER      reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    IF              reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    WHILE           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    DO              reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    FOR             reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    SWITCH          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    FINAL           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    CONTINUE        reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    BREAK           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    RETURN          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    GOTO            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    WITH            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    MIXIN           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    IMPORT          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    STATIC          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    LPAREN          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    ALIAS           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    ENUM            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    EXTERN          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    AUTO            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    CONST           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    IMMUTABLE       reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    FOREACH         reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    FOREACH_REVERSE reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    CLASS           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    UNION           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    AMPERSAND       reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    PLUS_PLUS       reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    MINUS_MINUS     reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    TIMES           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    MINUS           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    PLUS            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    EXCLAMATION     reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    TILDE           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    CAST            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    DOT             reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    THIS            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    NULL            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    TRUE            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    FALSE           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    DOLLAR          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    INUMBER         reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    DNUMBER         reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    LIT_CHAR        reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    LIT_STR         reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    LBRACKET        reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    FUNCTION        reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    NEW             reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    BOOL            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    SHORT           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    USHORT          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    INT             reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    UINT            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    LONG            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    ULONG           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    CHAR            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    FLOAT           reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    VOID            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    TYPEOF          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    TYPEID          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    BODY            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    RBRACE          reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)
    ELSE            reduce using rule 315 (ExpressionStatement -> Expression SEMICOLON .)


state 506

    (380) BreakStatement -> BREAK IDENTIFIER_opt . SEMICOLON

    SEMICOLON       shift and go to state 644


state 507

    (330) DoStatement -> DO ScopeStatement . WHILE LPAREN Expression RPAREN

    WHILE           shift and go to state 645


state 508

    (277) NoScopeNonEmptyStatement -> BlockStatement .
    (265) FunctionLiteralBody -> BlockStatement .

  ! reduce/reduce conflict for DOT resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for TIMES resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CASE            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    DEFAULT         reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    LBRACE          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    IDENTIFIER      reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    IF              reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    WHILE           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    DO              reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    FOR             reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    SWITCH          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    FINAL           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    CONTINUE        reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    BREAK           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    RETURN          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    GOTO            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    WITH            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    MIXIN           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    IMPORT          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    STATIC          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    ALIAS           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    ENUM            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    EXTERN          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    AUTO            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    CONST           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    IMMUTABLE       reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    FOREACH         reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    FOREACH_REVERSE reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    CLASS           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    UNION           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    EXCLAMATION     reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    TILDE           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    CAST            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    THIS            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    NULL            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    TRUE            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    FALSE           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    DOLLAR          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    INUMBER         reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    DNUMBER         reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    LIT_CHAR        reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    LIT_STR         reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    LBRACKET        reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    FUNCTION        reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    NEW             reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    BOOL            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    SHORT           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    USHORT          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    INT             reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    UINT            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    LONG            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    ULONG           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    CHAR            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    FLOAT           reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    VOID            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    TYPEOF          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    TYPEID          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    BODY            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    RBRACE          reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    ELSE            reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .)
    POWER           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOT             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS_PLUS       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS_MINUS     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LPAREN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    TIMES           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DIV             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MODULO          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LEFT_SHIFT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RIGHT_SHIFT     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    IS_EQ           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    NOT_EQ          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER_EQ      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS_EQ         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    AMPERSAND       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CARET           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PIPE            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_AMPERSAND reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    QUESTION        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_PIPE     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    ASSIGN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_PLUS         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MINUS        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_TIMES        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_DIV          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MODULO       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_AND_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_OR_BIT       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_XOR_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_LEFT         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_RIGHT        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    COMMA           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    SEMICOLON       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)

  ! SEMICOLON       [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! LPAREN          [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! AMPERSAND       [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! PLUS_PLUS       [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! MINUS_MINUS     [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! TIMES           [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! MINUS           [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! PLUS            [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]
  ! DOT             [ reduce using rule 277 (NoScopeNonEmptyStatement -> BlockStatement .) ]


state 509

    (276) NoScopeNonEmptyStatement -> NonEmptyStatement .

    SEMICOLON       reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    CASE            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    DEFAULT         reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    LBRACE          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    IDENTIFIER      reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    IF              reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    WHILE           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    DO              reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    FOR             reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    SWITCH          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    FINAL           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    CONTINUE        reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    BREAK           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    RETURN          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    GOTO            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    WITH            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    MIXIN           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    IMPORT          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    STATIC          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    LPAREN          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    ALIAS           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    ENUM            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    EXTERN          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    AUTO            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    CONST           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    IMMUTABLE       reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    FOREACH         reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    FOREACH_REVERSE reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    CLASS           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    UNION           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    AMPERSAND       reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    PLUS_PLUS       reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    MINUS_MINUS     reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    TIMES           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    MINUS           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    PLUS            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    EXCLAMATION     reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    TILDE           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    CAST            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    DOT             reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    THIS            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    NULL            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    TRUE            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    FALSE           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    DOLLAR          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    INUMBER         reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    DNUMBER         reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    LIT_CHAR        reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    LIT_STR         reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    LBRACKET        reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    FUNCTION        reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    NEW             reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    BOOL            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    SHORT           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    USHORT          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    INT             reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    UINT            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    LONG            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    ULONG           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    CHAR            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    FLOAT           reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    VOID            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    TYPEOF          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    TYPEID          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    BODY            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    RBRACE          reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)
    ELSE            reduce using rule 276 (NoScopeNonEmptyStatement -> NonEmptyStatement .)


state 510

    (344) ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .

    SEMICOLON       reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    CASE            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    DEFAULT         reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    LBRACE          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    IDENTIFIER      reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    IF              reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    WHILE           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    DO              reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    FOR             reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    SWITCH          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    FINAL           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    CONTINUE        reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    BREAK           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    RETURN          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    GOTO            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    WITH            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    MIXIN           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    IMPORT          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    STATIC          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    LPAREN          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    ALIAS           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    ENUM            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    EXTERN          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    AUTO            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    CONST           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    IMMUTABLE       reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    FOREACH         reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    FOREACH_REVERSE reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    CLASS           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    UNION           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    AMPERSAND       reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    PLUS_PLUS       reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    MINUS_MINUS     reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    TIMES           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    MINUS           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    PLUS            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    EXCLAMATION     reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    TILDE           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    CAST            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    DOT             reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    THIS            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    NULL            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    TRUE            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    FALSE           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    DOLLAR          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    INUMBER         reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    DNUMBER         reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    LIT_CHAR        reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    LIT_STR         reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    LBRACKET        reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    FUNCTION        reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    NEW             reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    BOOL            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    SHORT           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    USHORT          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    INT             reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    UINT            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    LONG            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    ULONG           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    CHAR            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    FLOAT           reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    VOID            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    TYPEOF          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    TYPEID          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    BODY            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    RBRACE          reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)
    ELSE            reduce using rule 344 (ForeachStatement -> AggregateForeach NoScopeNonEmptyStatement .)


state 511

    (354) ForeachTypeAttributes -> ForeachTypeAttribute .
    (355) ForeachTypeAttributes -> ForeachTypeAttribute . ForeachTypeAttributes_opt
    (352) ForeachTypeAttributes_opt -> . ForeachTypeAttributes
    (353) ForeachTypeAttributes_opt -> . empty
    (354) ForeachTypeAttributes -> . ForeachTypeAttribute
    (355) ForeachTypeAttributes -> . ForeachTypeAttribute ForeachTypeAttributes_opt
    (477) empty -> .
    (356) ForeachTypeAttribute -> . ENUM

  ! reduce/reduce conflict for IDENTIFIER resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for ALIAS resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for DOT resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for BOOL resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for SHORT resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for USHORT resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for INT resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for UINT resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for LONG resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for ULONG resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for CHAR resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for FLOAT resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for VOID resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    IDENTIFIER      reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    ALIAS           reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    DOT             reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    BOOL            reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    SHORT           reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    USHORT          reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    INT             reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    UINT            reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    LONG            reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    ULONG           reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    CHAR            reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    FLOAT           reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    VOID            reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    TYPEOF          reduce using rule 354 (ForeachTypeAttributes -> ForeachTypeAttribute .)
    ENUM            shift and go to state 512

  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! ALIAS           [ reduce using rule 477 (empty -> .) ]
  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ reduce using rule 477 (empty -> .) ]
  ! SHORT           [ reduce using rule 477 (empty -> .) ]
  ! USHORT          [ reduce using rule 477 (empty -> .) ]
  ! INT             [ reduce using rule 477 (empty -> .) ]
  ! UINT            [ reduce using rule 477 (empty -> .) ]
  ! LONG            [ reduce using rule 477 (empty -> .) ]
  ! ULONG           [ reduce using rule 477 (empty -> .) ]
  ! CHAR            [ reduce using rule 477 (empty -> .) ]
  ! FLOAT           [ reduce using rule 477 (empty -> .) ]
  ! VOID            [ reduce using rule 477 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 477 (empty -> .) ]

    ForeachTypeAttribute           shift and go to state 511
    ForeachTypeAttributes          shift and go to state 516
    empty                          shift and go to state 622
    ForeachTypeAttributes_opt      shift and go to state 646

state 512

    (356) ForeachTypeAttribute -> ENUM .

    ENUM            reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    IDENTIFIER      reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    ALIAS           reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    DOT             reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    BOOL            reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    SHORT           reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    USHORT          reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    INT             reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    UINT            reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    LONG            reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    ULONG           reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    CHAR            reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    FLOAT           reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    VOID            reduce using rule 356 (ForeachTypeAttribute -> ENUM .)
    TYPEOF          reduce using rule 356 (ForeachTypeAttribute -> ENUM .)


state 513

    (358) RangeForeach -> LPAREN ForeachType . SEMICOLON LwrExpression RANGE UprExpression RPAREN

    SEMICOLON       shift and go to state 647


state 514

    (450) ParameterList_opt -> empty .
    (353) ForeachTypeAttributes_opt -> empty .
    (462) InOut_opt -> empty .

  ! reduce/reduce conflict for DOT resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for BOOL resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for USHORT resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for UINT resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for ULONG resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for VOID resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 353 (ForeachTypeAttributes_opt -> empty .)
    RPAREN          reduce using rule 450 (ParameterList_opt -> empty .)
    IDENTIFIER      reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    ALIAS           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    DOT             reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    BOOL            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    SHORT           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    USHORT          reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    INT             reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    UINT            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    LONG            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    ULONG           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    CHAR            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    FLOAT           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    VOID            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    TYPEOF          reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)

  ! DOT             [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! BOOL            [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! SHORT           [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! USHORT          [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! INT             [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! UINT            [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! LONG            [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! ULONG           [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! CHAR            [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! FLOAT           [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! VOID            [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! IDENTIFIER      [ reduce using rule 462 (InOut_opt -> empty .) ]
  ! TYPEOF          [ reduce using rule 462 (InOut_opt -> empty .) ]


state 515

    (349) ForeachType -> ForeachTypeAttributes_opt . BasicType Declarator
    (350) ForeachType -> ForeachTypeAttributes_opt . IDENTIFIER
    (351) ForeachType -> ForeachTypeAttributes_opt . ALIAS IDENTIFIER
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    IDENTIFIER      shift and go to state 649
    ALIAS           shift and go to state 650
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 648
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33

state 516

    (352) ForeachTypeAttributes_opt -> ForeachTypeAttributes .

    IDENTIFIER      reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    ALIAS           reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    DOT             reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    BOOL            reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    SHORT           reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    USHORT          reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    INT             reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    UINT            reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    LONG            reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    ULONG           reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    CHAR            reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    FLOAT           reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    VOID            reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)
    TYPEOF          reduce using rule 352 (ForeachTypeAttributes_opt -> ForeachTypeAttributes .)


state 517

    (318) IfStatement -> IF LPAREN . IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> IF LPAREN . IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (324) IfCondition -> . Expression
    (325) IfCondition -> . AUTO IDENTIFIER ASSIGN Expression
    (326) IfCondition -> . BasicType Declarator ASSIGN Expression
    (151) Expression -> . CommaExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AUTO            shift and go to state 654
    DOT             shift and go to state 203
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 214
    TYPEOF          shift and go to state 47
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 189
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 652
    BasicTypeX                     shift and go to state 222
    BlockStatement                 shift and go to state 175
    IfCondition                    shift and go to state 651
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 196
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 653
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    EqualExpression                shift and go to state 179
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 518

    (455) Parameter -> InOut_opt Type ELLIPSIS .

    COMMA           reduce using rule 455 (Parameter -> InOut_opt Type ELLIPSIS .)
    RPAREN          reduce using rule 455 (Parameter -> InOut_opt Type ELLIPSIS .)


state 519

    (57) Declarator -> VarDeclarator .

    ASSIGN          reduce using rule 57 (Declarator -> VarDeclarator .)
    SEMICOLON       reduce using rule 57 (Declarator -> VarDeclarator .)
    COMMA           reduce using rule 57 (Declarator -> VarDeclarator .)
    ELLIPSIS        reduce using rule 57 (Declarator -> VarDeclarator .)
    RPAREN          reduce using rule 57 (Declarator -> VarDeclarator .)


state 520

    (75) Type -> BasicType BasicType2_opt .
    (59) VarDeclarator -> BasicType2_opt . IDENTIFIER
    (60) AltDeclarator -> BasicType2_opt . IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes

    ELLIPSIS        reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    COMMA           reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    RPAREN          reduce using rule 75 (Type -> BasicType BasicType2_opt .)
    IDENTIFIER      shift and go to state 655
    LPAREN          shift and go to state 235


state 521

    (58) Declarator -> AltDeclarator .

    ASSIGN          reduce using rule 58 (Declarator -> AltDeclarator .)
    SEMICOLON       reduce using rule 58 (Declarator -> AltDeclarator .)
    COMMA           reduce using rule 58 (Declarator -> AltDeclarator .)
    ELLIPSIS        reduce using rule 58 (Declarator -> AltDeclarator .)
    RPAREN          reduce using rule 58 (Declarator -> AltDeclarator .)


state 522

    (451) Parameter -> InOut_opt BasicType Declarator .
    (452) Parameter -> InOut_opt BasicType Declarator . ELLIPSIS
    (453) Parameter -> InOut_opt BasicType Declarator . ASSIGN AssignExpression

    COMMA           reduce using rule 451 (Parameter -> InOut_opt BasicType Declarator .)
    RPAREN          reduce using rule 451 (Parameter -> InOut_opt BasicType Declarator .)
    ELLIPSIS        shift and go to state 657
    ASSIGN          shift and go to state 656


state 523

    (447) ParameterList -> Parameter COMMA ParameterList .

    RPAREN          reduce using rule 447 (ParameterList -> Parameter COMMA ParameterList .)


state 524

    (462) InOut_opt -> empty .

    DOT             reduce using rule 462 (InOut_opt -> empty .)
    BOOL            reduce using rule 462 (InOut_opt -> empty .)
    SHORT           reduce using rule 462 (InOut_opt -> empty .)
    USHORT          reduce using rule 462 (InOut_opt -> empty .)
    INT             reduce using rule 462 (InOut_opt -> empty .)
    UINT            reduce using rule 462 (InOut_opt -> empty .)
    LONG            reduce using rule 462 (InOut_opt -> empty .)
    ULONG           reduce using rule 462 (InOut_opt -> empty .)
    CHAR            reduce using rule 462 (InOut_opt -> empty .)
    FLOAT           reduce using rule 462 (InOut_opt -> empty .)
    VOID            reduce using rule 462 (InOut_opt -> empty .)
    IDENTIFIER      reduce using rule 462 (InOut_opt -> empty .)
    TYPEOF          reduce using rule 462 (InOut_opt -> empty .)


state 525

    (125) ArrayMemberInitialization -> NonVoidInitializer .

    COMMA           reduce using rule 125 (ArrayMemberInitialization -> NonVoidInitializer .)
    RBRACKET        reduce using rule 125 (ArrayMemberInitialization -> NonVoidInitializer .)


state 526

    (119) ArrayInitializer -> LBRACKET ArrayMemberInitializations_opt . RBRACKET

    RBRACKET        shift and go to state 658


state 527

    (120) ArrayMemberInitializations -> ArrayMemberInitialization .
    (121) ArrayMemberInitializations -> ArrayMemberInitialization . COMMA
    (122) ArrayMemberInitializations -> ArrayMemberInitialization . COMMA ArrayMemberInitializations

    RBRACKET        reduce using rule 120 (ArrayMemberInitializations -> ArrayMemberInitialization .)
    COMMA           shift and go to state 659


state 528

    (123) ArrayMemberInitializations_opt -> ArrayMemberInitializations .

    RBRACKET        reduce using rule 123 (ArrayMemberInitializations_opt -> ArrayMemberInitializations .)


state 529

    (124) ArrayMemberInitializations_opt -> empty .
    (218) ArgumentList_opt -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 124 (ArrayMemberInitializations_opt -> empty .)
    RBRACKET        reduce using rule 124 (ArrayMemberInitializations_opt -> empty .)

  ! RBRACKET        [ reduce using rule 218 (ArgumentList_opt -> empty .) ]


state 530

    (219) ArgumentList -> AssignExpression .
    (220) ArgumentList -> AssignExpression . COMMA
    (221) ArgumentList -> AssignExpression . COMMA ArgumentList
    (126) ArrayMemberInitialization -> AssignExpression . COLON NonVoidInitializer
    (118) ExpInitializer -> AssignExpression .

  ! reduce/reduce conflict for RBRACKET resolved using rule 118 (ExpInitializer -> AssignExpression .)
    COLON           shift and go to state 660
    COMMA           reduce using rule 118 (ExpInitializer -> AssignExpression .)
    RBRACKET        reduce using rule 118 (ExpInitializer -> AssignExpression .)

  ! RBRACKET        [ reduce using rule 219 (ArgumentList -> AssignExpression .) ]
  ! COMMA           [ shift and go to state 532 ]


state 531

    (255) ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .

    POWER           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    DOT             reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    PLUS_PLUS       reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    MINUS_MINUS     reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    LPAREN          reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    TIMES           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    DIV             reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    MODULO          reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    PLUS            reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    MINUS           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    LEFT_SHIFT      reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    RIGHT_SHIFT     reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    IS_EQ           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    NOT_EQ          reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    LESS            reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    GREATER_EQ      reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    GREATER         reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    LESS_EQ         reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    AMPERSAND       reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    CARET           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    PIPE            reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    QUESTION        reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    DOUBLE_PIPE     reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    ASSIGN          reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_PLUS         reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_MINUS        reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_TIMES        reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_DIV          reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_MODULO       reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_AND_BIT      reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_OR_BIT       reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_XOR_BIT      reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_LEFT         reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    EQ_RIGHT        reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    COMMA           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    RBRACE          reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    RBRACKET        reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    RANGE           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    RPAREN          reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    SEMICOLON       reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)
    COLON           reduce using rule 255 (ArrayLiteral -> LBRACKET ArgumentList_opt RBRACKET .)


state 532

    (220) ArgumentList -> AssignExpression COMMA .
    (221) ArgumentList -> AssignExpression COMMA . ArgumentList
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RPAREN          reduce using rule 220 (ArgumentList -> AssignExpression COMMA .)
    RBRACKET        reduce using rule 220 (ArgumentList -> AssignExpression COMMA .)
    COLON           reduce using rule 220 (ArgumentList -> AssignExpression COMMA .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 661
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 533

    (177) AndExpression -> AndExpression AMPERSAND CmpExpression .

    AMPERSAND       reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    CARET           reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    PIPE            reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    DOUBLE_AMPERSAND reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    QUESTION        reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    DOUBLE_PIPE     reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    ASSIGN          reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_PLUS         reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_MINUS        reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_TIMES        reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_DIV          reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_MODULO       reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_AND_BIT      reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_OR_BIT       reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_XOR_BIT      reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_LEFT         reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    EQ_RIGHT        reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    COMMA           reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    RPAREN          reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    SEMICOLON       reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    RBRACE          reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    RBRACKET        reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    RANGE           reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)
    COLON           reduce using rule 177 (AndExpression -> AndExpression AMPERSAND CmpExpression .)


state 534

    (167) ConditionalExpression -> OrOrExpression QUESTION Expression . COLON ConditionalExpression

    COLON           shift and go to state 662


state 535

    (169) OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .
    (171) AndAndExpression -> AndAndExpression . DOUBLE_AMPERSAND OrExpression

    QUESTION        reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    DOUBLE_PIPE     reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    ASSIGN          reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_PLUS         reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_MINUS        reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_TIMES        reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_DIV          reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_MODULO       reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_AND_BIT      reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_OR_BIT       reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_XOR_BIT      reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_LEFT         reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    EQ_RIGHT        reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    RBRACKET        reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    RANGE           reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    COMMA           reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    RPAREN          reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    SEMICOLON       reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    RBRACE          reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    COLON           reduce using rule 169 (OrOrExpression -> OrOrExpression DOUBLE_PIPE AndAndExpression .)
    DOUBLE_AMPERSAND shift and go to state 424


state 536

    (270) ImportExpression -> IMPORT LPAREN AssignExpression . RPAREN

    RPAREN          shift and go to state 663


state 537

    (165) AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .

    RBRACKET        reduce using rule 165 (AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .)
    RANGE           reduce using rule 165 (AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .)
    COMMA           reduce using rule 165 (AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .)
    RPAREN          reduce using rule 165 (AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .)
    SEMICOLON       reduce using rule 165 (AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .)
    RBRACE          reduce using rule 165 (AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .)
    COLON           reduce using rule 165 (AssignExpression -> ConditionalExpression EQ_RIGHT AssignExpression .)


state 538

    (161) AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .

    RBRACKET        reduce using rule 161 (AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .)
    RANGE           reduce using rule 161 (AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .)
    COMMA           reduce using rule 161 (AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .)
    RPAREN          reduce using rule 161 (AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .)
    SEMICOLON       reduce using rule 161 (AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .)
    RBRACE          reduce using rule 161 (AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .)
    COLON           reduce using rule 161 (AssignExpression -> ConditionalExpression EQ_AND_BIT AssignExpression .)


state 539

    (158) AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .

    RBRACKET        reduce using rule 158 (AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .)
    RANGE           reduce using rule 158 (AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .)
    COMMA           reduce using rule 158 (AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .)
    RPAREN          reduce using rule 158 (AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .)
    SEMICOLON       reduce using rule 158 (AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .)
    RBRACE          reduce using rule 158 (AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .)
    COLON           reduce using rule 158 (AssignExpression -> ConditionalExpression EQ_TIMES AssignExpression .)


state 540

    (156) AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .

    RBRACKET        reduce using rule 156 (AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .)
    RANGE           reduce using rule 156 (AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .)
    COMMA           reduce using rule 156 (AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .)
    RPAREN          reduce using rule 156 (AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .)
    SEMICOLON       reduce using rule 156 (AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .)
    RBRACE          reduce using rule 156 (AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .)
    COLON           reduce using rule 156 (AssignExpression -> ConditionalExpression EQ_PLUS AssignExpression .)


state 541

    (159) AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .

    RBRACKET        reduce using rule 159 (AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .)
    RANGE           reduce using rule 159 (AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .)
    COMMA           reduce using rule 159 (AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .)
    RPAREN          reduce using rule 159 (AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .)
    SEMICOLON       reduce using rule 159 (AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .)
    RBRACE          reduce using rule 159 (AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .)
    COLON           reduce using rule 159 (AssignExpression -> ConditionalExpression EQ_DIV AssignExpression .)


state 542

    (163) AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .

    RBRACKET        reduce using rule 163 (AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .)
    RANGE           reduce using rule 163 (AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .)
    COMMA           reduce using rule 163 (AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .)
    RPAREN          reduce using rule 163 (AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .)
    SEMICOLON       reduce using rule 163 (AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .)
    RBRACE          reduce using rule 163 (AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .)
    COLON           reduce using rule 163 (AssignExpression -> ConditionalExpression EQ_XOR_BIT AssignExpression .)


state 543

    (157) AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .

    RBRACKET        reduce using rule 157 (AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .)
    RANGE           reduce using rule 157 (AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .)
    COMMA           reduce using rule 157 (AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .)
    RPAREN          reduce using rule 157 (AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .)
    SEMICOLON       reduce using rule 157 (AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .)
    RBRACE          reduce using rule 157 (AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .)
    COLON           reduce using rule 157 (AssignExpression -> ConditionalExpression EQ_MINUS AssignExpression .)


state 544

    (164) AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .

    RBRACKET        reduce using rule 164 (AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .)
    RANGE           reduce using rule 164 (AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .)
    COMMA           reduce using rule 164 (AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .)
    RPAREN          reduce using rule 164 (AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .)
    SEMICOLON       reduce using rule 164 (AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .)
    RBRACE          reduce using rule 164 (AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .)
    COLON           reduce using rule 164 (AssignExpression -> ConditionalExpression EQ_LEFT AssignExpression .)


state 545

    (162) AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .

    RBRACKET        reduce using rule 162 (AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .)
    RANGE           reduce using rule 162 (AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .)
    COMMA           reduce using rule 162 (AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .)
    RPAREN          reduce using rule 162 (AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .)
    SEMICOLON       reduce using rule 162 (AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .)
    RBRACE          reduce using rule 162 (AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .)
    COLON           reduce using rule 162 (AssignExpression -> ConditionalExpression EQ_OR_BIT AssignExpression .)


state 546

    (160) AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .

    RBRACKET        reduce using rule 160 (AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .)
    RANGE           reduce using rule 160 (AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .)
    COMMA           reduce using rule 160 (AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .)
    RPAREN          reduce using rule 160 (AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .)
    SEMICOLON       reduce using rule 160 (AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .)
    RBRACE          reduce using rule 160 (AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .)
    COLON           reduce using rule 160 (AssignExpression -> ConditionalExpression EQ_MODULO AssignExpression .)


state 547

    (155) AssignExpression -> ConditionalExpression ASSIGN AssignExpression .

    RBRACKET        reduce using rule 155 (AssignExpression -> ConditionalExpression ASSIGN AssignExpression .)
    RANGE           reduce using rule 155 (AssignExpression -> ConditionalExpression ASSIGN AssignExpression .)
    COMMA           reduce using rule 155 (AssignExpression -> ConditionalExpression ASSIGN AssignExpression .)
    RPAREN          reduce using rule 155 (AssignExpression -> ConditionalExpression ASSIGN AssignExpression .)
    SEMICOLON       reduce using rule 155 (AssignExpression -> ConditionalExpression ASSIGN AssignExpression .)
    RBRACE          reduce using rule 155 (AssignExpression -> ConditionalExpression ASSIGN AssignExpression .)
    COLON           reduce using rule 155 (AssignExpression -> ConditionalExpression ASSIGN AssignExpression .)


state 548

    (186) RelExpression -> ShiftExpression LESS_EQ ShiftExpression .
    (188) ShiftExpression -> ShiftExpression . LEFT_SHIFT AddExpression
    (189) ShiftExpression -> ShiftExpression . RIGHT_SHIFT AddExpression

    AMPERSAND       reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    CARET           reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    PIPE            reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    DOUBLE_AMPERSAND reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    QUESTION        reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    DOUBLE_PIPE     reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    ASSIGN          reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_PLUS         reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_MINUS        reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_TIMES        reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_DIV          reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_MODULO       reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_AND_BIT      reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_OR_BIT       reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_XOR_BIT      reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_LEFT         reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    EQ_RIGHT        reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    COMMA           reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    RPAREN          reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    SEMICOLON       reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    RBRACKET        reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    RANGE           reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    RBRACE          reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    COLON           reduce using rule 186 (RelExpression -> ShiftExpression LESS_EQ ShiftExpression .)
    LEFT_SHIFT      shift and go to state 391
    RIGHT_SHIFT     shift and go to state 393


state 549

    (181) EqualExpression -> ShiftExpression IS_EQ ShiftExpression .
    (188) ShiftExpression -> ShiftExpression . LEFT_SHIFT AddExpression
    (189) ShiftExpression -> ShiftExpression . RIGHT_SHIFT AddExpression

    AMPERSAND       reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    CARET           reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    PIPE            reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    DOUBLE_AMPERSAND reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    QUESTION        reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    DOUBLE_PIPE     reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    ASSIGN          reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_PLUS         reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_MINUS        reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_TIMES        reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_DIV          reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_MODULO       reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_AND_BIT      reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_OR_BIT       reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_XOR_BIT      reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_LEFT         reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    EQ_RIGHT        reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    RBRACKET        reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    COMMA           reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    RPAREN          reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    RBRACE          reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    SEMICOLON       reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    RANGE           reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    COLON           reduce using rule 181 (EqualExpression -> ShiftExpression IS_EQ ShiftExpression .)
    LEFT_SHIFT      shift and go to state 391
    RIGHT_SHIFT     shift and go to state 393


state 550

    (185) RelExpression -> ShiftExpression GREATER ShiftExpression .
    (188) ShiftExpression -> ShiftExpression . LEFT_SHIFT AddExpression
    (189) ShiftExpression -> ShiftExpression . RIGHT_SHIFT AddExpression

    AMPERSAND       reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    CARET           reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    PIPE            reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    DOUBLE_AMPERSAND reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    QUESTION        reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    DOUBLE_PIPE     reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    ASSIGN          reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_PLUS         reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_MINUS        reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_TIMES        reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_DIV          reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_MODULO       reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_AND_BIT      reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_OR_BIT       reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_XOR_BIT      reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_LEFT         reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    EQ_RIGHT        reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    COMMA           reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    RPAREN          reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    SEMICOLON       reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    RBRACKET        reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    RANGE           reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    RBRACE          reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    COLON           reduce using rule 185 (RelExpression -> ShiftExpression GREATER ShiftExpression .)
    LEFT_SHIFT      shift and go to state 391
    RIGHT_SHIFT     shift and go to state 393


state 551

    (183) RelExpression -> ShiftExpression LESS ShiftExpression .
    (188) ShiftExpression -> ShiftExpression . LEFT_SHIFT AddExpression
    (189) ShiftExpression -> ShiftExpression . RIGHT_SHIFT AddExpression

    AMPERSAND       reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    CARET           reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    PIPE            reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    DOUBLE_AMPERSAND reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    QUESTION        reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    DOUBLE_PIPE     reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    ASSIGN          reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_PLUS         reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_MINUS        reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_TIMES        reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_DIV          reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_MODULO       reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_AND_BIT      reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_OR_BIT       reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_XOR_BIT      reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_LEFT         reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    EQ_RIGHT        reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    COMMA           reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    RPAREN          reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    SEMICOLON       reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    RBRACKET        reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    RANGE           reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    RBRACE          reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    COLON           reduce using rule 183 (RelExpression -> ShiftExpression LESS ShiftExpression .)
    LEFT_SHIFT      shift and go to state 391
    RIGHT_SHIFT     shift and go to state 393


state 552

    (188) ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .
    (191) AddExpression -> AddExpression . PLUS MulExpression
    (192) AddExpression -> AddExpression . MINUS MulExpression

    LEFT_SHIFT      reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    RIGHT_SHIFT     reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    IS_EQ           reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    NOT_EQ          reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    LESS            reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    GREATER_EQ      reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    GREATER         reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    LESS_EQ         reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    AMPERSAND       reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    CARET           reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    PIPE            reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    DOUBLE_AMPERSAND reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    QUESTION        reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    DOUBLE_PIPE     reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    ASSIGN          reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_PLUS         reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_MINUS        reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_TIMES        reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_DIV          reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_MODULO       reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_AND_BIT      reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_OR_BIT       reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_XOR_BIT      reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_LEFT         reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    EQ_RIGHT        reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    RBRACKET        reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    RANGE           reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    COMMA           reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    RPAREN          reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    SEMICOLON       reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    RBRACE          reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    COLON           reduce using rule 188 (ShiftExpression -> ShiftExpression LEFT_SHIFT AddExpression .)
    PLUS            shift and go to state 432
    MINUS           shift and go to state 433


state 553

    (184) RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .
    (188) ShiftExpression -> ShiftExpression . LEFT_SHIFT AddExpression
    (189) ShiftExpression -> ShiftExpression . RIGHT_SHIFT AddExpression

    AMPERSAND       reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    CARET           reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    PIPE            reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    DOUBLE_AMPERSAND reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    QUESTION        reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    DOUBLE_PIPE     reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    ASSIGN          reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_PLUS         reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_MINUS        reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_TIMES        reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_DIV          reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_MODULO       reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_AND_BIT      reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_OR_BIT       reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_XOR_BIT      reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_LEFT         reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    EQ_RIGHT        reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    COMMA           reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    RPAREN          reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    SEMICOLON       reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    RBRACKET        reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    RANGE           reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    RBRACE          reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    COLON           reduce using rule 184 (RelExpression -> ShiftExpression GREATER_EQ ShiftExpression .)
    LEFT_SHIFT      shift and go to state 391
    RIGHT_SHIFT     shift and go to state 393


state 554

    (189) ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .
    (191) AddExpression -> AddExpression . PLUS MulExpression
    (192) AddExpression -> AddExpression . MINUS MulExpression

    LEFT_SHIFT      reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    RIGHT_SHIFT     reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    IS_EQ           reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    NOT_EQ          reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    LESS            reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    GREATER_EQ      reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    GREATER         reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    LESS_EQ         reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    AMPERSAND       reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    CARET           reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    PIPE            reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    DOUBLE_AMPERSAND reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    QUESTION        reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    DOUBLE_PIPE     reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    ASSIGN          reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_PLUS         reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_MINUS        reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_TIMES        reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_DIV          reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_MODULO       reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_AND_BIT      reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_OR_BIT       reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_XOR_BIT      reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_LEFT         reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    EQ_RIGHT        reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    RBRACKET        reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    RANGE           reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    COMMA           reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    RPAREN          reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    SEMICOLON       reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    RBRACE          reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    COLON           reduce using rule 189 (ShiftExpression -> ShiftExpression RIGHT_SHIFT AddExpression .)
    PLUS            shift and go to state 432
    MINUS           shift and go to state 433


state 555

    (182) EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .
    (188) ShiftExpression -> ShiftExpression . LEFT_SHIFT AddExpression
    (189) ShiftExpression -> ShiftExpression . RIGHT_SHIFT AddExpression

    AMPERSAND       reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    CARET           reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    PIPE            reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    DOUBLE_AMPERSAND reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    QUESTION        reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    DOUBLE_PIPE     reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    ASSIGN          reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_PLUS         reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_MINUS        reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_TIMES        reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_DIV          reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_MODULO       reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_AND_BIT      reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_OR_BIT       reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_XOR_BIT      reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_LEFT         reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    EQ_RIGHT        reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    RBRACKET        reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    COMMA           reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    RPAREN          reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    RBRACE          reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    SEMICOLON       reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    RANGE           reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    COLON           reduce using rule 182 (EqualExpression -> ShiftExpression NOT_EQ ShiftExpression .)
    LEFT_SHIFT      shift and go to state 391
    RIGHT_SHIFT     shift and go to state 393


state 556

    (196) MulExpression -> MulExpression MODULO UnaryExpression .

    TIMES           reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    DIV             reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    MODULO          reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    PLUS            reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    MINUS           reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    LEFT_SHIFT      reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    IS_EQ           reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    NOT_EQ          reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    LESS            reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    GREATER_EQ      reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    GREATER         reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    LESS_EQ         reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    AMPERSAND       reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    CARET           reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    PIPE            reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    QUESTION        reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    ASSIGN          reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_PLUS         reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_MINUS        reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_TIMES        reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_DIV          reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_MODULO       reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_AND_BIT      reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_OR_BIT       reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_LEFT         reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    EQ_RIGHT        reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    COMMA           reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    RPAREN          reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    SEMICOLON       reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    RBRACE          reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    RBRACKET        reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    RANGE           reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)
    COLON           reduce using rule 196 (MulExpression -> MulExpression MODULO UnaryExpression .)


state 557

    (195) MulExpression -> MulExpression DIV UnaryExpression .

    TIMES           reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    DIV             reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    MODULO          reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    PLUS            reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    MINUS           reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    LEFT_SHIFT      reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    IS_EQ           reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    NOT_EQ          reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    LESS            reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    GREATER_EQ      reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    GREATER         reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    LESS_EQ         reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    AMPERSAND       reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    CARET           reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    PIPE            reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    QUESTION        reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    ASSIGN          reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_PLUS         reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_MINUS        reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_TIMES        reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_DIV          reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_MODULO       reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_AND_BIT      reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_OR_BIT       reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_LEFT         reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    EQ_RIGHT        reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    COMMA           reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    RPAREN          reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    SEMICOLON       reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    RBRACE          reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    RBRACKET        reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    RANGE           reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)
    COLON           reduce using rule 195 (MulExpression -> MulExpression DIV UnaryExpression .)


state 558

    (194) MulExpression -> MulExpression TIMES UnaryExpression .

    TIMES           reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    DIV             reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    MODULO          reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    PLUS            reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    MINUS           reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    LEFT_SHIFT      reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    IS_EQ           reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    NOT_EQ          reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    LESS            reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    GREATER_EQ      reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    GREATER         reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    LESS_EQ         reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    AMPERSAND       reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    CARET           reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    PIPE            reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    QUESTION        reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    ASSIGN          reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_PLUS         reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_MINUS        reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_TIMES        reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_DIV          reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_MODULO       reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_AND_BIT      reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_OR_BIT       reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_LEFT         reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    EQ_RIGHT        reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    COMMA           reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    RPAREN          reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    SEMICOLON       reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    RBRACE          reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    RBRACKET        reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    RANGE           reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)
    COLON           reduce using rule 194 (MulExpression -> MulExpression TIMES UnaryExpression .)


state 559

    (263) ParameterAttributes_opt -> empty .

    LBRACE          reduce using rule 263 (ParameterAttributes_opt -> empty .)
    BODY            reduce using rule 263 (ParameterAttributes_opt -> empty .)


state 560

    (258) FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt . FunctionLiteralBody
    (262) ParameterAttributes_opt -> ParameterAttributes_opt .
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BODY resolved as shift
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

  ! LBRACE          [ reduce using rule 262 (ParameterAttributes_opt -> ParameterAttributes_opt .) ]
  ! BODY            [ reduce using rule 262 (ParameterAttributes_opt -> ParameterAttributes_opt .) ]

    FunctionLiteralBody            shift and go to state 664
    BlockStatement                 shift and go to state 175
    BodyStatement                  shift and go to state 213

state 561

    (173) OrExpression -> OrExpression PIPE XorExpression .
    (175) XorExpression -> XorExpression . CARET AndExpression

    PIPE            reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    DOUBLE_AMPERSAND reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    QUESTION        reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    DOUBLE_PIPE     reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    ASSIGN          reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_PLUS         reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_MINUS        reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_TIMES        reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_DIV          reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_MODULO       reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_AND_BIT      reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_OR_BIT       reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_XOR_BIT      reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_LEFT         reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    EQ_RIGHT        reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    COMMA           reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    SEMICOLON       reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    RPAREN          reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    RBRACKET        reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    RANGE           reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    RBRACE          reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    COLON           reduce using rule 173 (OrExpression -> OrExpression PIPE XorExpression .)
    CARET           shift and go to state 427


state 562

    (271) TypeidExpression -> TYPEID LPAREN Type . RPAREN

    RPAREN          shift and go to state 665


state 563

    (272) TypeidExpression -> TYPEID LPAREN Expression . RPAREN

    RPAREN          shift and go to state 666


state 564

    (231) PostfixExpression -> PostfixExpression LPAREN ArgumentList . RPAREN

    RPAREN          shift and go to state 667


state 565

    (225) PowExpression -> PostfixExpression POWER UnaryExpression .

    TIMES           reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    DIV             reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    MODULO          reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    PLUS            reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    MINUS           reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    LEFT_SHIFT      reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    IS_EQ           reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    NOT_EQ          reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    LESS            reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    GREATER_EQ      reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    GREATER         reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    LESS_EQ         reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    AMPERSAND       reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    CARET           reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    PIPE            reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    QUESTION        reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    ASSIGN          reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_PLUS         reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_MINUS        reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_TIMES        reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_DIV          reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_MODULO       reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_AND_BIT      reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_OR_BIT       reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_LEFT         reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    EQ_RIGHT        reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    COMMA           reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    RPAREN          reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    SEMICOLON       reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    RBRACKET        reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    RANGE           reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    RBRACE          reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)
    COLON           reduce using rule 225 (PowExpression -> PostfixExpression POWER UnaryExpression .)


state 566

    (210) NewExpression -> NewExpressionWithArgs .

    POWER           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    DOT             reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    PLUS_PLUS       reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    MINUS_MINUS     reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    LPAREN          reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    TIMES           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    DIV             reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    MODULO          reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    PLUS            reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    MINUS           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    LEFT_SHIFT      reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    RIGHT_SHIFT     reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    IS_EQ           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    NOT_EQ          reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    LESS            reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    GREATER_EQ      reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    GREATER         reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    LESS_EQ         reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    AMPERSAND       reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    CARET           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    PIPE            reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    DOUBLE_AMPERSAND reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    QUESTION        reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    DOUBLE_PIPE     reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    ASSIGN          reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_PLUS         reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_MINUS        reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_TIMES        reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_DIV          reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_MODULO       reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_AND_BIT      reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_OR_BIT       reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_XOR_BIT      reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_LEFT         reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    EQ_RIGHT        reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    RBRACKET        reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    RANGE           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    COMMA           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    RPAREN          reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    SEMICOLON       reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    RBRACE          reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)
    COLON           reduce using rule 210 (NewExpression -> NewExpressionWithArgs .)


state 567

    (228) PostfixExpression -> PostfixExpression DOT NewExpression .

    POWER           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    DOT             reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    PLUS_PLUS       reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    MINUS_MINUS     reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    LPAREN          reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    TIMES           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    DIV             reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    MODULO          reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    PLUS            reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    MINUS           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    LEFT_SHIFT      reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    RIGHT_SHIFT     reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    IS_EQ           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    NOT_EQ          reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    LESS            reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    GREATER_EQ      reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    GREATER         reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    LESS_EQ         reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    AMPERSAND       reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    CARET           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    PIPE            reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    DOUBLE_AMPERSAND reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    QUESTION        reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    DOUBLE_PIPE     reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    ASSIGN          reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_PLUS         reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_MINUS        reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_TIMES        reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_DIV          reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_MODULO       reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_AND_BIT      reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_OR_BIT       reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_XOR_BIT      reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_LEFT         reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    EQ_RIGHT        reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    RBRACKET        reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    RANGE           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    COMMA           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    RPAREN          reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    SEMICOLON       reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    RBRACE          reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)
    COLON           reduce using rule 228 (PostfixExpression -> PostfixExpression DOT NewExpression .)


state 568

    (209) NewExpression -> NEW . AllocatorArguments_opt Type
    (211) NewExpressionWithArgs -> NEW . AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> NEW . AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (412) NewAnonClassExpression -> NEW . AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (215) AllocatorArguments_opt -> . AllocatorArguments
    (216) AllocatorArguments_opt -> . empty
    (214) AllocatorArguments -> . LPAREN ArgumentList_opt RPAREN
    (477) empty -> .

    LPAREN          shift and go to state 416
    CLASS           reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)

    AllocatorArguments_opt         shift and go to state 668
    AllocatorArguments             shift and go to state 417
    empty                          shift and go to state 418

state 569

    (227) PostfixExpression -> PostfixExpression DOT IDENTIFIER .

    POWER           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    DOT             reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    PLUS_PLUS       reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    MINUS_MINUS     reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    LPAREN          reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    TIMES           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    DIV             reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    MODULO          reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    PLUS            reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    MINUS           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    IS_EQ           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    NOT_EQ          reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    LESS            reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    GREATER_EQ      reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    GREATER         reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    LESS_EQ         reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    AMPERSAND       reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    CARET           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    PIPE            reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    QUESTION        reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    ASSIGN          reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_PLUS         reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_MINUS        reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_TIMES        reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_DIV          reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_MODULO       reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_LEFT         reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    EQ_RIGHT        reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    RBRACKET        reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    RANGE           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    COMMA           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    RPAREN          reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    RBRACE          reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)
    COLON           reduce using rule 227 (PostfixExpression -> PostfixExpression DOT IDENTIFIER .)


state 570

    (211) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type . LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type . LPAREN ArgumentList_opt RPAREN

    LBRACKET        shift and go to state 669
    LPAREN          shift and go to state 670


state 571

    (412) NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS . ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (414) ClassArguments_opt -> . ClassArguments
    (415) ClassArguments_opt -> . empty
    (413) ClassArguments -> . LPAREN ArgumentList_opt RPAREN
    (477) empty -> .

    LPAREN          shift and go to state 673
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    LBRACE          reduce using rule 477 (empty -> .)

    ClassArguments                 shift and go to state 671
    ClassArguments_opt             shift and go to state 672
    empty                          shift and go to state 674

state 572

    (214) AllocatorArguments -> LPAREN ArgumentList_opt . RPAREN

    RPAREN          shift and go to state 675


state 573

    (232) PostfixExpression -> BasicType LPAREN ArgumentList_opt . RPAREN

    RPAREN          shift and go to state 676


state 574

    (223) CastExpression -> CAST LPAREN RPAREN . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 677
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 575

    (222) CastExpression -> CAST LPAREN Type . RPAREN UnaryExpression

    RPAREN          shift and go to state 678


state 576

    (256) ArrayLiteral -> IDENTIFIER LBRACKET INUMBER . RBRACKET
    (241) PrimaryExpression -> INUMBER .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 679
    POWER           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DOT             reduce using rule 241 (PrimaryExpression -> INUMBER .)
    PLUS_PLUS       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    MINUS_MINUS     reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LPAREN          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    TIMES           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DIV             reduce using rule 241 (PrimaryExpression -> INUMBER .)
    MODULO          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    PLUS            reduce using rule 241 (PrimaryExpression -> INUMBER .)
    MINUS           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LEFT_SHIFT      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    RIGHT_SHIFT     reduce using rule 241 (PrimaryExpression -> INUMBER .)
    IS_EQ           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    NOT_EQ          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LESS            reduce using rule 241 (PrimaryExpression -> INUMBER .)
    GREATER_EQ      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    GREATER         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    LESS_EQ         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    AMPERSAND       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    CARET           reduce using rule 241 (PrimaryExpression -> INUMBER .)
    PIPE            reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DOUBLE_AMPERSAND reduce using rule 241 (PrimaryExpression -> INUMBER .)
    QUESTION        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    DOUBLE_PIPE     reduce using rule 241 (PrimaryExpression -> INUMBER .)
    ASSIGN          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_PLUS         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_MINUS        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_TIMES        reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_DIV          reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_MODULO       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_AND_BIT      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_OR_BIT       reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_XOR_BIT      reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_LEFT         reduce using rule 241 (PrimaryExpression -> INUMBER .)
    EQ_RIGHT        reduce using rule 241 (PrimaryExpression -> INUMBER .)

  ! RBRACKET        [ reduce using rule 241 (PrimaryExpression -> INUMBER .) ]


state 577

    (104) IdentifierList -> IDENTIFIER LBRACKET AssignExpression . RBRACKET DOT IdentifierList
    (257) ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression . RBRACKET

    RBRACKET        shift and go to state 680


state 578

    (171) AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .
    (173) OrExpression -> OrExpression . PIPE XorExpression

    DOUBLE_AMPERSAND reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    QUESTION        reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    DOUBLE_PIPE     reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    ASSIGN          reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_PLUS         reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_MINUS        reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_TIMES        reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_DIV          reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_MODULO       reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_AND_BIT      reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_OR_BIT       reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_XOR_BIT      reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_LEFT         reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    EQ_RIGHT        reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    RBRACKET        reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    RANGE           reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    COMMA           reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    RPAREN          reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    SEMICOLON       reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    RBRACE          reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    COLON           reduce using rule 171 (AndAndExpression -> AndAndExpression DOUBLE_AMPERSAND OrExpression .)
    PIPE            shift and go to state 405


state 579

    (251) PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt . RPAREN

    RPAREN          shift and go to state 681


state 580

    (250) PrimaryExpression -> BasicTypeX DOT IDENTIFIER .

    POWER           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    DOT             reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    PLUS_PLUS       reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    MINUS_MINUS     reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    LPAREN          reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    TIMES           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    DIV             reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    MODULO          reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    PLUS            reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    MINUS           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    IS_EQ           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    NOT_EQ          reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    LESS            reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    GREATER_EQ      reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    GREATER         reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    LESS_EQ         reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    AMPERSAND       reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    CARET           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    PIPE            reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    QUESTION        reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    ASSIGN          reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_PLUS         reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_MINUS        reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_TIMES        reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_DIV          reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_MODULO       reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_LEFT         reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    EQ_RIGHT        reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    RBRACKET        reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    RANGE           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    COMMA           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    RPAREN          reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    RBRACE          reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)
    COLON           reduce using rule 250 (PrimaryExpression -> BasicTypeX DOT IDENTIFIER .)


state 581

    (175) XorExpression -> XorExpression CARET AndExpression .
    (177) AndExpression -> AndExpression . AMPERSAND CmpExpression

    CARET           reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    PIPE            reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    DOUBLE_AMPERSAND reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    QUESTION        reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    DOUBLE_PIPE     reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    ASSIGN          reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_PLUS         reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_MINUS        reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_TIMES        reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_DIV          reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_MODULO       reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_AND_BIT      reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_OR_BIT       reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_XOR_BIT      reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_LEFT         reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    EQ_RIGHT        reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    RBRACKET        reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    RANGE           reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    COMMA           reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    RPAREN          reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    SEMICOLON       reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    RBRACE          reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    COLON           reduce using rule 175 (XorExpression -> XorExpression CARET AndExpression .)
    AMPERSAND       shift and go to state 370


state 582

    (269) MixinExpression -> MIXIN LPAREN AssignExpression . RPAREN

    RPAREN          shift and go to state 682


state 583

    (253) PrimaryExpression -> LPAREN Expression RPAREN .

    POWER           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    PLUS_PLUS       reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    MINUS_MINUS     reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    MODULO          reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    LEFT_SHIFT      reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    IS_EQ           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    NOT_EQ          reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    LESS            reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    GREATER_EQ      reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    GREATER         reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    LESS_EQ         reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    AMPERSAND       reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    PIPE            reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    QUESTION        reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    DOUBLE_PIPE     reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_PLUS         reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_MINUS        reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_TIMES        reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_DIV          reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_MODULO       reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_AND_BIT      reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_OR_BIT       reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_XOR_BIT      reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_LEFT         reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    EQ_RIGHT        reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    RBRACKET        reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    RANGE           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 253 (PrimaryExpression -> LPAREN Expression RPAREN .)


state 584

    (205) UnaryExpression -> LPAREN Type RPAREN . DOT IDENTIFIER

    DOT             shift and go to state 683


state 585

    (191) AddExpression -> AddExpression PLUS MulExpression .
    (194) MulExpression -> MulExpression . TIMES UnaryExpression
    (195) MulExpression -> MulExpression . DIV UnaryExpression
    (196) MulExpression -> MulExpression . MODULO UnaryExpression

    PLUS            reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    MINUS           reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    LEFT_SHIFT      reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    RIGHT_SHIFT     reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    IS_EQ           reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    NOT_EQ          reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    LESS            reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    GREATER_EQ      reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    GREATER         reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    LESS_EQ         reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    AMPERSAND       reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    CARET           reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    PIPE            reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    DOUBLE_AMPERSAND reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    QUESTION        reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    DOUBLE_PIPE     reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    ASSIGN          reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_PLUS         reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_MINUS        reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_TIMES        reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_DIV          reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_MODULO       reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_AND_BIT      reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_OR_BIT       reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_XOR_BIT      reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_LEFT         reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    EQ_RIGHT        reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    COMMA           reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    RPAREN          reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    SEMICOLON       reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    RBRACKET        reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    RANGE           reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    RBRACE          reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    COLON           reduce using rule 191 (AddExpression -> AddExpression PLUS MulExpression .)
    TIMES           shift and go to state 397
    DIV             shift and go to state 396
    MODULO          shift and go to state 395


state 586

    (192) AddExpression -> AddExpression MINUS MulExpression .
    (194) MulExpression -> MulExpression . TIMES UnaryExpression
    (195) MulExpression -> MulExpression . DIV UnaryExpression
    (196) MulExpression -> MulExpression . MODULO UnaryExpression

    PLUS            reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    MINUS           reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    LEFT_SHIFT      reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    RIGHT_SHIFT     reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    IS_EQ           reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    NOT_EQ          reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    LESS            reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    GREATER_EQ      reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    GREATER         reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    LESS_EQ         reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    AMPERSAND       reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    CARET           reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    PIPE            reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    DOUBLE_AMPERSAND reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    QUESTION        reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    DOUBLE_PIPE     reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    ASSIGN          reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_PLUS         reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_MINUS        reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_TIMES        reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_DIV          reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_MODULO       reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_AND_BIT      reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_OR_BIT       reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_XOR_BIT      reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_LEFT         reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    EQ_RIGHT        reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    COMMA           reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    RPAREN          reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    SEMICOLON       reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    RBRACKET        reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    RANGE           reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    RBRACE          reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    COLON           reduce using rule 192 (AddExpression -> AddExpression MINUS MulExpression .)
    TIMES           shift and go to state 397
    DIV             shift and go to state 396
    MODULO          shift and go to state 395


state 587

    (99) BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression . RBRACKET

    RBRACKET        shift and go to state 684


state 588

    (61) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN .
    (62) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN . AltFuncDeclaratorSuffix
    (63) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN . AltDeclaratorSuffixes
    (74) AltFuncDeclaratorSuffix -> . Parameters MemberFunctionAttributes_opt
    (67) AltDeclaratorSuffixes -> . AltDeclaratorSuffix
    (68) AltDeclaratorSuffixes -> . AltDeclaratorSuffix AltDeclaratorSuffixes
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (71) AltDeclaratorSuffix -> . LBRACKET RBRACKET
    (72) AltDeclaratorSuffix -> . LBRACKET AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> . LBRACKET Type RBRACKET

    ASSIGN          reduce using rule 61 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN .)
    COMMA           reduce using rule 61 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN .)
    SEMICOLON       reduce using rule 61 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN .)
    ELLIPSIS        reduce using rule 61 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN .)
    RPAREN          reduce using rule 61 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN .)
    LPAREN          shift and go to state 76
    LBRACKET        shift and go to state 441

    Parameters                     shift and go to state 685
    AltDeclaratorSuffix            shift and go to state 442
    AltDeclaratorSuffixes          shift and go to state 686
    AltFuncDeclaratorSuffix        shift and go to state 687

state 589

    (64) AltDeclaratorX -> BasicType2_opt IDENTIFIER .
    (65) AltDeclaratorX -> BasicType2_opt IDENTIFIER . AltFuncDeclaratorSuffix
    (60) AltDeclarator -> BasicType2_opt IDENTIFIER . AltDeclaratorSuffixes
    (74) AltFuncDeclaratorSuffix -> . Parameters MemberFunctionAttributes_opt
    (67) AltDeclaratorSuffixes -> . AltDeclaratorSuffix
    (68) AltDeclaratorSuffixes -> . AltDeclaratorSuffix AltDeclaratorSuffixes
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (71) AltDeclaratorSuffix -> . LBRACKET RBRACKET
    (72) AltDeclaratorSuffix -> . LBRACKET AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> . LBRACKET Type RBRACKET

    RPAREN          reduce using rule 64 (AltDeclaratorX -> BasicType2_opt IDENTIFIER .)
    LPAREN          shift and go to state 76
    LBRACKET        shift and go to state 441

    Parameters                     shift and go to state 685
    AltDeclaratorSuffix            shift and go to state 442
    AltDeclaratorSuffixes          shift and go to state 443
    AltFuncDeclaratorSuffix        shift and go to state 688

state 590

    (73) AltDeclaratorSuffix -> LBRACKET Type . RBRACKET

    RBRACKET        shift and go to state 689


state 591

    (71) AltDeclaratorSuffix -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 71 (AltDeclaratorSuffix -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 71 (AltDeclaratorSuffix -> LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 71 (AltDeclaratorSuffix -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 71 (AltDeclaratorSuffix -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 71 (AltDeclaratorSuffix -> LBRACKET RBRACKET .)
    ELLIPSIS        reduce using rule 71 (AltDeclaratorSuffix -> LBRACKET RBRACKET .)


state 592

    (72) AltDeclaratorSuffix -> LBRACKET AssignExpression . RBRACKET

    RBRACKET        shift and go to state 690


state 593

    (68) AltDeclaratorSuffixes -> AltDeclaratorSuffix AltDeclaratorSuffixes .

    ASSIGN          reduce using rule 68 (AltDeclaratorSuffixes -> AltDeclaratorSuffix AltDeclaratorSuffixes .)
    COMMA           reduce using rule 68 (AltDeclaratorSuffixes -> AltDeclaratorSuffix AltDeclaratorSuffixes .)
    SEMICOLON       reduce using rule 68 (AltDeclaratorSuffixes -> AltDeclaratorSuffix AltDeclaratorSuffixes .)
    RPAREN          reduce using rule 68 (AltDeclaratorSuffixes -> AltDeclaratorSuffix AltDeclaratorSuffixes .)
    ELLIPSIS        reduce using rule 68 (AltDeclaratorSuffixes -> AltDeclaratorSuffix AltDeclaratorSuffixes .)


state 594

    (48) DeclaratorIdentifierList -> DeclaratorIdentifier COMMA . DeclaratorIdentifierList
    (47) DeclaratorIdentifierList -> . DeclaratorIdentifier
    (48) DeclaratorIdentifierList -> . DeclaratorIdentifier COMMA DeclaratorIdentifierList
    (49) DeclaratorIdentifier -> . VarDeclaratorIdentifier
    (50) DeclaratorIdentifier -> . AltDeclaratorIdentifier
    (51) VarDeclaratorIdentifier -> . IDENTIFIER
    (52) VarDeclaratorIdentifier -> . IDENTIFIER ASSIGN Initializer
    (53) AltDeclaratorIdentifier -> . BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt
    (54) AltDeclaratorIdentifier -> . BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN Initializer
    (55) AltDeclaratorIdentifier -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (56) AltDeclaratorIdentifier -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes ASSIGN Initializer
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters
    (477) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 448
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]

    DeclaratorIdentifier           shift and go to state 444
    DeclaratorIdentifierList       shift and go to state 691
    VarDeclaratorIdentifier        shift and go to state 449
    empty                          shift and go to state 86
    AltDeclaratorIdentifier        shift and go to state 445
    BasicType2X                    shift and go to state 81
    BasicType2_opt                 shift and go to state 447
    BasicType2                     shift and go to state 450

state 595

    (55) AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER . AltDeclaratorSuffixes
    (56) AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER . AltDeclaratorSuffixes ASSIGN Initializer
    (67) AltDeclaratorSuffixes -> . AltDeclaratorSuffix
    (68) AltDeclaratorSuffixes -> . AltDeclaratorSuffix AltDeclaratorSuffixes
    (71) AltDeclaratorSuffix -> . LBRACKET RBRACKET
    (72) AltDeclaratorSuffix -> . LBRACKET AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> . LBRACKET Type RBRACKET

    LBRACKET        shift and go to state 441

    AltDeclaratorSuffix            shift and go to state 442
    AltDeclaratorSuffixes          shift and go to state 692

state 596

    (52) VarDeclaratorIdentifier -> IDENTIFIER ASSIGN . Initializer
    (114) Initializer -> . VoidInitializer
    (115) Initializer -> . NonVoidInitializer
    (142) VoidInitializer -> . VOID
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    VOID            shift and go to state 358
    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    Initializer                    shift and go to state 693
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    ArrayLiteral                   shift and go to state 225
    NonVoidInitializer             shift and go to state 360
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    ArrayInitializer               shift and go to state 361
    RelExpression                  shift and go to state 177
    AssignExpression               shift and go to state 365
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    VoidInitializer                shift and go to state 362

state 597

    (53) AltDeclaratorIdentifier -> BasicType2 IDENTIFIER . AltDeclaratorSuffixes_opt
    (54) AltDeclaratorIdentifier -> BasicType2 IDENTIFIER . AltDeclaratorSuffixes_opt ASSIGN Initializer
    (69) AltDeclaratorSuffixes_opt -> . AltDeclaratorSuffixes
    (70) AltDeclaratorSuffixes_opt -> . empty
    (67) AltDeclaratorSuffixes -> . AltDeclaratorSuffix
    (68) AltDeclaratorSuffixes -> . AltDeclaratorSuffix AltDeclaratorSuffixes
    (477) empty -> .
    (71) AltDeclaratorSuffix -> . LBRACKET RBRACKET
    (72) AltDeclaratorSuffix -> . LBRACKET AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> . LBRACKET Type RBRACKET

    ASSIGN          reduce using rule 477 (empty -> .)
    COMMA           reduce using rule 477 (empty -> .)
    SEMICOLON       reduce using rule 477 (empty -> .)
    LBRACKET        shift and go to state 441

    AltDeclaratorSuffixes_opt      shift and go to state 694
    AltDeclaratorSuffix            shift and go to state 442
    AltDeclaratorSuffixes          shift and go to state 696
    empty                          shift and go to state 695

state 598

    (104) IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT . IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 39

    IdentifierList                 shift and go to state 697

state 599

    (153) CommaExpression -> AssignExpression COMMA CommaExpression .

    SEMICOLON       reduce using rule 153 (CommaExpression -> AssignExpression COMMA CommaExpression .)
    RPAREN          reduce using rule 153 (CommaExpression -> AssignExpression COMMA CommaExpression .)
    COLON           reduce using rule 153 (CommaExpression -> AssignExpression COMMA CommaExpression .)
    RANGE           reduce using rule 153 (CommaExpression -> AssignExpression COMMA CommaExpression .)


state 600

    (399) BaseClassList -> COLON SuperClass COMMA Interfaces .

    LBRACE          reduce using rule 399 (BaseClassList -> COLON SuperClass COMMA Interfaces .)


state 601

    (406) Interface -> BasicType .

    COMMA           reduce using rule 406 (Interface -> BasicType .)
    LBRACE          reduce using rule 406 (Interface -> BasicType .)


state 602

    (405) Interfaces -> Interface COMMA Interfaces .

    LBRACE          reduce using rule 405 (Interfaces -> Interface COMMA Interfaces .)


state 603

    (411) AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .

    SEMICOLON       reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    NEW             reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    DELETE          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    ALIAS           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    MIXIN           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    ENUM            reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    IMPORT          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    STATIC          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    PRIVATE         reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    PROTECTED       reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    PUBLIC          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    CLASS           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    UNION           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    EXTERN          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    FINAL           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    AUTO            reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    CONST           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    IMMUTABLE       reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    DOT             reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    BOOL            reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    SHORT           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    USHORT          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    INT             reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    UINT            reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    LONG            reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    ULONG           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    CHAR            reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    FLOAT           reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    VOID            reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    IDENTIFIER      reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    TYPEOF          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)
    RBRACE          reduce using rule 411 (AliasThis -> ALIAS IDENTIFIER THIS SEMICOLON .)


state 604

    (147) DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .

    SEMICOLON       reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    NEW             reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    DELETE          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    ALIAS           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    MIXIN           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    ENUM            reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    IMPORT          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    STATIC          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    PRIVATE         reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    PROTECTED       reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    PUBLIC          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    CLASS           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    UNION           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    EXTERN          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    FINAL           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    AUTO            reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    CONST           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    IMMUTABLE       reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    DOT             reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    BOOL            reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    SHORT           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    USHORT          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    INT             reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    UINT            reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    LONG            reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    ULONG           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    CHAR            reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    FLOAT           reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    VOID            reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    IDENTIFIER      reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    TYPEOF          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)
    RBRACE          reduce using rule 147 (DeclarationBlock -> LBRACE DeclDefs_opt RBRACE .)


state 605

    (33) MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 698


state 606

    (438) AnonymousEnumMember -> Type IDENTIFIER ASSIGN AssignExpression .

    COMMA           reduce using rule 438 (AnonymousEnumMember -> Type IDENTIFIER ASSIGN AssignExpression .)
    RBRACE          reduce using rule 438 (AnonymousEnumMember -> Type IDENTIFIER ASSIGN AssignExpression .)


state 607

    (431) AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .

    SEMICOLON       reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    CASE            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    DEFAULT         reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    LBRACE          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    IDENTIFIER      reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    IF              reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    WHILE           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    DO              reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    FOR             reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    SWITCH          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    FINAL           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    CONTINUE        reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    BREAK           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    RETURN          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    GOTO            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    WITH            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    MIXIN           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    IMPORT          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    STATIC          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    LPAREN          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    ALIAS           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    ENUM            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    EXTERN          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    AUTO            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    CONST           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    IMMUTABLE       reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    FOREACH         reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    FOREACH_REVERSE reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    CLASS           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    UNION           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    AMPERSAND       reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    PLUS_PLUS       reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    MINUS_MINUS     reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    TIMES           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    MINUS           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    PLUS            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    EXCLAMATION     reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    TILDE           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    CAST            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    DOT             reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    THIS            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    NULL            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    TRUE            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    FALSE           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    DOLLAR          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    INUMBER         reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    DNUMBER         reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    LIT_CHAR        reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    LIT_STR         reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    LBRACKET        reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    FUNCTION        reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    NEW             reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    BOOL            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    SHORT           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    USHORT          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    INT             reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    UINT            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    LONG            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    ULONG           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    CHAR            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    FLOAT           reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    VOID            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    TYPEOF          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    TYPEID          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    BODY            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    RBRACE          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    ELSE            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    $end            reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    DELETE          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    PRIVATE         reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    PROTECTED       reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)
    PUBLIC          reduce using rule 431 (AnonymousEnumDeclaration -> ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE .)


state 608

    (29) ImportBindList -> ImportBind COMMA ImportBindList .

    SEMICOLON       reduce using rule 29 (ImportBindList -> ImportBind COMMA ImportBindList .)


state 609

    (31) ImportBind -> IDENTIFIER ASSIGN IDENTIFIER .

    COMMA           reduce using rule 31 (ImportBind -> IDENTIFIER ASSIGN IDENTIFIER .)
    SEMICOLON       reduce using rule 31 (ImportBind -> IDENTIFIER ASSIGN IDENTIFIER .)


state 610

    (473) Symbol -> SymbolTail .

    RPAREN          reduce using rule 473 (Symbol -> SymbolTail .)


state 611

    (474) Symbol -> DOT . SymbolTail
    (235) PrimaryExpression -> DOT . IDENTIFIER
    (79) BasicType -> DOT . IdentifierList
    (475) SymbolTail -> . IDENTIFIER
    (476) SymbolTail -> . IDENTIFIER DOT SymbolTail
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 700

    SymbolTail                     shift and go to state 699
    IdentifierList                 shift and go to state 78

state 612

    (387) WithStatement -> WITH LPAREN Symbol . RPAREN ScopeStatement

    RPAREN          shift and go to state 701


state 613

    (386) WithStatement -> WITH LPAREN Expression . RPAREN ScopeStatement

    RPAREN          shift and go to state 702


state 614

    (475) SymbolTail -> IDENTIFIER .
    (476) SymbolTail -> IDENTIFIER . DOT SymbolTail
    (233) PrimaryExpression -> IDENTIFIER .
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (256) ArrayLiteral -> IDENTIFIER . LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> IDENTIFIER . LBRACKET AssignExpression RBRACKET

  ! reduce/reduce conflict for RPAREN resolved using rule 233 (PrimaryExpression -> IDENTIFIER .)
  ! reduce/reduce conflict for POWER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LEFT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RIGHT_SHIFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for IS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for NOT_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for GREATER resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for LESS_EQ resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for CARET resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_AMPERSAND resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for QUESTION resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_PIPE resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_PLUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MINUS resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_TIMES resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_DIV resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_MODULO resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_AND_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_OR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_XOR_BIT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_LEFT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for EQ_RIGHT resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 102 (IdentifierList -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 703
    POWER           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS_PLUS       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS_MINUS     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DIV             reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MODULO          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IS_EQ           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    NOT_EQ          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER_EQ      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS_EQ         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    AMPERSAND       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    CARET           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PIPE            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    QUESTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_PLUS         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MINUS        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_TIMES        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_DIV          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MODULO       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_LEFT         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_RIGHT        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COMMA           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LBRACKET        shift and go to state 423

  ! RPAREN          [ reduce using rule 475 (SymbolTail -> IDENTIFIER .) ]
  ! POWER           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS_PLUS       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS_MINUS     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DIV             [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MODULO          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LEFT_SHIFT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RIGHT_SHIFT     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! IS_EQ           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! NOT_EQ          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER_EQ      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! GREATER         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! LESS_EQ         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! AMPERSAND       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! CARET           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! PIPE            [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_AMPERSAND [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! QUESTION        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOUBLE_PIPE     [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! ASSIGN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_PLUS         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MINUS        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_TIMES        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_DIV          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_MODULO       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_AND_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_OR_BIT       [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_XOR_BIT      [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_LEFT         [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! EQ_RIGHT        [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 233 (PrimaryExpression -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 615

    (384) GotoStatement -> GOTO CASE SEMICOLON .

    SEMICOLON       reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    CASE            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    DEFAULT         reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    LBRACE          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    IDENTIFIER      reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    IF              reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    WHILE           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    DO              reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    FOR             reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    SWITCH          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    FINAL           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    CONTINUE        reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    BREAK           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    RETURN          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    GOTO            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    WITH            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    MIXIN           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    IMPORT          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    STATIC          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    LPAREN          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    ALIAS           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    ENUM            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    EXTERN          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    AUTO            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    CONST           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    IMMUTABLE       reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    FOREACH         reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    FOREACH_REVERSE reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    CLASS           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    UNION           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    AMPERSAND       reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    PLUS_PLUS       reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    MINUS_MINUS     reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    TIMES           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    MINUS           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    PLUS            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    EXCLAMATION     reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    TILDE           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    CAST            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    DOT             reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    THIS            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    NULL            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    TRUE            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    FALSE           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    DOLLAR          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    INUMBER         reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    DNUMBER         reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    LIT_CHAR        reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    LIT_STR         reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    LBRACKET        reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    FUNCTION        reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    NEW             reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    BOOL            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    SHORT           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    USHORT          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    INT             reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    UINT            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    LONG            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    ULONG           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    CHAR            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    FLOAT           reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    VOID            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    TYPEOF          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    TYPEID          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    BODY            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    RBRACE          reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)
    ELSE            reduce using rule 384 (GotoStatement -> GOTO CASE SEMICOLON .)


state 616

    (385) GotoStatement -> GOTO CASE Expression . SEMICOLON

    SEMICOLON       shift and go to state 704


state 617

    (383) GotoStatement -> GOTO DEFAULT SEMICOLON .

    SEMICOLON       reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    CASE            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    DEFAULT         reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    LBRACE          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    IDENTIFIER      reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    IF              reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    WHILE           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    DO              reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    FOR             reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    SWITCH          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    FINAL           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    CONTINUE        reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    BREAK           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    RETURN          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    GOTO            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    WITH            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    MIXIN           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    IMPORT          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    STATIC          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    LPAREN          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    ALIAS           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    ENUM            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    EXTERN          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    AUTO            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    CONST           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    IMMUTABLE       reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    FOREACH         reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    FOREACH_REVERSE reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    CLASS           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    UNION           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    AMPERSAND       reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    PLUS_PLUS       reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    MINUS_MINUS     reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    TIMES           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    MINUS           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    PLUS            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    EXCLAMATION     reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    TILDE           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    CAST            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    DOT             reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    THIS            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    NULL            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    TRUE            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    FALSE           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    DOLLAR          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    INUMBER         reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    DNUMBER         reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    LIT_CHAR        reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    LIT_STR         reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    LBRACKET        reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    FUNCTION        reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    NEW             reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    BOOL            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    SHORT           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    USHORT          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    INT             reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    UINT            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    LONG            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    ULONG           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    CHAR            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    FLOAT           reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    VOID            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    TYPEOF          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    TYPEID          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    BODY            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    RBRACE          reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)
    ELSE            reduce using rule 383 (GotoStatement -> GOTO DEFAULT SEMICOLON .)


state 618

    (382) GotoStatement -> GOTO IDENTIFIER SEMICOLON .

    SEMICOLON       reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    CASE            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    DEFAULT         reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    IF              reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    DO              reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    SWITCH          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    FINAL           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    CONTINUE        reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    GOTO            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    WITH            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    MIXIN           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    IMPORT          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    ALIAS           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    ENUM            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    EXTERN          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    AUTO            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    CONST           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    IMMUTABLE       reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    FOREACH         reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    FOREACH_REVERSE reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    CLASS           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    UNION           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    AMPERSAND       reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    PLUS_PLUS       reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    MINUS_MINUS     reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    TIMES           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    PLUS            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    EXCLAMATION     reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    TILDE           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    CAST            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    DOT             reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    THIS            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    NULL            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    TRUE            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    FALSE           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    DOLLAR          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    INUMBER         reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    DNUMBER         reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    LIT_CHAR        reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    LIT_STR         reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    LBRACKET        reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    FUNCTION        reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    NEW             reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    BOOL            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    SHORT           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    USHORT          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    INT             reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    UINT            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    LONG            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    ULONG           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    VOID            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    TYPEOF          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    TYPEID          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    BODY            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 382 (GotoStatement -> GOTO IDENTIFIER SEMICOLON .)


state 619

    (381) ReturnStatement -> RETURN Expression_opt SEMICOLON .

    SEMICOLON       reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    CASE            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    DEFAULT         reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    LBRACE          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    IDENTIFIER      reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    IF              reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    WHILE           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    DO              reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    FOR             reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    SWITCH          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    FINAL           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    CONTINUE        reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    BREAK           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    RETURN          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    GOTO            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    WITH            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    MIXIN           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    IMPORT          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    STATIC          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    LPAREN          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    ALIAS           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    ENUM            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    EXTERN          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    AUTO            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    CONST           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    IMMUTABLE       reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    FOREACH         reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    FOREACH_REVERSE reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    CLASS           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    UNION           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    AMPERSAND       reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    PLUS_PLUS       reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    MINUS_MINUS     reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    TIMES           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    MINUS           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    PLUS            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    EXCLAMATION     reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    TILDE           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    CAST            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    DOT             reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    THIS            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    NULL            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    TRUE            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    FALSE           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    DOLLAR          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    INUMBER         reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    DNUMBER         reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    LIT_CHAR        reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    LIT_STR         reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    LBRACKET        reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    FUNCTION        reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    NEW             reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    BOOL            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    SHORT           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    USHORT          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    INT             reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    UINT            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    LONG            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    ULONG           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    CHAR            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    FLOAT           reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    VOID            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    TYPEOF          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    TYPEID          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    BODY            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    RBRACE          reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)
    ELSE            reduce using rule 381 (ReturnStatement -> RETURN Expression_opt SEMICOLON .)


state 620

    (347) ForeachTypeList -> ForeachType .
    (348) ForeachTypeList -> ForeachType . COMMA ForeachTypeList

    SEMICOLON       reduce using rule 347 (ForeachTypeList -> ForeachType .)
    COMMA           shift and go to state 705


state 621

    (343) AggregateForeach -> Foreach LPAREN ForeachTypeList . SEMICOLON ForeachAggregate RPAREN

    SEMICOLON       shift and go to state 706


state 622

    (353) ForeachTypeAttributes_opt -> empty .

    IDENTIFIER      reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    ALIAS           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    DOT             reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    BOOL            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    SHORT           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    USHORT          reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    INT             reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    UINT            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    LONG            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    ULONG           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    CHAR            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    FLOAT           reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    VOID            reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)
    TYPEOF          reduce using rule 353 (ForeachTypeAttributes_opt -> empty .)


state 623

    (374) FinalSwitchStatement -> FINAL SWITCH LPAREN . Expression RPAREN ScopeStatement
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 707
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 624

    (363) CaseStatement -> CASE ArgumentList COLON . ScopeStatementList
    (368) ScopeStatementList -> . StatementListNoCaseNoDefault
    (369) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault
    (370) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault StatementListNoCaseNoDefault
    (371) StatementNoCaseNoDefault -> . SEMICOLON
    (372) StatementNoCaseNoDefault -> . NonEmptyStatementNoCaseNoDefault
    (373) StatementNoCaseNoDefault -> . ScopeBlockStatement
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (307) ScopeBlockStatement -> . BlockStatement
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    SEMICOLON       shift and go to state 633
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LBRACE          shift and go to state 145
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    BlockStatement                 shift and go to state 300
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    ScopeStatementList             shift and go to state 708
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    StatementNoCaseNoDefault       shift and go to state 632
    StorageClasses_opt             shift and go to state 9
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    StatementListNoCaseNoDefault   shift and go to state 634
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    LIT_STRPlus                    shift and go to state 210
    empty                          shift and go to state 62
    NonEmptyStatementNoCaseNoDefault shift and go to state 635
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    ScopeBlockStatement            shift and go to state 636
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 625

    (364) CaseRangeStatement -> CASE FirstExp COLON . RANGE LastExp COLON ScopeStatementList

    RANGE           shift and go to state 709


state 626

    (335) Initialize -> SEMICOLON .

    AMPERSAND       reduce using rule 335 (Initialize -> SEMICOLON .)
    PLUS_PLUS       reduce using rule 335 (Initialize -> SEMICOLON .)
    MINUS_MINUS     reduce using rule 335 (Initialize -> SEMICOLON .)
    TIMES           reduce using rule 335 (Initialize -> SEMICOLON .)
    MINUS           reduce using rule 335 (Initialize -> SEMICOLON .)
    PLUS            reduce using rule 335 (Initialize -> SEMICOLON .)
    EXCLAMATION     reduce using rule 335 (Initialize -> SEMICOLON .)
    LPAREN          reduce using rule 335 (Initialize -> SEMICOLON .)
    TILDE           reduce using rule 335 (Initialize -> SEMICOLON .)
    CAST            reduce using rule 335 (Initialize -> SEMICOLON .)
    IDENTIFIER      reduce using rule 335 (Initialize -> SEMICOLON .)
    DOT             reduce using rule 335 (Initialize -> SEMICOLON .)
    THIS            reduce using rule 335 (Initialize -> SEMICOLON .)
    NULL            reduce using rule 335 (Initialize -> SEMICOLON .)
    TRUE            reduce using rule 335 (Initialize -> SEMICOLON .)
    FALSE           reduce using rule 335 (Initialize -> SEMICOLON .)
    DOLLAR          reduce using rule 335 (Initialize -> SEMICOLON .)
    INUMBER         reduce using rule 335 (Initialize -> SEMICOLON .)
    DNUMBER         reduce using rule 335 (Initialize -> SEMICOLON .)
    LIT_CHAR        reduce using rule 335 (Initialize -> SEMICOLON .)
    LIT_STR         reduce using rule 335 (Initialize -> SEMICOLON .)
    LBRACKET        reduce using rule 335 (Initialize -> SEMICOLON .)
    FUNCTION        reduce using rule 335 (Initialize -> SEMICOLON .)
    MIXIN           reduce using rule 335 (Initialize -> SEMICOLON .)
    IMPORT          reduce using rule 335 (Initialize -> SEMICOLON .)
    NEW             reduce using rule 335 (Initialize -> SEMICOLON .)
    BOOL            reduce using rule 335 (Initialize -> SEMICOLON .)
    SHORT           reduce using rule 335 (Initialize -> SEMICOLON .)
    USHORT          reduce using rule 335 (Initialize -> SEMICOLON .)
    INT             reduce using rule 335 (Initialize -> SEMICOLON .)
    UINT            reduce using rule 335 (Initialize -> SEMICOLON .)
    LONG            reduce using rule 335 (Initialize -> SEMICOLON .)
    ULONG           reduce using rule 335 (Initialize -> SEMICOLON .)
    CHAR            reduce using rule 335 (Initialize -> SEMICOLON .)
    FLOAT           reduce using rule 335 (Initialize -> SEMICOLON .)
    VOID            reduce using rule 335 (Initialize -> SEMICOLON .)
    TYPEOF          reduce using rule 335 (Initialize -> SEMICOLON .)
    TYPEID          reduce using rule 335 (Initialize -> SEMICOLON .)
    LBRACE          reduce using rule 335 (Initialize -> SEMICOLON .)
    BODY            reduce using rule 335 (Initialize -> SEMICOLON .)
    SEMICOLON       reduce using rule 335 (Initialize -> SEMICOLON .)


state 627

    (331) ForStatement -> FOR LPAREN Initialize . Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (338) Test_opt -> . Test
    (339) Test_opt -> . empty
    (337) Test -> . Expression
    (477) empty -> .
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    SEMICOLON       reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    Test                           shift and go to state 710
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    ComplementExpression           shift and go to state 205
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 711
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BlockStatement                 shift and go to state 175
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 712
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    ImportExpression               shift and go to state 188
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    Test_opt                       shift and go to state 713
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 628

    (336) Initialize -> NoScopeNonEmptyStatement .

    AMPERSAND       reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    PLUS_PLUS       reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    MINUS_MINUS     reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    TIMES           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    MINUS           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    PLUS            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    EXCLAMATION     reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    LPAREN          reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    TILDE           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    CAST            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    IDENTIFIER      reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    DOT             reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    THIS            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    NULL            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    TRUE            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    FALSE           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    DOLLAR          reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    INUMBER         reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    DNUMBER         reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    LIT_CHAR        reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    LIT_STR         reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    LBRACKET        reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    FUNCTION        reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    MIXIN           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    IMPORT          reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    NEW             reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    BOOL            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    SHORT           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    USHORT          reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    INT             reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    UINT            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    LONG            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    ULONG           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    CHAR            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    FLOAT           reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    VOID            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    TYPEOF          reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    TYPEID          reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    LBRACE          reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    BODY            reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)
    SEMICOLON       reduce using rule 336 (Initialize -> NoScopeNonEmptyStatement .)


state 629

    (379) ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .

    SEMICOLON       reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    CASE            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    DEFAULT         reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    LBRACE          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    IDENTIFIER      reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    IF              reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    WHILE           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    DO              reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    FOR             reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    SWITCH          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    FINAL           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    CONTINUE        reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    BREAK           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    RETURN          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    GOTO            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    WITH            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    MIXIN           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    IMPORT          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    STATIC          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    LPAREN          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    ALIAS           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    ENUM            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    EXTERN          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    AUTO            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    CONST           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    IMMUTABLE       reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    FOREACH         reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    FOREACH_REVERSE reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    CLASS           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    UNION           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    AMPERSAND       reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    PLUS_PLUS       reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    MINUS_MINUS     reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    TIMES           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    MINUS           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    PLUS            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    EXCLAMATION     reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    TILDE           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    CAST            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    DOT             reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    THIS            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    NULL            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    TRUE            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    FALSE           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    DOLLAR          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    INUMBER         reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    DNUMBER         reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    LIT_CHAR        reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    LIT_STR         reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    LBRACKET        reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    FUNCTION        reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    NEW             reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    BOOL            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    SHORT           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    USHORT          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    INT             reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    UINT            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    LONG            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    ULONG           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    CHAR            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    FLOAT           reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    VOID            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    TYPEOF          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    TYPEID          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    BODY            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    RBRACE          reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)
    ELSE            reduce using rule 379 (ContinueStatement -> CONTINUE IDENTIFIER_opt SEMICOLON .)


state 630

    (388) MixinStatement -> MIXIN LPAREN AssignExpression . RPAREN SEMICOLON
    (269) MixinExpression -> MIXIN LPAREN AssignExpression . RPAREN

    RPAREN          shift and go to state 714


state 631

    (367) DefaultStatement -> DEFAULT COLON ScopeStatementList .

    SEMICOLON       reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    CASE            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    DEFAULT         reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    LBRACE          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    IDENTIFIER      reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    IF              reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    WHILE           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    DO              reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    FOR             reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    SWITCH          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    FINAL           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    CONTINUE        reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    BREAK           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    RETURN          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    GOTO            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    WITH            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    MIXIN           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    IMPORT          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    STATIC          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    LPAREN          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    ALIAS           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    ENUM            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    EXTERN          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    AUTO            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    CONST           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    IMMUTABLE       reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    FOREACH         reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    FOREACH_REVERSE reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    CLASS           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    UNION           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    AMPERSAND       reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    PLUS_PLUS       reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    MINUS_MINUS     reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    TIMES           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    MINUS           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    PLUS            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    EXCLAMATION     reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    TILDE           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    CAST            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    DOT             reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    THIS            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    NULL            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    TRUE            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    FALSE           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    DOLLAR          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    INUMBER         reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    DNUMBER         reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    LIT_CHAR        reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    LIT_STR         reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    LBRACKET        reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    FUNCTION        reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    NEW             reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    BOOL            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    SHORT           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    USHORT          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    INT             reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    UINT            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    LONG            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    ULONG           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    CHAR            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    FLOAT           reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    VOID            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    TYPEOF          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    TYPEID          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    BODY            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    RBRACE          reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)
    ELSE            reduce using rule 367 (DefaultStatement -> DEFAULT COLON ScopeStatementList .)


state 632

    (369) StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .
    (370) StatementListNoCaseNoDefault -> StatementNoCaseNoDefault . StatementListNoCaseNoDefault
    (369) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault
    (370) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault StatementListNoCaseNoDefault
    (371) StatementNoCaseNoDefault -> . SEMICOLON
    (372) StatementNoCaseNoDefault -> . NonEmptyStatementNoCaseNoDefault
    (373) StatementNoCaseNoDefault -> . ScopeBlockStatement
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (307) ScopeBlockStatement -> . BlockStatement
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for WITH resolved as shift
  ! shift/reduce conflict for MIXIN resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ALIAS resolved as shift
  ! shift/reduce conflict for ENUM resolved as shift
  ! shift/reduce conflict for EXTERN resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for IMMUTABLE resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FOREACH_REVERSE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! reduce/reduce conflict for DOT resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for BOOL resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for SHORT resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for USHORT resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for INT resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for UINT resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for LONG resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for ULONG resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for CHAR resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for FLOAT resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! reduce/reduce conflict for VOID resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! reduce/reduce conflict for TYPEOF resolved using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for TILDE resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for INUMBER resolved as shift
  ! shift/reduce conflict for DNUMBER resolved as shift
  ! shift/reduce conflict for LIT_CHAR resolved as shift
  ! shift/reduce conflict for LIT_STR resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for USHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for UINT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for ULONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for TYPEID resolved as shift
  ! shift/reduce conflict for BODY resolved as shift
    CASE            reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
    DEFAULT         reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
    RBRACE          reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
    ELSE            reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .)
    SEMICOLON       shift and go to state 633
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LBRACE          shift and go to state 145
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! SEMICOLON       [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! LBRACE          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! IDENTIFIER      [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! IF              [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! WHILE           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! DO              [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! FOR             [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! SWITCH          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! FINAL           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! CONTINUE        [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! BREAK           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! RETURN          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! GOTO            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! WITH            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! MIXIN           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! IMPORT          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! STATIC          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! LPAREN          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! ALIAS           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! ENUM            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! EXTERN          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! AUTO            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! CONST           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! IMMUTABLE       [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! FOREACH         [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! FOREACH_REVERSE [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! CLASS           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! UNION           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! AMPERSAND       [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! PLUS_PLUS       [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! MINUS_MINUS     [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! TIMES           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! MINUS           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! PLUS            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! EXCLAMATION     [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! TILDE           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! CAST            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! DOT             [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! THIS            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! NULL            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! TRUE            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! FALSE           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! DOLLAR          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! INUMBER         [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! DNUMBER         [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! LIT_CHAR        [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! LIT_STR         [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! LBRACKET        [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! FUNCTION        [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! NEW             [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! BOOL            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! SHORT           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! USHORT          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! INT             [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! UINT            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! LONG            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! ULONG           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! CHAR            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! FLOAT           [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! VOID            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! TYPEOF          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! TYPEID          [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! BODY            [ reduce using rule 369 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault .) ]
  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ reduce using rule 477 (empty -> .) ]
  ! SHORT           [ reduce using rule 477 (empty -> .) ]
  ! USHORT          [ reduce using rule 477 (empty -> .) ]
  ! INT             [ reduce using rule 477 (empty -> .) ]
  ! UINT            [ reduce using rule 477 (empty -> .) ]
  ! LONG            [ reduce using rule 477 (empty -> .) ]
  ! ULONG           [ reduce using rule 477 (empty -> .) ]
  ! CHAR            [ reduce using rule 477 (empty -> .) ]
  ! FLOAT           [ reduce using rule 477 (empty -> .) ]
  ! VOID            [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 477 (empty -> .) ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    BlockStatement                 shift and go to state 300
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    StatementNoCaseNoDefault       shift and go to state 632
    StorageClasses_opt             shift and go to state 9
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    StatementListNoCaseNoDefault   shift and go to state 715
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    LIT_STRPlus                    shift and go to state 210
    empty                          shift and go to state 62
    NonEmptyStatementNoCaseNoDefault shift and go to state 635
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    ScopeBlockStatement            shift and go to state 636
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 633

    (371) StatementNoCaseNoDefault -> SEMICOLON .

    SEMICOLON       reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    CASE            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    DEFAULT         reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    LBRACE          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    IDENTIFIER      reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    IF              reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    WHILE           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    DO              reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    FOR             reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    SWITCH          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    FINAL           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    CONTINUE        reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    BREAK           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    RETURN          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    GOTO            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    WITH            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    MIXIN           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    IMPORT          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    STATIC          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    LPAREN          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    ALIAS           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    ENUM            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    EXTERN          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    AUTO            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    CONST           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    IMMUTABLE       reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    FOREACH         reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    FOREACH_REVERSE reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    CLASS           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    UNION           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    AMPERSAND       reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    PLUS_PLUS       reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    MINUS_MINUS     reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    TIMES           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    MINUS           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    PLUS            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    EXCLAMATION     reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    TILDE           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    CAST            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    DOT             reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    THIS            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    NULL            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    TRUE            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    FALSE           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    DOLLAR          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    INUMBER         reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    DNUMBER         reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    LIT_CHAR        reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    LIT_STR         reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    LBRACKET        reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    FUNCTION        reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    NEW             reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    BOOL            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    SHORT           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    USHORT          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    INT             reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    UINT            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    LONG            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    ULONG           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    CHAR            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    FLOAT           reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    VOID            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    TYPEOF          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    TYPEID          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    BODY            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    RBRACE          reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)
    ELSE            reduce using rule 371 (StatementNoCaseNoDefault -> SEMICOLON .)


state 634

    (368) ScopeStatementList -> StatementListNoCaseNoDefault .

    SEMICOLON       reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    CASE            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    DEFAULT         reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    LBRACE          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    IDENTIFIER      reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    IF              reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    WHILE           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    DO              reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    FOR             reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    SWITCH          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    FINAL           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    CONTINUE        reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    BREAK           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    RETURN          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    GOTO            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    WITH            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    MIXIN           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    IMPORT          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    STATIC          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    LPAREN          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    ALIAS           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    ENUM            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    EXTERN          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    AUTO            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    CONST           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    IMMUTABLE       reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    FOREACH         reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    FOREACH_REVERSE reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    CLASS           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    UNION           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    AMPERSAND       reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    PLUS_PLUS       reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    MINUS_MINUS     reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    TIMES           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    MINUS           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    PLUS            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    EXCLAMATION     reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    TILDE           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    CAST            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    DOT             reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    THIS            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    NULL            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    TRUE            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    FALSE           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    DOLLAR          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    INUMBER         reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    DNUMBER         reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    LIT_CHAR        reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    LIT_STR         reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    LBRACKET        reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    FUNCTION        reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    NEW             reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    BOOL            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    SHORT           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    USHORT          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    INT             reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    UINT            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    LONG            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    ULONG           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    CHAR            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    FLOAT           reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    VOID            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    TYPEOF          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    TYPEID          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    BODY            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    RBRACE          reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)
    ELSE            reduce using rule 368 (ScopeStatementList -> StatementListNoCaseNoDefault .)


state 635

    (372) StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .

    SEMICOLON       reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    CASE            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    DEFAULT         reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    LBRACE          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    IDENTIFIER      reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    IF              reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    WHILE           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    DO              reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    FOR             reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    SWITCH          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    FINAL           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    CONTINUE        reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    BREAK           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    RETURN          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    GOTO            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    WITH            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    MIXIN           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    IMPORT          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    STATIC          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    LPAREN          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    ALIAS           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    ENUM            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    EXTERN          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    AUTO            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    CONST           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    IMMUTABLE       reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    FOREACH         reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    FOREACH_REVERSE reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    CLASS           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    UNION           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    AMPERSAND       reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    PLUS_PLUS       reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    MINUS_MINUS     reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    TIMES           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    MINUS           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    PLUS            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    EXCLAMATION     reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    TILDE           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    CAST            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    DOT             reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    THIS            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    NULL            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    TRUE            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    FALSE           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    DOLLAR          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    INUMBER         reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    DNUMBER         reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    LIT_CHAR        reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    LIT_STR         reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    LBRACKET        reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    FUNCTION        reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    NEW             reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    BOOL            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    SHORT           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    USHORT          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    INT             reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    UINT            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    LONG            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    ULONG           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    CHAR            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    FLOAT           reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    VOID            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    TYPEOF          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    TYPEID          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    BODY            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    RBRACE          reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)
    ELSE            reduce using rule 372 (StatementNoCaseNoDefault -> NonEmptyStatementNoCaseNoDefault .)


state 636

    (373) StatementNoCaseNoDefault -> ScopeBlockStatement .

    SEMICOLON       reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    CASE            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    DEFAULT         reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    LBRACE          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    IDENTIFIER      reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    IF              reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    WHILE           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    DO              reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    FOR             reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    SWITCH          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    FINAL           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    CONTINUE        reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    BREAK           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    RETURN          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    GOTO            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    WITH            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    MIXIN           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    IMPORT          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    STATIC          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    LPAREN          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    ALIAS           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    ENUM            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    EXTERN          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    AUTO            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    CONST           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    IMMUTABLE       reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    FOREACH         reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    FOREACH_REVERSE reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    CLASS           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    UNION           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    AMPERSAND       reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    PLUS_PLUS       reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    MINUS_MINUS     reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    TIMES           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    MINUS           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    PLUS            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    EXCLAMATION     reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    TILDE           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    CAST            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    DOT             reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    THIS            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    NULL            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    TRUE            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    FALSE           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    DOLLAR          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    INUMBER         reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    DNUMBER         reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    LIT_CHAR        reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    LIT_STR         reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    LBRACKET        reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    FUNCTION        reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    NEW             reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    BOOL            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    SHORT           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    USHORT          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    INT             reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    UINT            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    LONG            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    ULONG           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    CHAR            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    FLOAT           reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    VOID            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    TYPEOF          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    TYPEID          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    BODY            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    RBRACE          reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)
    ELSE            reduce using rule 373 (StatementNoCaseNoDefault -> ScopeBlockStatement .)


state 637

    (329) WhileStatement -> WHILE LPAREN Expression . RPAREN ScopeStatement

    RPAREN          shift and go to state 716


state 638

    (362) SwitchStatement -> SWITCH LPAREN Expression . RPAREN ScopeStatement

    RPAREN          shift and go to state 717


state 639

    (310) LabeledStatement -> IDENTIFIER COLON Statement .

    AMPERSAND       reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    PLUS_PLUS       reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    MINUS_MINUS     reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    TIMES           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    MINUS           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    PLUS            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    EXCLAMATION     reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LPAREN          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    TILDE           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CAST            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IDENTIFIER      reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DOT             reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    THIS            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    NULL            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    TRUE            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FALSE           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DOLLAR          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    INUMBER         reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DNUMBER         reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LIT_CHAR        reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LIT_STR         reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LBRACKET        reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FUNCTION        reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    MIXIN           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IMPORT          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    NEW             reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BOOL            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SHORT           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    USHORT          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    INT             reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    UINT            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LONG            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    ULONG           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CHAR            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FLOAT           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    VOID            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    TYPEOF          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    TYPEID          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LBRACE          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BODY            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SEMICOLON       reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CASE            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DEFAULT         reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IF              reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    WHILE           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DO              reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FOR             reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SWITCH          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FINAL           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CONTINUE        reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BREAK           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    RETURN          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    GOTO            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    WITH            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    STATIC          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    ALIAS           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    ENUM            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    EXTERN          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    AUTO            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CONST           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IMMUTABLE       reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FOREACH         reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FOREACH_REVERSE reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CLASS           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    UNION           reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    RBRACE          reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)
    ELSE            reduce using rule 310 (LabeledStatement -> IDENTIFIER COLON Statement .)


state 640

    (280) NoScopeStatement -> BlockStatement .
    (307) ScopeBlockStatement -> BlockStatement .
    (265) FunctionLiteralBody -> BlockStatement .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for CASE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for IF resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for WHILE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for DO resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for FOR resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for SWITCH resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for FINAL resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for BREAK resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for RETURN resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for GOTO resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for WITH resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for MIXIN resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for IMPORT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for STATIC resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for ALIAS resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for ENUM resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for EXTERN resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for AUTO resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for CONST resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for IMMUTABLE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for FOREACH resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for FOREACH_REVERSE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for CLASS resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for UNION resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for TIMES resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for MINUS resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for PLUS resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for EXCLAMATION resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for TILDE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for CAST resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for DOT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for THIS resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for NULL resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for TRUE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for FALSE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for DOLLAR resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for INUMBER resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for DNUMBER resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for LIT_CHAR resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for LIT_STR resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for NEW resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for BOOL resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for SHORT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for USHORT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for INT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for UINT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for LONG resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for ULONG resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for CHAR resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for VOID resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for TYPEID resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for BODY resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for ELSE resolved using rule 280 (NoScopeStatement -> BlockStatement .)
  ! reduce/reduce conflict for DOT resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for TIMES resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for PLUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for MINUS resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CASE            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    DEFAULT         reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    LBRACE          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    IDENTIFIER      reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    IF              reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    WHILE           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    DO              reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    FOR             reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    SWITCH          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    FINAL           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    CONTINUE        reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    BREAK           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    RETURN          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    GOTO            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    WITH            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    MIXIN           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    IMPORT          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    STATIC          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    ALIAS           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    ENUM            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    EXTERN          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    AUTO            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    CONST           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    IMMUTABLE       reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    FOREACH         reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    FOREACH_REVERSE reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    CLASS           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    UNION           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    EXCLAMATION     reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    TILDE           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    CAST            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    THIS            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    NULL            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    TRUE            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    FALSE           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    DOLLAR          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    INUMBER         reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    DNUMBER         reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    LIT_CHAR        reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    LIT_STR         reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    LBRACKET        reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    FUNCTION        reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    NEW             reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    BOOL            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    SHORT           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    USHORT          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    INT             reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    UINT            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    LONG            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    ULONG           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    CHAR            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    FLOAT           reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    VOID            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    TYPEOF          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    TYPEID          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    BODY            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    RBRACE          reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    ELSE            reduce using rule 280 (NoScopeStatement -> BlockStatement .)
    POWER           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOT             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS_PLUS       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS_MINUS     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LPAREN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    TIMES           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DIV             reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MODULO          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PLUS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    MINUS           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LEFT_SHIFT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    RIGHT_SHIFT     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    IS_EQ           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    NOT_EQ          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER_EQ      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    GREATER         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    LESS_EQ         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    AMPERSAND       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    CARET           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    PIPE            reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_AMPERSAND reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    QUESTION        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    DOUBLE_PIPE     reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    ASSIGN          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_PLUS         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MINUS        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_TIMES        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_DIV          reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_MODULO       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_AND_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_OR_BIT       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_XOR_BIT      reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_LEFT         reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    EQ_RIGHT        reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    COMMA           reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)
    SEMICOLON       reduce using rule 265 (FunctionLiteralBody -> BlockStatement .)

  ! SEMICOLON       [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! LPAREN          [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! AMPERSAND       [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! PLUS_PLUS       [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! MINUS_MINUS     [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! TIMES           [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! MINUS           [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! PLUS            [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! DOT             [ reduce using rule 280 (NoScopeStatement -> BlockStatement .) ]
  ! SEMICOLON       [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! CASE            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! DEFAULT         [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! LBRACE          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! IDENTIFIER      [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! IF              [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! WHILE           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! DO              [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! FOR             [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! SWITCH          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! FINAL           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! CONTINUE        [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! BREAK           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! RETURN          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! GOTO            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! WITH            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! MIXIN           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! IMPORT          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! STATIC          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! LPAREN          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! ALIAS           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! ENUM            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! EXTERN          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! AUTO            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! CONST           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! IMMUTABLE       [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! FOREACH         [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! FOREACH_REVERSE [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! CLASS           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! UNION           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! AMPERSAND       [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! PLUS_PLUS       [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! MINUS_MINUS     [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! TIMES           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! MINUS           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! PLUS            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! EXCLAMATION     [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! TILDE           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! CAST            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! DOT             [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! THIS            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! NULL            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! TRUE            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! FALSE           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! DOLLAR          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! INUMBER         [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! DNUMBER         [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! LIT_CHAR        [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! LIT_STR         [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! LBRACKET        [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! FUNCTION        [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! NEW             [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! BOOL            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! SHORT           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! USHORT          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! INT             [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! UINT            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! LONG            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! ULONG           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! CHAR            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! FLOAT           [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! VOID            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! TYPEOF          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! TYPEID          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! BODY            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! RBRACE          [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]
  ! ELSE            [ reduce using rule 307 (ScopeBlockStatement -> BlockStatement .) ]


state 641

    (278) NoScopeStatement -> SEMICOLON .
    (273) Statement -> SEMICOLON .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for CASE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for LBRACE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for DO resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for SWITCH resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for FINAL resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for BREAK resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for GOTO resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for WITH resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for MIXIN resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for IMPORT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for STATIC resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for LPAREN resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for ALIAS resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for ENUM resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for EXTERN resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for AUTO resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for CONST resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for IMMUTABLE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for FOREACH resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for FOREACH_REVERSE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for CLASS resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for UNION resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for TIMES resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for PLUS resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for EXCLAMATION resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for TILDE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for CAST resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for DOT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for THIS resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for NULL resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for TRUE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for FALSE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for DOLLAR resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for INUMBER resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for DNUMBER resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for LIT_CHAR resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for LIT_STR resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for NEW resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for BOOL resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for SHORT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for USHORT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for INT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for UINT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for LONG resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for ULONG resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for CHAR resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for FLOAT resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for VOID resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for TYPEID resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for BODY resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for RBRACE resolved using rule 273 (Statement -> SEMICOLON .)
  ! reduce/reduce conflict for ELSE resolved using rule 273 (Statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 273 (Statement -> SEMICOLON .)
    CASE            reduce using rule 273 (Statement -> SEMICOLON .)
    DEFAULT         reduce using rule 273 (Statement -> SEMICOLON .)
    LBRACE          reduce using rule 273 (Statement -> SEMICOLON .)
    IDENTIFIER      reduce using rule 273 (Statement -> SEMICOLON .)
    IF              reduce using rule 273 (Statement -> SEMICOLON .)
    WHILE           reduce using rule 273 (Statement -> SEMICOLON .)
    DO              reduce using rule 273 (Statement -> SEMICOLON .)
    FOR             reduce using rule 273 (Statement -> SEMICOLON .)
    SWITCH          reduce using rule 273 (Statement -> SEMICOLON .)
    FINAL           reduce using rule 273 (Statement -> SEMICOLON .)
    CONTINUE        reduce using rule 273 (Statement -> SEMICOLON .)
    BREAK           reduce using rule 273 (Statement -> SEMICOLON .)
    RETURN          reduce using rule 273 (Statement -> SEMICOLON .)
    GOTO            reduce using rule 273 (Statement -> SEMICOLON .)
    WITH            reduce using rule 273 (Statement -> SEMICOLON .)
    MIXIN           reduce using rule 273 (Statement -> SEMICOLON .)
    IMPORT          reduce using rule 273 (Statement -> SEMICOLON .)
    STATIC          reduce using rule 273 (Statement -> SEMICOLON .)
    LPAREN          reduce using rule 273 (Statement -> SEMICOLON .)
    ALIAS           reduce using rule 273 (Statement -> SEMICOLON .)
    ENUM            reduce using rule 273 (Statement -> SEMICOLON .)
    EXTERN          reduce using rule 273 (Statement -> SEMICOLON .)
    AUTO            reduce using rule 273 (Statement -> SEMICOLON .)
    CONST           reduce using rule 273 (Statement -> SEMICOLON .)
    IMMUTABLE       reduce using rule 273 (Statement -> SEMICOLON .)
    FOREACH         reduce using rule 273 (Statement -> SEMICOLON .)
    FOREACH_REVERSE reduce using rule 273 (Statement -> SEMICOLON .)
    CLASS           reduce using rule 273 (Statement -> SEMICOLON .)
    UNION           reduce using rule 273 (Statement -> SEMICOLON .)
    AMPERSAND       reduce using rule 273 (Statement -> SEMICOLON .)
    PLUS_PLUS       reduce using rule 273 (Statement -> SEMICOLON .)
    MINUS_MINUS     reduce using rule 273 (Statement -> SEMICOLON .)
    TIMES           reduce using rule 273 (Statement -> SEMICOLON .)
    MINUS           reduce using rule 273 (Statement -> SEMICOLON .)
    PLUS            reduce using rule 273 (Statement -> SEMICOLON .)
    EXCLAMATION     reduce using rule 273 (Statement -> SEMICOLON .)
    TILDE           reduce using rule 273 (Statement -> SEMICOLON .)
    CAST            reduce using rule 273 (Statement -> SEMICOLON .)
    DOT             reduce using rule 273 (Statement -> SEMICOLON .)
    THIS            reduce using rule 273 (Statement -> SEMICOLON .)
    NULL            reduce using rule 273 (Statement -> SEMICOLON .)
    TRUE            reduce using rule 273 (Statement -> SEMICOLON .)
    FALSE           reduce using rule 273 (Statement -> SEMICOLON .)
    DOLLAR          reduce using rule 273 (Statement -> SEMICOLON .)
    INUMBER         reduce using rule 273 (Statement -> SEMICOLON .)
    DNUMBER         reduce using rule 273 (Statement -> SEMICOLON .)
    LIT_CHAR        reduce using rule 273 (Statement -> SEMICOLON .)
    LIT_STR         reduce using rule 273 (Statement -> SEMICOLON .)
    LBRACKET        reduce using rule 273 (Statement -> SEMICOLON .)
    FUNCTION        reduce using rule 273 (Statement -> SEMICOLON .)
    NEW             reduce using rule 273 (Statement -> SEMICOLON .)
    BOOL            reduce using rule 273 (Statement -> SEMICOLON .)
    SHORT           reduce using rule 273 (Statement -> SEMICOLON .)
    USHORT          reduce using rule 273 (Statement -> SEMICOLON .)
    INT             reduce using rule 273 (Statement -> SEMICOLON .)
    UINT            reduce using rule 273 (Statement -> SEMICOLON .)
    LONG            reduce using rule 273 (Statement -> SEMICOLON .)
    ULONG           reduce using rule 273 (Statement -> SEMICOLON .)
    CHAR            reduce using rule 273 (Statement -> SEMICOLON .)
    FLOAT           reduce using rule 273 (Statement -> SEMICOLON .)
    VOID            reduce using rule 273 (Statement -> SEMICOLON .)
    TYPEOF          reduce using rule 273 (Statement -> SEMICOLON .)
    TYPEID          reduce using rule 273 (Statement -> SEMICOLON .)
    BODY            reduce using rule 273 (Statement -> SEMICOLON .)
    RBRACE          reduce using rule 273 (Statement -> SEMICOLON .)
    ELSE            reduce using rule 273 (Statement -> SEMICOLON .)

  ! SEMICOLON       [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! CASE            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! DEFAULT         [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! LBRACE          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! IDENTIFIER      [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! IF              [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! WHILE           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! DO              [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! FOR             [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! SWITCH          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! FINAL           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! CONTINUE        [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! BREAK           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! RETURN          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! GOTO            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! WITH            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! MIXIN           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! IMPORT          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! STATIC          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! LPAREN          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! ALIAS           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! ENUM            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! EXTERN          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! AUTO            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! CONST           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! IMMUTABLE       [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! FOREACH         [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! FOREACH_REVERSE [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! CLASS           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! UNION           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! AMPERSAND       [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! PLUS_PLUS       [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! MINUS_MINUS     [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! TIMES           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! MINUS           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! PLUS            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! EXCLAMATION     [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! TILDE           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! CAST            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! DOT             [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! THIS            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! NULL            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! TRUE            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! FALSE           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! DOLLAR          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! INUMBER         [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! DNUMBER         [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! LIT_CHAR        [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! LIT_STR         [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! LBRACKET        [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! FUNCTION        [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! NEW             [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! BOOL            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! SHORT           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! USHORT          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! INT             [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! UINT            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! LONG            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! ULONG           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! CHAR            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! VOID            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! TYPEOF          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! TYPEID          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! BODY            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! RBRACE          [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]
  ! ELSE            [ reduce using rule 278 (NoScopeStatement -> SEMICOLON .) ]


state 642

    (309) LabeledStatement -> IDENTIFIER COLON NoScopeStatement .

    AMPERSAND       reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    PLUS_PLUS       reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    MINUS_MINUS     reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    TIMES           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    MINUS           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    PLUS            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    EXCLAMATION     reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    LPAREN          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    TILDE           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    CAST            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    IDENTIFIER      reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    DOT             reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    THIS            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    NULL            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    TRUE            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    FALSE           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    DOLLAR          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    INUMBER         reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    DNUMBER         reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    LIT_CHAR        reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    LIT_STR         reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    LBRACKET        reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    FUNCTION        reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    MIXIN           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    IMPORT          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    NEW             reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    BOOL            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    SHORT           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    USHORT          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    INT             reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    UINT            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    LONG            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    ULONG           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    CHAR            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    FLOAT           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    VOID            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    TYPEOF          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    TYPEID          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    LBRACE          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    BODY            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    SEMICOLON       reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    CASE            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    DEFAULT         reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    IF              reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    WHILE           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    DO              reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    FOR             reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    SWITCH          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    FINAL           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    CONTINUE        reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    BREAK           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    RETURN          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    GOTO            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    WITH            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    STATIC          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    ALIAS           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    ENUM            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    EXTERN          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    AUTO            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    CONST           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    IMMUTABLE       reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    FOREACH         reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    FOREACH_REVERSE reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    CLASS           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    UNION           reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    RBRACE          reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)
    ELSE            reduce using rule 309 (LabeledStatement -> IDENTIFIER COLON NoScopeStatement .)


state 643

    (279) NoScopeStatement -> NonEmptyStatement .
    (274) Statement -> NonEmptyStatement .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for CASE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for IF resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for WHILE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for DO resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for FOR resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for SWITCH resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for FINAL resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for BREAK resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for RETURN resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for GOTO resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for WITH resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for MIXIN resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for IMPORT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for STATIC resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for ALIAS resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for ENUM resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for EXTERN resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for AUTO resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for CONST resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for IMMUTABLE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for FOREACH resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for FOREACH_REVERSE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for CLASS resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for UNION resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for AMPERSAND resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for PLUS_PLUS resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for MINUS_MINUS resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for TIMES resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for MINUS resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for PLUS resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for EXCLAMATION resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for TILDE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for CAST resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for DOT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for THIS resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for NULL resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for TRUE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for FALSE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for DOLLAR resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for INUMBER resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for DNUMBER resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for LIT_CHAR resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for LIT_STR resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for NEW resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for BOOL resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for SHORT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for USHORT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for INT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for UINT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for LONG resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for ULONG resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for CHAR resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for VOID resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for TYPEID resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for BODY resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 274 (Statement -> NonEmptyStatement .)
  ! reduce/reduce conflict for ELSE resolved using rule 274 (Statement -> NonEmptyStatement .)
    SEMICOLON       reduce using rule 274 (Statement -> NonEmptyStatement .)
    CASE            reduce using rule 274 (Statement -> NonEmptyStatement .)
    DEFAULT         reduce using rule 274 (Statement -> NonEmptyStatement .)
    LBRACE          reduce using rule 274 (Statement -> NonEmptyStatement .)
    IDENTIFIER      reduce using rule 274 (Statement -> NonEmptyStatement .)
    IF              reduce using rule 274 (Statement -> NonEmptyStatement .)
    WHILE           reduce using rule 274 (Statement -> NonEmptyStatement .)
    DO              reduce using rule 274 (Statement -> NonEmptyStatement .)
    FOR             reduce using rule 274 (Statement -> NonEmptyStatement .)
    SWITCH          reduce using rule 274 (Statement -> NonEmptyStatement .)
    FINAL           reduce using rule 274 (Statement -> NonEmptyStatement .)
    CONTINUE        reduce using rule 274 (Statement -> NonEmptyStatement .)
    BREAK           reduce using rule 274 (Statement -> NonEmptyStatement .)
    RETURN          reduce using rule 274 (Statement -> NonEmptyStatement .)
    GOTO            reduce using rule 274 (Statement -> NonEmptyStatement .)
    WITH            reduce using rule 274 (Statement -> NonEmptyStatement .)
    MIXIN           reduce using rule 274 (Statement -> NonEmptyStatement .)
    IMPORT          reduce using rule 274 (Statement -> NonEmptyStatement .)
    STATIC          reduce using rule 274 (Statement -> NonEmptyStatement .)
    LPAREN          reduce using rule 274 (Statement -> NonEmptyStatement .)
    ALIAS           reduce using rule 274 (Statement -> NonEmptyStatement .)
    ENUM            reduce using rule 274 (Statement -> NonEmptyStatement .)
    EXTERN          reduce using rule 274 (Statement -> NonEmptyStatement .)
    AUTO            reduce using rule 274 (Statement -> NonEmptyStatement .)
    CONST           reduce using rule 274 (Statement -> NonEmptyStatement .)
    IMMUTABLE       reduce using rule 274 (Statement -> NonEmptyStatement .)
    FOREACH         reduce using rule 274 (Statement -> NonEmptyStatement .)
    FOREACH_REVERSE reduce using rule 274 (Statement -> NonEmptyStatement .)
    CLASS           reduce using rule 274 (Statement -> NonEmptyStatement .)
    UNION           reduce using rule 274 (Statement -> NonEmptyStatement .)
    AMPERSAND       reduce using rule 274 (Statement -> NonEmptyStatement .)
    PLUS_PLUS       reduce using rule 274 (Statement -> NonEmptyStatement .)
    MINUS_MINUS     reduce using rule 274 (Statement -> NonEmptyStatement .)
    TIMES           reduce using rule 274 (Statement -> NonEmptyStatement .)
    MINUS           reduce using rule 274 (Statement -> NonEmptyStatement .)
    PLUS            reduce using rule 274 (Statement -> NonEmptyStatement .)
    EXCLAMATION     reduce using rule 274 (Statement -> NonEmptyStatement .)
    TILDE           reduce using rule 274 (Statement -> NonEmptyStatement .)
    CAST            reduce using rule 274 (Statement -> NonEmptyStatement .)
    DOT             reduce using rule 274 (Statement -> NonEmptyStatement .)
    THIS            reduce using rule 274 (Statement -> NonEmptyStatement .)
    NULL            reduce using rule 274 (Statement -> NonEmptyStatement .)
    TRUE            reduce using rule 274 (Statement -> NonEmptyStatement .)
    FALSE           reduce using rule 274 (Statement -> NonEmptyStatement .)
    DOLLAR          reduce using rule 274 (Statement -> NonEmptyStatement .)
    INUMBER         reduce using rule 274 (Statement -> NonEmptyStatement .)
    DNUMBER         reduce using rule 274 (Statement -> NonEmptyStatement .)
    LIT_CHAR        reduce using rule 274 (Statement -> NonEmptyStatement .)
    LIT_STR         reduce using rule 274 (Statement -> NonEmptyStatement .)
    LBRACKET        reduce using rule 274 (Statement -> NonEmptyStatement .)
    FUNCTION        reduce using rule 274 (Statement -> NonEmptyStatement .)
    NEW             reduce using rule 274 (Statement -> NonEmptyStatement .)
    BOOL            reduce using rule 274 (Statement -> NonEmptyStatement .)
    SHORT           reduce using rule 274 (Statement -> NonEmptyStatement .)
    USHORT          reduce using rule 274 (Statement -> NonEmptyStatement .)
    INT             reduce using rule 274 (Statement -> NonEmptyStatement .)
    UINT            reduce using rule 274 (Statement -> NonEmptyStatement .)
    LONG            reduce using rule 274 (Statement -> NonEmptyStatement .)
    ULONG           reduce using rule 274 (Statement -> NonEmptyStatement .)
    CHAR            reduce using rule 274 (Statement -> NonEmptyStatement .)
    FLOAT           reduce using rule 274 (Statement -> NonEmptyStatement .)
    VOID            reduce using rule 274 (Statement -> NonEmptyStatement .)
    TYPEOF          reduce using rule 274 (Statement -> NonEmptyStatement .)
    TYPEID          reduce using rule 274 (Statement -> NonEmptyStatement .)
    BODY            reduce using rule 274 (Statement -> NonEmptyStatement .)
    RBRACE          reduce using rule 274 (Statement -> NonEmptyStatement .)
    ELSE            reduce using rule 274 (Statement -> NonEmptyStatement .)

  ! SEMICOLON       [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! CASE            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! DEFAULT         [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! LBRACE          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! IDENTIFIER      [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! IF              [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! WHILE           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! DO              [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! FOR             [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! SWITCH          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! FINAL           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! CONTINUE        [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! BREAK           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! RETURN          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! GOTO            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! WITH            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! MIXIN           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! IMPORT          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! STATIC          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! LPAREN          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! ALIAS           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! ENUM            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! EXTERN          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! AUTO            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! CONST           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! IMMUTABLE       [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! FOREACH         [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! FOREACH_REVERSE [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! CLASS           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! UNION           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! AMPERSAND       [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! PLUS_PLUS       [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! MINUS_MINUS     [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! TIMES           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! MINUS           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! PLUS            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! EXCLAMATION     [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! TILDE           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! CAST            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! DOT             [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! THIS            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! NULL            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! TRUE            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! FALSE           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! DOLLAR          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! INUMBER         [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! DNUMBER         [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! LIT_CHAR        [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! LIT_STR         [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! LBRACKET        [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! FUNCTION        [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! NEW             [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! BOOL            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! SHORT           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! USHORT          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! INT             [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! UINT            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! LONG            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! ULONG           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! CHAR            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! FLOAT           [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! VOID            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! TYPEOF          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! TYPEID          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! BODY            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! RBRACE          [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]
  ! ELSE            [ reduce using rule 279 (NoScopeStatement -> NonEmptyStatement .) ]


state 644

    (380) BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .

    SEMICOLON       reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    CASE            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    DEFAULT         reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    LBRACE          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    IDENTIFIER      reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    IF              reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    WHILE           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    DO              reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    FOR             reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    SWITCH          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    FINAL           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    CONTINUE        reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    BREAK           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    RETURN          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    GOTO            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    WITH            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    MIXIN           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    IMPORT          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    STATIC          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    LPAREN          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    ALIAS           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    ENUM            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    EXTERN          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    AUTO            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    CONST           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    IMMUTABLE       reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    FOREACH         reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    FOREACH_REVERSE reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    CLASS           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    UNION           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    AMPERSAND       reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    PLUS_PLUS       reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    MINUS_MINUS     reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    TIMES           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    MINUS           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    PLUS            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    EXCLAMATION     reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    TILDE           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    CAST            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    DOT             reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    THIS            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    NULL            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    TRUE            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    FALSE           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    DOLLAR          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    INUMBER         reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    DNUMBER         reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    LIT_CHAR        reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    LIT_STR         reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    LBRACKET        reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    FUNCTION        reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    NEW             reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    BOOL            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    SHORT           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    USHORT          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    INT             reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    UINT            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    LONG            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    ULONG           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    CHAR            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    FLOAT           reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    VOID            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    TYPEOF          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    TYPEID          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    BODY            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    RBRACE          reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)
    ELSE            reduce using rule 380 (BreakStatement -> BREAK IDENTIFIER_opt SEMICOLON .)


state 645

    (330) DoStatement -> DO ScopeStatement WHILE . LPAREN Expression RPAREN

    LPAREN          shift and go to state 718


state 646

    (355) ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .

    IDENTIFIER      reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    ALIAS           reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    DOT             reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    BOOL            reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    SHORT           reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    USHORT          reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    INT             reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    UINT            reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    LONG            reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    ULONG           reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    CHAR            reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    FLOAT           reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    VOID            reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)
    TYPEOF          reduce using rule 355 (ForeachTypeAttributes -> ForeachTypeAttribute ForeachTypeAttributes_opt .)


state 647

    (358) RangeForeach -> LPAREN ForeachType SEMICOLON . LwrExpression RANGE UprExpression RPAREN
    (359) LwrExpression -> . Expression
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    LwrExpression                  shift and go to state 719
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 720
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 648

    (349) ForeachType -> ForeachTypeAttributes_opt BasicType . Declarator
    (57) Declarator -> . VarDeclarator
    (58) Declarator -> . AltDeclarator
    (59) VarDeclarator -> . BasicType2_opt IDENTIFIER
    (60) AltDeclarator -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

    VarDeclarator                  shift and go to state 519
    BasicType2X                    shift and go to state 81
    AltDeclarator                  shift and go to state 521
    empty                          shift and go to state 86
    Declarator                     shift and go to state 722
    BasicType2_opt                 shift and go to state 721
    BasicType2                     shift and go to state 90

state 649

    (350) ForeachType -> ForeachTypeAttributes_opt IDENTIFIER .
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList

  ! shift/reduce conflict for LBRACKET resolved as shift
    COMMA           reduce using rule 350 (ForeachType -> ForeachTypeAttributes_opt IDENTIFIER .)
    SEMICOLON       reduce using rule 350 (ForeachType -> ForeachTypeAttributes_opt IDENTIFIER .)
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    FUNCTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 91

  ! LBRACKET        [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 650

    (351) ForeachType -> ForeachTypeAttributes_opt ALIAS . IDENTIFIER

    IDENTIFIER      shift and go to state 723


state 651

    (318) IfStatement -> IF LPAREN IfCondition . RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> IF LPAREN IfCondition . RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4

    RPAREN          shift and go to state 724


state 652

    (326) IfCondition -> BasicType . Declarator ASSIGN Expression
    (232) PostfixExpression -> BasicType . LPAREN ArgumentList_opt RPAREN
    (57) Declarator -> . VarDeclarator
    (58) Declarator -> . AltDeclarator
    (59) VarDeclarator -> . BasicType2_opt IDENTIFIER
    (60) AltDeclarator -> . BasicType2_opt IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> . BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes
    (94) BasicType2_opt -> . BasicType2
    (95) BasicType2_opt -> . empty
    (93) BasicType2 -> . BasicType2X BasicType2_opt
    (477) empty -> .
    (96) BasicType2X -> . TIMES
    (97) BasicType2X -> . LBRACKET RBRACKET
    (98) BasicType2X -> . LBRACKET AssignExpression RBRACKET
    (99) BasicType2X -> . LBRACKET AssignExpression RANGE AssignExpression RBRACKET
    (100) BasicType2X -> . LBRACKET Type RBRACKET
    (101) BasicType2X -> . FUNCTION Parameters

    IDENTIFIER      reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    TIMES           shift and go to state 88
    LBRACKET        shift and go to state 80
    FUNCTION        shift and go to state 87

  ! LPAREN          [ shift and go to state 420 ]

    BasicType2_opt                 shift and go to state 721
    BasicType2X                    shift and go to state 81
    AltDeclarator                  shift and go to state 521
    VarDeclarator                  shift and go to state 519
    empty                          shift and go to state 86
    Declarator                     shift and go to state 725
    BasicType2                     shift and go to state 90

state 653

    (324) IfCondition -> Expression .

    RPAREN          reduce using rule 324 (IfCondition -> Expression .)


state 654

    (325) IfCondition -> AUTO . IDENTIFIER ASSIGN Expression

    IDENTIFIER      shift and go to state 726


state 655

    (59) VarDeclarator -> BasicType2_opt IDENTIFIER .
    (60) AltDeclarator -> BasicType2_opt IDENTIFIER . AltDeclaratorSuffixes
    (67) AltDeclaratorSuffixes -> . AltDeclaratorSuffix
    (68) AltDeclaratorSuffixes -> . AltDeclaratorSuffix AltDeclaratorSuffixes
    (71) AltDeclaratorSuffix -> . LBRACKET RBRACKET
    (72) AltDeclaratorSuffix -> . LBRACKET AssignExpression RBRACKET
    (73) AltDeclaratorSuffix -> . LBRACKET Type RBRACKET

    SEMICOLON       reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    COMMA           reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    ELLIPSIS        reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    ASSIGN          reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    RPAREN          reduce using rule 59 (VarDeclarator -> BasicType2_opt IDENTIFIER .)
    LBRACKET        shift and go to state 441

    AltDeclaratorSuffix            shift and go to state 442
    AltDeclaratorSuffixes          shift and go to state 443

state 656

    (453) Parameter -> InOut_opt BasicType Declarator ASSIGN . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 727

state 657

    (452) Parameter -> InOut_opt BasicType Declarator ELLIPSIS .

    COMMA           reduce using rule 452 (Parameter -> InOut_opt BasicType Declarator ELLIPSIS .)
    RPAREN          reduce using rule 452 (Parameter -> InOut_opt BasicType Declarator ELLIPSIS .)


state 658

    (119) ArrayInitializer -> LBRACKET ArrayMemberInitializations_opt RBRACKET .

    COMMA           reduce using rule 119 (ArrayInitializer -> LBRACKET ArrayMemberInitializations_opt RBRACKET .)
    SEMICOLON       reduce using rule 119 (ArrayInitializer -> LBRACKET ArrayMemberInitializations_opt RBRACKET .)
    RBRACKET        reduce using rule 119 (ArrayInitializer -> LBRACKET ArrayMemberInitializations_opt RBRACKET .)


state 659

    (121) ArrayMemberInitializations -> ArrayMemberInitialization COMMA .
    (122) ArrayMemberInitializations -> ArrayMemberInitialization COMMA . ArrayMemberInitializations
    (120) ArrayMemberInitializations -> . ArrayMemberInitialization
    (121) ArrayMemberInitializations -> . ArrayMemberInitialization COMMA
    (122) ArrayMemberInitializations -> . ArrayMemberInitialization COMMA ArrayMemberInitializations
    (125) ArrayMemberInitialization -> . NonVoidInitializer
    (126) ArrayMemberInitialization -> . AssignExpression COLON NonVoidInitializer
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RBRACKET        reduce using rule 121 (ArrayMemberInitializations -> ArrayMemberInitialization COMMA .)
    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    ArrayMemberInitialization      shift and go to state 527
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    ArrayMemberInitializations     shift and go to state 728
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    NonVoidInitializer             shift and go to state 525
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    ArrayInitializer               shift and go to state 361
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 729

state 660

    (126) ArrayMemberInitialization -> AssignExpression COLON . NonVoidInitializer
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    NonVoidInitializer             shift and go to state 730
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    ArrayInitializer               shift and go to state 361
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 365

state 661

    (221) ArgumentList -> AssignExpression COMMA ArgumentList .

    RPAREN          reduce using rule 221 (ArgumentList -> AssignExpression COMMA ArgumentList .)
    RBRACKET        reduce using rule 221 (ArgumentList -> AssignExpression COMMA ArgumentList .)
    COLON           reduce using rule 221 (ArgumentList -> AssignExpression COMMA ArgumentList .)


state 662

    (167) ConditionalExpression -> OrOrExpression QUESTION Expression COLON . ConditionalExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 731
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185

state 663

    (270) ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .

    POWER           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    DOT             reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    PLUS_PLUS       reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    MINUS_MINUS     reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    LPAREN          reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    TIMES           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    DIV             reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    MODULO          reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    PLUS            reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    MINUS           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    LEFT_SHIFT      reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    RIGHT_SHIFT     reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    IS_EQ           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    NOT_EQ          reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    LESS            reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    GREATER_EQ      reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    GREATER         reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    LESS_EQ         reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    AMPERSAND       reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    CARET           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    PIPE            reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    QUESTION        reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    DOUBLE_PIPE     reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    ASSIGN          reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_PLUS         reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_MINUS        reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_TIMES        reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_DIV          reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_MODULO       reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_AND_BIT      reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_OR_BIT       reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_XOR_BIT      reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_LEFT         reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    EQ_RIGHT        reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    RBRACKET        reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    RANGE           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    COMMA           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    RPAREN          reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    SEMICOLON       reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    RBRACE          reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)
    COLON           reduce using rule 270 (ImportExpression -> IMPORT LPAREN AssignExpression RPAREN .)


state 664

    (258) FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .

    POWER           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    DOT             reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    PLUS_PLUS       reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    MINUS_MINUS     reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    LPAREN          reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    TIMES           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    DIV             reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    MODULO          reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    PLUS            reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    MINUS           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    LEFT_SHIFT      reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    RIGHT_SHIFT     reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    IS_EQ           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    NOT_EQ          reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    LESS            reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    GREATER_EQ      reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    GREATER         reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    LESS_EQ         reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    AMPERSAND       reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    CARET           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    PIPE            reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    DOUBLE_AMPERSAND reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    QUESTION        reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    DOUBLE_PIPE     reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    ASSIGN          reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_PLUS         reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_MINUS        reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_TIMES        reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_DIV          reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_MODULO       reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_AND_BIT      reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_OR_BIT       reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_XOR_BIT      reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_LEFT         reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    EQ_RIGHT        reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    RBRACKET        reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    RANGE           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    COMMA           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    RPAREN          reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    SEMICOLON       reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    RBRACE          reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)
    COLON           reduce using rule 258 (FunctionLiteral -> FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody .)


state 665

    (271) TypeidExpression -> TYPEID LPAREN Type RPAREN .

    POWER           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    DOT             reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    PLUS_PLUS       reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    MINUS_MINUS     reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    LPAREN          reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    TIMES           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    DIV             reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    MODULO          reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    PLUS            reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    MINUS           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    LEFT_SHIFT      reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    RIGHT_SHIFT     reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    IS_EQ           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    NOT_EQ          reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    LESS            reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    GREATER_EQ      reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    GREATER         reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    LESS_EQ         reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    AMPERSAND       reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    CARET           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    PIPE            reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    QUESTION        reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    DOUBLE_PIPE     reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_PLUS         reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_MINUS        reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_TIMES        reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_DIV          reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_MODULO       reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_AND_BIT      reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_OR_BIT       reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_XOR_BIT      reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_LEFT         reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    EQ_RIGHT        reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    COMMA           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    RPAREN          reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    RBRACKET        reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    RANGE           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    RBRACE          reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)
    COLON           reduce using rule 271 (TypeidExpression -> TYPEID LPAREN Type RPAREN .)


state 666

    (272) TypeidExpression -> TYPEID LPAREN Expression RPAREN .

    POWER           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    DOT             reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    PLUS_PLUS       reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    MINUS_MINUS     reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    TIMES           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    DIV             reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    MODULO          reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    PLUS            reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    MINUS           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    LEFT_SHIFT      reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    RIGHT_SHIFT     reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    IS_EQ           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    NOT_EQ          reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    LESS            reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    GREATER_EQ      reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    GREATER         reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    LESS_EQ         reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    AMPERSAND       reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    CARET           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    PIPE            reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    QUESTION        reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    DOUBLE_PIPE     reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_PLUS         reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_MINUS        reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_TIMES        reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_DIV          reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_MODULO       reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_AND_BIT      reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_OR_BIT       reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_XOR_BIT      reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_LEFT         reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    EQ_RIGHT        reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    COMMA           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    RBRACKET        reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    RANGE           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)
    COLON           reduce using rule 272 (TypeidExpression -> TYPEID LPAREN Expression RPAREN .)


state 667

    (231) PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .

    POWER           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    DOT             reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    PLUS_PLUS       reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    MINUS_MINUS     reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    LPAREN          reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    TIMES           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    DIV             reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    MODULO          reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    PLUS            reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    MINUS           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    LEFT_SHIFT      reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    RIGHT_SHIFT     reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    IS_EQ           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    NOT_EQ          reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    LESS            reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    GREATER_EQ      reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    GREATER         reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    LESS_EQ         reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    AMPERSAND       reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    CARET           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    PIPE            reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    QUESTION        reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    DOUBLE_PIPE     reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    ASSIGN          reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_PLUS         reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_MINUS        reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_TIMES        reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_DIV          reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_MODULO       reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_AND_BIT      reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_OR_BIT       reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_XOR_BIT      reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_LEFT         reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    EQ_RIGHT        reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    RBRACKET        reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    RANGE           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    COMMA           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    RPAREN          reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    SEMICOLON       reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    RBRACE          reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)
    COLON           reduce using rule 231 (PostfixExpression -> PostfixExpression LPAREN ArgumentList RPAREN .)


state 668

    (209) NewExpression -> NEW AllocatorArguments_opt . Type
    (211) NewExpressionWithArgs -> NEW AllocatorArguments_opt . Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> NEW AllocatorArguments_opt . Type LPAREN ArgumentList_opt RPAREN
    (412) NewAnonClassExpression -> NEW AllocatorArguments_opt . CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (75) Type -> . BasicType BasicType2_opt
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    CLASS           shift and go to state 571
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    BasicType                      shift and go to state 124
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    Type                           shift and go to state 732

state 669

    (211) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET . AssignExpression RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    Parameters                     shift and go to state 186
    CastExpression                 shift and go to state 218
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 733

state 670

    (212) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN . ArgumentList_opt RPAREN
    (217) ArgumentList_opt -> . ArgumentList
    (218) ArgumentList_opt -> . empty
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (477) empty -> .
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RPAREN          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    CastExpression                 shift and go to state 218
    ArgumentList                   shift and go to state 366
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 368
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    PrimaryExpression              shift and go to state 204
    MulExpression                  shift and go to state 184
    ArgumentList_opt               shift and go to state 734
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 671

    (414) ClassArguments_opt -> ClassArguments .

    DOT             reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    BOOL            reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    SHORT           reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    USHORT          reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    INT             reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    UINT            reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    LONG            reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    ULONG           reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    CHAR            reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    FLOAT           reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    VOID            reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    IDENTIFIER      reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    TYPEOF          reduce using rule 414 (ClassArguments_opt -> ClassArguments .)
    LBRACE          reduce using rule 414 (ClassArguments_opt -> ClassArguments .)


state 672

    (412) NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt . SuperClass_opt Interfaces_opt AggregateBody
    (416) SuperClass_opt -> . SuperClass
    (417) SuperClass_opt -> . empty
    (403) SuperClass -> . BasicType
    (477) empty -> .
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    LBRACE          reduce using rule 477 (empty -> .)
    DOT             shift and go to state 34

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! IDENTIFIER      [ shift and go to state 39 ]
  ! TYPEOF          [ shift and go to state 47 ]

    BasicType                      shift and go to state 736
    BasicTypeX                     shift and go to state 38
    SuperClass                     shift and go to state 735
    IdentifierList                 shift and go to state 33
    SuperClass_opt                 shift and go to state 738
    empty                          shift and go to state 737
    Typeof                         shift and go to state 42

state 673

    (413) ClassArguments -> LPAREN . ArgumentList_opt RPAREN
    (217) ArgumentList_opt -> . ArgumentList
    (218) ArgumentList_opt -> . empty
    (219) ArgumentList -> . AssignExpression
    (220) ArgumentList -> . AssignExpression COMMA
    (221) ArgumentList -> . AssignExpression COMMA ArgumentList
    (477) empty -> .
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RPAREN          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ArgumentList                   shift and go to state 366
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 368
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ArgumentList_opt               shift and go to state 739
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 369

state 674

    (415) ClassArguments_opt -> empty .

    DOT             reduce using rule 415 (ClassArguments_opt -> empty .)
    BOOL            reduce using rule 415 (ClassArguments_opt -> empty .)
    SHORT           reduce using rule 415 (ClassArguments_opt -> empty .)
    USHORT          reduce using rule 415 (ClassArguments_opt -> empty .)
    INT             reduce using rule 415 (ClassArguments_opt -> empty .)
    UINT            reduce using rule 415 (ClassArguments_opt -> empty .)
    LONG            reduce using rule 415 (ClassArguments_opt -> empty .)
    ULONG           reduce using rule 415 (ClassArguments_opt -> empty .)
    CHAR            reduce using rule 415 (ClassArguments_opt -> empty .)
    FLOAT           reduce using rule 415 (ClassArguments_opt -> empty .)
    VOID            reduce using rule 415 (ClassArguments_opt -> empty .)
    IDENTIFIER      reduce using rule 415 (ClassArguments_opt -> empty .)
    TYPEOF          reduce using rule 415 (ClassArguments_opt -> empty .)
    LBRACE          reduce using rule 415 (ClassArguments_opt -> empty .)


state 675

    (214) AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .

    CLASS           reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    DOT             reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    BOOL            reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    SHORT           reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    USHORT          reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    INT             reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    UINT            reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    LONG            reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    ULONG           reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    CHAR            reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    FLOAT           reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    VOID            reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    IDENTIFIER      reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)
    TYPEOF          reduce using rule 214 (AllocatorArguments -> LPAREN ArgumentList_opt RPAREN .)


state 676

    (232) PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .

    POWER           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    DOT             reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    PLUS_PLUS       reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    MINUS_MINUS     reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    LPAREN          reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    TIMES           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    DIV             reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    MODULO          reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    PLUS            reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    MINUS           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    LEFT_SHIFT      reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    RIGHT_SHIFT     reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    IS_EQ           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    NOT_EQ          reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    LESS            reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    GREATER_EQ      reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    GREATER         reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    LESS_EQ         reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    AMPERSAND       reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    CARET           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    PIPE            reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    QUESTION        reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    DOUBLE_PIPE     reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    ASSIGN          reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_PLUS         reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_MINUS        reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_TIMES        reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_DIV          reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_MODULO       reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_AND_BIT      reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_OR_BIT       reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_XOR_BIT      reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_LEFT         reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    EQ_RIGHT        reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    RBRACKET        reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    RANGE           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    COMMA           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    RPAREN          reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    SEMICOLON       reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    RBRACE          reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)
    COLON           reduce using rule 232 (PostfixExpression -> BasicType LPAREN ArgumentList_opt RPAREN .)


state 677

    (223) CastExpression -> CAST LPAREN RPAREN UnaryExpression .

    TIMES           reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    DIV             reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    MODULO          reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    PLUS            reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    MINUS           reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    LEFT_SHIFT      reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    IS_EQ           reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    NOT_EQ          reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    LESS            reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    GREATER_EQ      reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    GREATER         reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    LESS_EQ         reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    AMPERSAND       reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    CARET           reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    PIPE            reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    QUESTION        reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    ASSIGN          reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_PLUS         reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_MINUS        reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_TIMES        reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_DIV          reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_MODULO       reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_AND_BIT      reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_OR_BIT       reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_LEFT         reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    EQ_RIGHT        reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    RBRACKET        reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    RANGE           reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    COMMA           reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    RPAREN          reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    SEMICOLON       reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    RBRACE          reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)
    COLON           reduce using rule 223 (CastExpression -> CAST LPAREN RPAREN UnaryExpression .)


state 678

    (222) CastExpression -> CAST LPAREN Type RPAREN . UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    TypeidExpression               shift and go to state 220
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BodyStatement                  shift and go to state 213
    UnaryExpression                shift and go to state 740
    NewExpressionWithArgs          shift and go to state 216
    ParameterMemberAttributes      shift and go to state 187
    PowExpression                  shift and go to state 190
    NewAnonClassExpression         shift and go to state 185

state 679

    (256) ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .

    POWER           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    DOT             reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    PLUS_PLUS       reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    MINUS_MINUS     reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    LPAREN          reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    TIMES           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    DIV             reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    MODULO          reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    PLUS            reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    MINUS           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    LEFT_SHIFT      reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    RIGHT_SHIFT     reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    IS_EQ           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    NOT_EQ          reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    LESS            reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    GREATER_EQ      reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    GREATER         reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    LESS_EQ         reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    AMPERSAND       reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    CARET           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    PIPE            reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    QUESTION        reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    DOUBLE_PIPE     reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    ASSIGN          reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_PLUS         reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_MINUS        reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_TIMES        reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_DIV          reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_MODULO       reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_AND_BIT      reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_OR_BIT       reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_XOR_BIT      reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_LEFT         reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    EQ_RIGHT        reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    COMMA           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    RBRACE          reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    RBRACKET        reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    RANGE           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    RPAREN          reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    SEMICOLON       reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)
    COLON           reduce using rule 256 (ArrayLiteral -> IDENTIFIER LBRACKET INUMBER RBRACKET .)


state 680

    (104) IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET . DOT IdentifierList
    (257) ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .

    DOT             shift and go to state 598
    POWER           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    PLUS_PLUS       reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    MINUS_MINUS     reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    LPAREN          reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    TIMES           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    DIV             reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    MODULO          reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    PLUS            reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    MINUS           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    LEFT_SHIFT      reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    IS_EQ           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    NOT_EQ          reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    LESS            reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    GREATER_EQ      reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    GREATER         reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    LESS_EQ         reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    AMPERSAND       reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    CARET           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    PIPE            reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    QUESTION        reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    DOUBLE_PIPE     reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    ASSIGN          reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_PLUS         reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_MINUS        reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_TIMES        reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_DIV          reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_MODULO       reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_AND_BIT      reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_OR_BIT       reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_XOR_BIT      reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_LEFT         reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    EQ_RIGHT        reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    COMMA           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    RBRACE          reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    RBRACKET        reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    RANGE           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    RPAREN          reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    SEMICOLON       reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)
    COLON           reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .)

  ! DOT             [ reduce using rule 257 (ArrayLiteral -> IDENTIFIER LBRACKET AssignExpression RBRACKET .) ]


state 681

    (251) PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .

    POWER           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    DOT             reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    PLUS_PLUS       reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    MINUS_MINUS     reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    LPAREN          reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    TIMES           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    DIV             reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    MODULO          reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    PLUS            reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    MINUS           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    LEFT_SHIFT      reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    RIGHT_SHIFT     reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    IS_EQ           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    NOT_EQ          reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    LESS            reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    GREATER_EQ      reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    GREATER         reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    LESS_EQ         reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    AMPERSAND       reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    CARET           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    PIPE            reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    QUESTION        reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    DOUBLE_PIPE     reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    ASSIGN          reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_PLUS         reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_MINUS        reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_TIMES        reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_DIV          reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_MODULO       reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_AND_BIT      reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_OR_BIT       reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_XOR_BIT      reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_LEFT         reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    EQ_RIGHT        reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    RBRACKET        reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    RANGE           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    COMMA           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    RPAREN          reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    SEMICOLON       reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    RBRACE          reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)
    COLON           reduce using rule 251 (PrimaryExpression -> BasicTypeX LPAREN ArgumentList_opt RPAREN .)


state 682

    (269) MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .

    POWER           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DOT             reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    PLUS_PLUS       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    MINUS_MINUS     reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LPAREN          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    TIMES           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DIV             reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    MODULO          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    PLUS            reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    MINUS           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LEFT_SHIFT      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    RIGHT_SHIFT     reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    IS_EQ           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    NOT_EQ          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LESS            reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    GREATER_EQ      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    GREATER         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LESS_EQ         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    AMPERSAND       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    CARET           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    PIPE            reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    QUESTION        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DOUBLE_PIPE     reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    ASSIGN          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_PLUS         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_MINUS        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_TIMES        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_DIV          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_MODULO       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_AND_BIT      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_OR_BIT       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_XOR_BIT      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_LEFT         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_RIGHT        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    RBRACKET        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    RANGE           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    COMMA           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    RPAREN          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    SEMICOLON       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    RBRACE          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    COLON           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)


state 683

    (205) UnaryExpression -> LPAREN Type RPAREN DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 741


state 684

    (99) BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .

    TIMES           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    LBRACKET        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    FUNCTION        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    IDENTIFIER      reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    LBRACE          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    SEMICOLON       reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    BODY            reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    COMMA           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    LPAREN          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    RPAREN          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    POWER           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    DOT             reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    PLUS_PLUS       reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    MINUS_MINUS     reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    DIV             reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    MODULO          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    PLUS            reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    MINUS           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    LEFT_SHIFT      reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    IS_EQ           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    NOT_EQ          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    LESS            reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    GREATER_EQ      reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    GREATER         reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    LESS_EQ         reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    AMPERSAND       reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    CARET           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    PIPE            reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    QUESTION        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    DOUBLE_PIPE     reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    ASSIGN          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_PLUS         reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_MINUS        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_TIMES        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_DIV          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_MODULO       reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_AND_BIT      reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_OR_BIT       reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_XOR_BIT      reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_LEFT         reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    EQ_RIGHT        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    RBRACKET        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    RANGE           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    RBRACE          reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    COLON           reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)
    ELLIPSIS        reduce using rule 99 (BasicType2X -> LBRACKET AssignExpression RANGE AssignExpression RBRACKET .)


state 685

    (74) AltFuncDeclaratorSuffix -> Parameters . MemberFunctionAttributes_opt
    (465) MemberFunctionAttributes_opt -> . MemberFunctionAttributes
    (466) MemberFunctionAttributes_opt -> . empty
    (463) MemberFunctionAttributes -> . MemberFunctionAttribute
    (464) MemberFunctionAttributes -> . MemberFunctionAttribute MemberFunctionAttributes
    (477) empty -> .
    (467) MemberFunctionAttribute -> . CONST
    (468) MemberFunctionAttribute -> . IMMUTABLE
    (469) MemberFunctionAttribute -> . RETURN

    ASSIGN          reduce using rule 477 (empty -> .)
    COMMA           reduce using rule 477 (empty -> .)
    SEMICOLON       reduce using rule 477 (empty -> .)
    RPAREN          reduce using rule 477 (empty -> .)
    ELLIPSIS        reduce using rule 477 (empty -> .)
    CONST           shift and go to state 150
    IMMUTABLE       shift and go to state 154
    RETURN          shift and go to state 149

    MemberFunctionAttributes       shift and go to state 153
    MemberFunctionAttributes_opt   shift and go to state 742
    empty                          shift and go to state 155
    MemberFunctionAttribute        shift and go to state 152

state 686

    (63) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes .

    ASSIGN          reduce using rule 63 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes .)
    COMMA           reduce using rule 63 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes .)
    SEMICOLON       reduce using rule 63 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes .)
    ELLIPSIS        reduce using rule 63 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes .)
    RPAREN          reduce using rule 63 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes .)


state 687

    (62) AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix .

    ASSIGN          reduce using rule 62 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix .)
    COMMA           reduce using rule 62 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix .)
    SEMICOLON       reduce using rule 62 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix .)
    ELLIPSIS        reduce using rule 62 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix .)
    RPAREN          reduce using rule 62 (AltDeclarator -> BasicType2_opt LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix .)


state 688

    (65) AltDeclaratorX -> BasicType2_opt IDENTIFIER AltFuncDeclaratorSuffix .

    RPAREN          reduce using rule 65 (AltDeclaratorX -> BasicType2_opt IDENTIFIER AltFuncDeclaratorSuffix .)


state 689

    (73) AltDeclaratorSuffix -> LBRACKET Type RBRACKET .

    LBRACKET        reduce using rule 73 (AltDeclaratorSuffix -> LBRACKET Type RBRACKET .)
    RPAREN          reduce using rule 73 (AltDeclaratorSuffix -> LBRACKET Type RBRACKET .)
    ASSIGN          reduce using rule 73 (AltDeclaratorSuffix -> LBRACKET Type RBRACKET .)
    COMMA           reduce using rule 73 (AltDeclaratorSuffix -> LBRACKET Type RBRACKET .)
    SEMICOLON       reduce using rule 73 (AltDeclaratorSuffix -> LBRACKET Type RBRACKET .)
    ELLIPSIS        reduce using rule 73 (AltDeclaratorSuffix -> LBRACKET Type RBRACKET .)


state 690

    (72) AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET .

    LBRACKET        reduce using rule 72 (AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET .)
    RPAREN          reduce using rule 72 (AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET .)
    ASSIGN          reduce using rule 72 (AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET .)
    COMMA           reduce using rule 72 (AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET .)
    SEMICOLON       reduce using rule 72 (AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET .)
    ELLIPSIS        reduce using rule 72 (AltDeclaratorSuffix -> LBRACKET AssignExpression RBRACKET .)


state 691

    (48) DeclaratorIdentifierList -> DeclaratorIdentifier COMMA DeclaratorIdentifierList .

    SEMICOLON       reduce using rule 48 (DeclaratorIdentifierList -> DeclaratorIdentifier COMMA DeclaratorIdentifierList .)


state 692

    (55) AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .
    (56) AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes . ASSIGN Initializer

    COMMA           reduce using rule 55 (AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .)
    SEMICOLON       reduce using rule 55 (AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes .)
    ASSIGN          shift and go to state 743


state 693

    (52) VarDeclaratorIdentifier -> IDENTIFIER ASSIGN Initializer .

    COMMA           reduce using rule 52 (VarDeclaratorIdentifier -> IDENTIFIER ASSIGN Initializer .)
    SEMICOLON       reduce using rule 52 (VarDeclaratorIdentifier -> IDENTIFIER ASSIGN Initializer .)


state 694

    (53) AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt .
    (54) AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt . ASSIGN Initializer

    COMMA           reduce using rule 53 (AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt .)
    SEMICOLON       reduce using rule 53 (AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt .)
    ASSIGN          shift and go to state 744


state 695

    (70) AltDeclaratorSuffixes_opt -> empty .

    ASSIGN          reduce using rule 70 (AltDeclaratorSuffixes_opt -> empty .)
    COMMA           reduce using rule 70 (AltDeclaratorSuffixes_opt -> empty .)
    SEMICOLON       reduce using rule 70 (AltDeclaratorSuffixes_opt -> empty .)


state 696

    (69) AltDeclaratorSuffixes_opt -> AltDeclaratorSuffixes .

    ASSIGN          reduce using rule 69 (AltDeclaratorSuffixes_opt -> AltDeclaratorSuffixes .)
    COMMA           reduce using rule 69 (AltDeclaratorSuffixes_opt -> AltDeclaratorSuffixes .)
    SEMICOLON       reduce using rule 69 (AltDeclaratorSuffixes_opt -> AltDeclaratorSuffixes .)


state 697

    (104) IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .

    POWER           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    DOT             reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    PLUS_PLUS       reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    MINUS_MINUS     reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    LPAREN          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    TIMES           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    DIV             reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    MODULO          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    PLUS            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    MINUS           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    LEFT_SHIFT      reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    RIGHT_SHIFT     reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    IS_EQ           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    NOT_EQ          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    LESS            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    GREATER_EQ      reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    GREATER         reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    LESS_EQ         reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    AMPERSAND       reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    CARET           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    PIPE            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    DOUBLE_AMPERSAND reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    QUESTION        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    DOUBLE_PIPE     reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    ASSIGN          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_PLUS         reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_MINUS        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_TIMES        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_DIV          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_MODULO       reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_AND_BIT      reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_OR_BIT       reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_XOR_BIT      reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_LEFT         reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    EQ_RIGHT        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    RBRACKET        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    RANGE           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    COMMA           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    RPAREN          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    SEMICOLON       reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    RBRACE          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    COLON           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    LBRACKET        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    FUNCTION        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    LBRACE          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    BODY            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    IDENTIFIER      reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    ELLIPSIS        reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    BOOL            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    SHORT           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    USHORT          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    INT             reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    UINT            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    LONG            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    ULONG           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    CHAR            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    FLOAT           reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    VOID            reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)
    TYPEOF          reduce using rule 104 (IdentifierList -> IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList .)


state 698

    (33) MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    NEW             reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    DELETE          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    ALIAS           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    MIXIN           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    ENUM            reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    IMPORT          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    STATIC          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CLASS           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    UNION           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    EXTERN          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FINAL           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    AUTO            reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CONST           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    IMMUTABLE       reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    DOT             reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    BOOL            reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    SHORT           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    USHORT          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    INT             reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    UINT            reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    LONG            reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    ULONG           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CHAR            reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    VOID            reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    TYPEOF          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 33 (MixinDeclaration -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)


state 699

    (474) Symbol -> DOT SymbolTail .

    RPAREN          reduce using rule 474 (Symbol -> DOT SymbolTail .)


state 700

    (235) PrimaryExpression -> DOT IDENTIFIER .
    (475) SymbolTail -> IDENTIFIER .
    (476) SymbolTail -> IDENTIFIER . DOT SymbolTail
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList

  ! reduce/reduce conflict for RPAREN resolved using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
    POWER           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    PLUS_PLUS       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    MINUS_MINUS     reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    TIMES           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    DIV             reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    MODULO          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    PLUS            reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    MINUS           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    IS_EQ           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    NOT_EQ          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    LESS            reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    GREATER_EQ      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    GREATER         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    LESS_EQ         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    AMPERSAND       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    CARET           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    PIPE            reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    QUESTION        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    ASSIGN          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_PLUS         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_MINUS        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_TIMES        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_DIV          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_MODULO       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_LEFT         reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    EQ_RIGHT        reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    COMMA           reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .)
    DOT             shift and go to state 703
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LBRACKET        shift and go to state 91

  ! DOT             [ reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 235 (PrimaryExpression -> DOT IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 475 (SymbolTail -> IDENTIFIER .) ]


state 701

    (387) WithStatement -> WITH LPAREN Symbol RPAREN . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 745
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 702

    (386) WithStatement -> WITH LPAREN Expression RPAREN . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 746
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 703

    (476) SymbolTail -> IDENTIFIER DOT . SymbolTail
    (103) IdentifierList -> IDENTIFIER DOT . IdentifierList
    (475) SymbolTail -> . IDENTIFIER
    (476) SymbolTail -> . IDENTIFIER DOT SymbolTail
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList

    IDENTIFIER      shift and go to state 748

    SymbolTail                     shift and go to state 747
    IdentifierList                 shift and go to state 250

state 704

    (385) GotoStatement -> GOTO CASE Expression SEMICOLON .

    SEMICOLON       reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    CASE            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    DEFAULT         reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    LBRACE          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    IDENTIFIER      reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    IF              reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    WHILE           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    DO              reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    FOR             reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    SWITCH          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    FINAL           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    CONTINUE        reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    BREAK           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    RETURN          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    GOTO            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    WITH            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    MIXIN           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    IMPORT          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    STATIC          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    LPAREN          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    ALIAS           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    ENUM            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    EXTERN          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    AUTO            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    CONST           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    IMMUTABLE       reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    FOREACH         reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    FOREACH_REVERSE reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    CLASS           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    UNION           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    AMPERSAND       reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    PLUS_PLUS       reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    MINUS_MINUS     reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    TIMES           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    MINUS           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    PLUS            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    EXCLAMATION     reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    TILDE           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    CAST            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    DOT             reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    THIS            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    NULL            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    TRUE            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    FALSE           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    DOLLAR          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    INUMBER         reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    DNUMBER         reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    LIT_CHAR        reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    LIT_STR         reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    LBRACKET        reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    FUNCTION        reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    NEW             reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    BOOL            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    SHORT           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    USHORT          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    INT             reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    UINT            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    LONG            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    ULONG           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    CHAR            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    FLOAT           reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    VOID            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    TYPEOF          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    TYPEID          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    BODY            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    RBRACE          reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)
    ELSE            reduce using rule 385 (GotoStatement -> GOTO CASE Expression SEMICOLON .)


state 705

    (348) ForeachTypeList -> ForeachType COMMA . ForeachTypeList
    (347) ForeachTypeList -> . ForeachType
    (348) ForeachTypeList -> . ForeachType COMMA ForeachTypeList
    (349) ForeachType -> . ForeachTypeAttributes_opt BasicType Declarator
    (350) ForeachType -> . ForeachTypeAttributes_opt IDENTIFIER
    (351) ForeachType -> . ForeachTypeAttributes_opt ALIAS IDENTIFIER
    (352) ForeachTypeAttributes_opt -> . ForeachTypeAttributes
    (353) ForeachTypeAttributes_opt -> . empty
    (354) ForeachTypeAttributes -> . ForeachTypeAttribute
    (355) ForeachTypeAttributes -> . ForeachTypeAttribute ForeachTypeAttributes_opt
    (477) empty -> .
    (356) ForeachTypeAttribute -> . ENUM

    IDENTIFIER      reduce using rule 477 (empty -> .)
    ALIAS           reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    ENUM            shift and go to state 512

    ForeachType                    shift and go to state 620
    ForeachTypeAttributes_opt      shift and go to state 515
    ForeachTypeAttribute           shift and go to state 511
    ForeachTypeAttributes          shift and go to state 516
    ForeachTypeList                shift and go to state 749
    empty                          shift and go to state 622

state 706

    (343) AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON . ForeachAggregate RPAREN
    (357) ForeachAggregate -> . Expression
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    FunctionLiteralBody            shift and go to state 219
    CmpExpression                  shift and go to state 230
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 750
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    ForeachAggregate               shift and go to state 751
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 707

    (374) FinalSwitchStatement -> FINAL SWITCH LPAREN Expression . RPAREN ScopeStatement

    RPAREN          shift and go to state 752


state 708

    (363) CaseStatement -> CASE ArgumentList COLON ScopeStatementList .

    WHILE           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    SEMICOLON       reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    CASE            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    DEFAULT         reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    LBRACE          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    IDENTIFIER      reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    IF              reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    DO              reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    FOR             reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    SWITCH          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    FINAL           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    CONTINUE        reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    BREAK           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    RETURN          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    GOTO            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    WITH            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    MIXIN           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    IMPORT          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    STATIC          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    LPAREN          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    ALIAS           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    ENUM            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    EXTERN          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    AUTO            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    CONST           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    IMMUTABLE       reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    FOREACH         reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    FOREACH_REVERSE reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    CLASS           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    UNION           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    AMPERSAND       reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    PLUS_PLUS       reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    MINUS_MINUS     reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    TIMES           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    MINUS           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    PLUS            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    EXCLAMATION     reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    TILDE           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    CAST            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    DOT             reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    THIS            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    NULL            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    TRUE            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    FALSE           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    DOLLAR          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    INUMBER         reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    DNUMBER         reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    LIT_CHAR        reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    LIT_STR         reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    LBRACKET        reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    FUNCTION        reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    NEW             reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    BOOL            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    SHORT           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    USHORT          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    INT             reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    UINT            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    LONG            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    ULONG           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    CHAR            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    FLOAT           reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    VOID            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    TYPEOF          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    TYPEID          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    BODY            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    RBRACE          reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)
    ELSE            reduce using rule 363 (CaseStatement -> CASE ArgumentList COLON ScopeStatementList .)


state 709

    (364) CaseRangeStatement -> CASE FirstExp COLON RANGE . LastExp COLON ScopeStatementList
    (366) LastExp -> . AssignExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    LastExp                        shift and go to state 753
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 754

state 710

    (338) Test_opt -> Test .

    SEMICOLON       reduce using rule 338 (Test_opt -> Test .)


state 711

    (339) Test_opt -> empty .

    SEMICOLON       reduce using rule 339 (Test_opt -> empty .)


state 712

    (337) Test -> Expression .

    SEMICOLON       reduce using rule 337 (Test -> Expression .)


state 713

    (331) ForStatement -> FOR LPAREN Initialize Test_opt . SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3

    SEMICOLON       shift and go to state 755


state 714

    (388) MixinStatement -> MIXIN LPAREN AssignExpression RPAREN . SEMICOLON
    (269) MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 756
    POWER           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DOT             reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    PLUS_PLUS       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    MINUS_MINUS     reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LPAREN          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    TIMES           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DIV             reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    MODULO          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    PLUS            reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    MINUS           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LEFT_SHIFT      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    RIGHT_SHIFT     reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    IS_EQ           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    NOT_EQ          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LESS            reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    GREATER_EQ      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    GREATER         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    LESS_EQ         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    AMPERSAND       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    CARET           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    PIPE            reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    QUESTION        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    DOUBLE_PIPE     reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    ASSIGN          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_PLUS         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_MINUS        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_TIMES        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_DIV          reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_MODULO       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_AND_BIT      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_OR_BIT       reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_XOR_BIT      reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_LEFT         reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    EQ_RIGHT        reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)
    COMMA           reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .)

  ! SEMICOLON       [ reduce using rule 269 (MixinExpression -> MIXIN LPAREN AssignExpression RPAREN .) ]


state 715

    (370) StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .

    SEMICOLON       reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    CASE            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    DEFAULT         reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    LBRACE          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    IDENTIFIER      reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    IF              reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    WHILE           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    DO              reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    FOR             reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    SWITCH          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    FINAL           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    CONTINUE        reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    BREAK           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    RETURN          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    GOTO            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    WITH            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    MIXIN           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    IMPORT          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    STATIC          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    LPAREN          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    ALIAS           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    ENUM            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    EXTERN          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    AUTO            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    CONST           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    IMMUTABLE       reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    FOREACH         reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    FOREACH_REVERSE reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    CLASS           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    UNION           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    AMPERSAND       reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    PLUS_PLUS       reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    MINUS_MINUS     reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    TIMES           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    MINUS           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    PLUS            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    EXCLAMATION     reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    TILDE           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    CAST            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    DOT             reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    THIS            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    NULL            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    TRUE            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    FALSE           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    DOLLAR          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    INUMBER         reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    DNUMBER         reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    LIT_CHAR        reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    LIT_STR         reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    LBRACKET        reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    FUNCTION        reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    NEW             reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    BOOL            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    SHORT           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    USHORT          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    INT             reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    UINT            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    LONG            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    ULONG           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    CHAR            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    FLOAT           reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    VOID            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    TYPEOF          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    TYPEID          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    BODY            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    RBRACE          reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)
    ELSE            reduce using rule 370 (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault StatementListNoCaseNoDefault .)


state 716

    (329) WhileStatement -> WHILE LPAREN Expression RPAREN . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 757
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 717

    (362) SwitchStatement -> SWITCH LPAREN Expression RPAREN . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 758
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 718

    (330) DoStatement -> DO ScopeStatement WHILE LPAREN . Expression RPAREN
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 759
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 719

    (358) RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression . RANGE UprExpression RPAREN

    RANGE           shift and go to state 760


state 720

    (359) LwrExpression -> Expression .

    RANGE           reduce using rule 359 (LwrExpression -> Expression .)


state 721

    (59) VarDeclarator -> BasicType2_opt . IDENTIFIER
    (60) AltDeclarator -> BasicType2_opt . IDENTIFIER AltDeclaratorSuffixes
    (61) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN
    (62) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltFuncDeclaratorSuffix
    (63) AltDeclarator -> BasicType2_opt . LPAREN AltDeclaratorX RPAREN AltDeclaratorSuffixes

    IDENTIFIER      shift and go to state 655
    LPAREN          shift and go to state 235


state 722

    (349) ForeachType -> ForeachTypeAttributes_opt BasicType Declarator .

    COMMA           reduce using rule 349 (ForeachType -> ForeachTypeAttributes_opt BasicType Declarator .)
    SEMICOLON       reduce using rule 349 (ForeachType -> ForeachTypeAttributes_opt BasicType Declarator .)


state 723

    (351) ForeachType -> ForeachTypeAttributes_opt ALIAS IDENTIFIER .

    COMMA           reduce using rule 351 (ForeachType -> ForeachTypeAttributes_opt ALIAS IDENTIFIER .)
    SEMICOLON       reduce using rule 351 (ForeachType -> ForeachTypeAttributes_opt ALIAS IDENTIFIER .)


state 724

    (318) IfStatement -> IF LPAREN IfCondition RPAREN . ifmark1 ThenStatement ifmark2
    (319) IfStatement -> IF LPAREN IfCondition RPAREN . ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (323) ifmark1 -> . empty
    (477) empty -> .

    LBRACE          reduce using rule 477 (empty -> .)
    CASE            reduce using rule 477 (empty -> .)
    DEFAULT         reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    IF              reduce using rule 477 (empty -> .)
    WHILE           reduce using rule 477 (empty -> .)
    DO              reduce using rule 477 (empty -> .)
    FOR             reduce using rule 477 (empty -> .)
    SWITCH          reduce using rule 477 (empty -> .)
    FINAL           reduce using rule 477 (empty -> .)
    CONTINUE        reduce using rule 477 (empty -> .)
    BREAK           reduce using rule 477 (empty -> .)
    RETURN          reduce using rule 477 (empty -> .)
    GOTO            reduce using rule 477 (empty -> .)
    WITH            reduce using rule 477 (empty -> .)
    MIXIN           reduce using rule 477 (empty -> .)
    IMPORT          reduce using rule 477 (empty -> .)
    STATIC          reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    ALIAS           reduce using rule 477 (empty -> .)
    ENUM            reduce using rule 477 (empty -> .)
    EXTERN          reduce using rule 477 (empty -> .)
    AUTO            reduce using rule 477 (empty -> .)
    CONST           reduce using rule 477 (empty -> .)
    IMMUTABLE       reduce using rule 477 (empty -> .)
    FOREACH         reduce using rule 477 (empty -> .)
    FOREACH_REVERSE reduce using rule 477 (empty -> .)
    CLASS           reduce using rule 477 (empty -> .)
    UNION           reduce using rule 477 (empty -> .)
    AMPERSAND       reduce using rule 477 (empty -> .)
    PLUS_PLUS       reduce using rule 477 (empty -> .)
    MINUS_MINUS     reduce using rule 477 (empty -> .)
    TIMES           reduce using rule 477 (empty -> .)
    MINUS           reduce using rule 477 (empty -> .)
    PLUS            reduce using rule 477 (empty -> .)
    EXCLAMATION     reduce using rule 477 (empty -> .)
    TILDE           reduce using rule 477 (empty -> .)
    CAST            reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    THIS            reduce using rule 477 (empty -> .)
    NULL            reduce using rule 477 (empty -> .)
    TRUE            reduce using rule 477 (empty -> .)
    FALSE           reduce using rule 477 (empty -> .)
    DOLLAR          reduce using rule 477 (empty -> .)
    INUMBER         reduce using rule 477 (empty -> .)
    DNUMBER         reduce using rule 477 (empty -> .)
    LIT_CHAR        reduce using rule 477 (empty -> .)
    LIT_STR         reduce using rule 477 (empty -> .)
    LBRACKET        reduce using rule 477 (empty -> .)
    FUNCTION        reduce using rule 477 (empty -> .)
    NEW             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    TYPEID          reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)

    ifmark1                        shift and go to state 761
    empty                          shift and go to state 762

state 725

    (326) IfCondition -> BasicType Declarator . ASSIGN Expression

    ASSIGN          shift and go to state 763


state 726

    (325) IfCondition -> AUTO IDENTIFIER . ASSIGN Expression

    ASSIGN          shift and go to state 764


state 727

    (453) Parameter -> InOut_opt BasicType Declarator ASSIGN AssignExpression .

    COMMA           reduce using rule 453 (Parameter -> InOut_opt BasicType Declarator ASSIGN AssignExpression .)
    RPAREN          reduce using rule 453 (Parameter -> InOut_opt BasicType Declarator ASSIGN AssignExpression .)


state 728

    (122) ArrayMemberInitializations -> ArrayMemberInitialization COMMA ArrayMemberInitializations .

    RBRACKET        reduce using rule 122 (ArrayMemberInitializations -> ArrayMemberInitialization COMMA ArrayMemberInitializations .)


state 729

    (126) ArrayMemberInitialization -> AssignExpression . COLON NonVoidInitializer
    (118) ExpInitializer -> AssignExpression .

    COLON           shift and go to state 660
    COMMA           reduce using rule 118 (ExpInitializer -> AssignExpression .)
    RBRACKET        reduce using rule 118 (ExpInitializer -> AssignExpression .)


state 730

    (126) ArrayMemberInitialization -> AssignExpression COLON NonVoidInitializer .

    COMMA           reduce using rule 126 (ArrayMemberInitialization -> AssignExpression COLON NonVoidInitializer .)
    RBRACKET        reduce using rule 126 (ArrayMemberInitialization -> AssignExpression COLON NonVoidInitializer .)


state 731

    (167) ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .

    ASSIGN          reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_PLUS         reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_MINUS        reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_TIMES        reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_DIV          reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_MODULO       reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_AND_BIT      reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_OR_BIT       reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_XOR_BIT      reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_LEFT         reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    EQ_RIGHT        reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    COMMA           reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    RPAREN          reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    SEMICOLON       reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    COLON           reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    RBRACKET        reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    RANGE           reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)
    RBRACE          reduce using rule 167 (ConditionalExpression -> OrOrExpression QUESTION Expression COLON ConditionalExpression .)


state 732

    (209) NewExpression -> NEW AllocatorArguments_opt Type .
    (211) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type . LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type . LPAREN ArgumentList_opt RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    POWER           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    DOT             reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    PLUS_PLUS       reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    MINUS_MINUS     reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    TIMES           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    DIV             reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    MODULO          reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    PLUS            reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    MINUS           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    LEFT_SHIFT      reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    RIGHT_SHIFT     reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    IS_EQ           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    NOT_EQ          reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    LESS            reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    GREATER_EQ      reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    GREATER         reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    LESS_EQ         reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    AMPERSAND       reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    CARET           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    PIPE            reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    DOUBLE_AMPERSAND reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    QUESTION        reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    DOUBLE_PIPE     reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    ASSIGN          reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_PLUS         reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_MINUS        reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_TIMES        reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_DIV          reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_MODULO       reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_AND_BIT      reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_OR_BIT       reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_XOR_BIT      reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_LEFT         reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    EQ_RIGHT        reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    RBRACKET        reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    RANGE           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    COMMA           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    RPAREN          reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    SEMICOLON       reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    RBRACE          reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    COLON           reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .)
    LBRACKET        shift and go to state 669
    LPAREN          shift and go to state 670

  ! LPAREN          [ reduce using rule 209 (NewExpression -> NEW AllocatorArguments_opt Type .) ]


state 733

    (211) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression . RBRACKET

    RBRACKET        shift and go to state 765


state 734

    (212) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt . RPAREN

    RPAREN          shift and go to state 766


state 735

    (416) SuperClass_opt -> SuperClass .

    DOT             reduce using rule 416 (SuperClass_opt -> SuperClass .)
    BOOL            reduce using rule 416 (SuperClass_opt -> SuperClass .)
    SHORT           reduce using rule 416 (SuperClass_opt -> SuperClass .)
    USHORT          reduce using rule 416 (SuperClass_opt -> SuperClass .)
    INT             reduce using rule 416 (SuperClass_opt -> SuperClass .)
    UINT            reduce using rule 416 (SuperClass_opt -> SuperClass .)
    LONG            reduce using rule 416 (SuperClass_opt -> SuperClass .)
    ULONG           reduce using rule 416 (SuperClass_opt -> SuperClass .)
    CHAR            reduce using rule 416 (SuperClass_opt -> SuperClass .)
    FLOAT           reduce using rule 416 (SuperClass_opt -> SuperClass .)
    VOID            reduce using rule 416 (SuperClass_opt -> SuperClass .)
    IDENTIFIER      reduce using rule 416 (SuperClass_opt -> SuperClass .)
    TYPEOF          reduce using rule 416 (SuperClass_opt -> SuperClass .)
    LBRACE          reduce using rule 416 (SuperClass_opt -> SuperClass .)


state 736

    (403) SuperClass -> BasicType .

    DOT             reduce using rule 403 (SuperClass -> BasicType .)
    BOOL            reduce using rule 403 (SuperClass -> BasicType .)
    SHORT           reduce using rule 403 (SuperClass -> BasicType .)
    USHORT          reduce using rule 403 (SuperClass -> BasicType .)
    INT             reduce using rule 403 (SuperClass -> BasicType .)
    UINT            reduce using rule 403 (SuperClass -> BasicType .)
    LONG            reduce using rule 403 (SuperClass -> BasicType .)
    ULONG           reduce using rule 403 (SuperClass -> BasicType .)
    CHAR            reduce using rule 403 (SuperClass -> BasicType .)
    FLOAT           reduce using rule 403 (SuperClass -> BasicType .)
    VOID            reduce using rule 403 (SuperClass -> BasicType .)
    IDENTIFIER      reduce using rule 403 (SuperClass -> BasicType .)
    TYPEOF          reduce using rule 403 (SuperClass -> BasicType .)
    LBRACE          reduce using rule 403 (SuperClass -> BasicType .)


state 737

    (417) SuperClass_opt -> empty .

    DOT             reduce using rule 417 (SuperClass_opt -> empty .)
    BOOL            reduce using rule 417 (SuperClass_opt -> empty .)
    SHORT           reduce using rule 417 (SuperClass_opt -> empty .)
    USHORT          reduce using rule 417 (SuperClass_opt -> empty .)
    INT             reduce using rule 417 (SuperClass_opt -> empty .)
    UINT            reduce using rule 417 (SuperClass_opt -> empty .)
    LONG            reduce using rule 417 (SuperClass_opt -> empty .)
    ULONG           reduce using rule 417 (SuperClass_opt -> empty .)
    CHAR            reduce using rule 417 (SuperClass_opt -> empty .)
    FLOAT           reduce using rule 417 (SuperClass_opt -> empty .)
    VOID            reduce using rule 417 (SuperClass_opt -> empty .)
    IDENTIFIER      reduce using rule 417 (SuperClass_opt -> empty .)
    TYPEOF          reduce using rule 417 (SuperClass_opt -> empty .)
    LBRACE          reduce using rule 417 (SuperClass_opt -> empty .)


state 738

    (412) NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt . Interfaces_opt AggregateBody
    (418) Interfaces_opt -> . Interfaces
    (419) Interfaces_opt -> . empty
    (404) Interfaces -> . Interface
    (405) Interfaces -> . Interface COMMA Interfaces
    (477) empty -> .
    (406) Interface -> . BasicType
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN

    LBRACE          reduce using rule 477 (empty -> .)
    DOT             shift and go to state 34
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    IDENTIFIER      shift and go to state 39
    TYPEOF          shift and go to state 47

    Interfaces_opt                 shift and go to state 767
    Interfaces                     shift and go to state 768
    BasicType                      shift and go to state 601
    BasicTypeX                     shift and go to state 38
    Typeof                         shift and go to state 42
    IdentifierList                 shift and go to state 33
    Interface                      shift and go to state 259
    empty                          shift and go to state 769

state 739

    (413) ClassArguments -> LPAREN ArgumentList_opt . RPAREN

    RPAREN          shift and go to state 770


state 740

    (222) CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .

    TIMES           reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    DIV             reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    MODULO          reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    PLUS            reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    MINUS           reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    LEFT_SHIFT      reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    RIGHT_SHIFT     reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    IS_EQ           reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    NOT_EQ          reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    LESS            reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    GREATER_EQ      reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    GREATER         reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    LESS_EQ         reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    AMPERSAND       reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    CARET           reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    PIPE            reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    DOUBLE_AMPERSAND reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    QUESTION        reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    DOUBLE_PIPE     reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    ASSIGN          reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_PLUS         reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_MINUS        reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_TIMES        reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_DIV          reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_MODULO       reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_AND_BIT      reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_OR_BIT       reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_XOR_BIT      reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_LEFT         reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    EQ_RIGHT        reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    RBRACKET        reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    RANGE           reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    COMMA           reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    RPAREN          reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    SEMICOLON       reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    RBRACE          reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)
    COLON           reduce using rule 222 (CastExpression -> CAST LPAREN Type RPAREN UnaryExpression .)


state 741

    (205) UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .

    TIMES           reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    DIV             reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    MODULO          reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    PLUS            reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    MINUS           reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    IS_EQ           reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    NOT_EQ          reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    LESS            reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    GREATER_EQ      reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    GREATER         reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    LESS_EQ         reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    AMPERSAND       reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    CARET           reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    PIPE            reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    QUESTION        reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    ASSIGN          reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_PLUS         reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_MINUS        reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_TIMES        reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_DIV          reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_MODULO       reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_LEFT         reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    EQ_RIGHT        reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    COMMA           reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    RPAREN          reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    RBRACKET        reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    RANGE           reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    RBRACE          reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)
    COLON           reduce using rule 205 (UnaryExpression -> LPAREN Type RPAREN DOT IDENTIFIER .)


state 742

    (74) AltFuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .

    RPAREN          reduce using rule 74 (AltFuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)
    ASSIGN          reduce using rule 74 (AltFuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)
    COMMA           reduce using rule 74 (AltFuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)
    SEMICOLON       reduce using rule 74 (AltFuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)
    ELLIPSIS        reduce using rule 74 (AltFuncDeclaratorSuffix -> Parameters MemberFunctionAttributes_opt .)


state 743

    (56) AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes ASSIGN . Initializer
    (114) Initializer -> . VoidInitializer
    (115) Initializer -> . NonVoidInitializer
    (142) VoidInitializer -> . VOID
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    VOID            shift and go to state 358
    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    Initializer                    shift and go to state 771
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    NonVoidInitializer             shift and go to state 360
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    ArrayInitializer               shift and go to state 361
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    VoidInitializer                shift and go to state 362
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 365

state 744

    (54) AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN . Initializer
    (114) Initializer -> . VoidInitializer
    (115) Initializer -> . NonVoidInitializer
    (142) VoidInitializer -> . VOID
    (116) NonVoidInitializer -> . ExpInitializer
    (117) NonVoidInitializer -> . ArrayInitializer
    (118) ExpInitializer -> . AssignExpression
    (119) ArrayInitializer -> . LBRACKET ArrayMemberInitializations_opt RBRACKET
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    VOID            shift and go to state 358
    LBRACKET        shift and go to state 359
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    IdentifierList                 shift and go to state 243
    ImportExpression               shift and go to state 188
    PowExpression                  shift and go to state 190
    AndExpression                  shift and go to state 170
    XorExpression                  shift and go to state 223
    FunctionLiteralBody            shift and go to state 219
    Initializer                    shift and go to state 772
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    BasicType                      shift and go to state 246
    NonVoidInitializer             shift and go to state 360
    BasicTypeX                     shift and go to state 248
    BodyStatement                  shift and go to state 213
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    ArrayInitializer               shift and go to state 361
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    VoidInitializer                shift and go to state 362
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    TypeidExpression               shift and go to state 220
    ExpInitializer                 shift and go to state 364
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 365

state 745

    (387) WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .

    SEMICOLON       reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    CASE            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    DEFAULT         reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    LBRACE          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    IDENTIFIER      reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    IF              reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    WHILE           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    DO              reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    FOR             reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    SWITCH          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    FINAL           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    CONTINUE        reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    BREAK           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    RETURN          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    GOTO            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    WITH            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    MIXIN           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    IMPORT          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    STATIC          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    LPAREN          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    ALIAS           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    ENUM            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    EXTERN          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    AUTO            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    CONST           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    IMMUTABLE       reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    FOREACH         reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    FOREACH_REVERSE reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    CLASS           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    UNION           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    AMPERSAND       reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    PLUS_PLUS       reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    MINUS_MINUS     reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    TIMES           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    MINUS           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    PLUS            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    EXCLAMATION     reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    TILDE           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    CAST            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    DOT             reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    THIS            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    NULL            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    TRUE            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    FALSE           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    DOLLAR          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    INUMBER         reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    DNUMBER         reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    LIT_CHAR        reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    LIT_STR         reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    LBRACKET        reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    FUNCTION        reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    NEW             reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    BOOL            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    SHORT           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    USHORT          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    INT             reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    UINT            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    LONG            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    ULONG           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    CHAR            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    FLOAT           reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    VOID            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    TYPEOF          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    TYPEID          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    BODY            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    RBRACE          reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)
    ELSE            reduce using rule 387 (WithStatement -> WITH LPAREN Symbol RPAREN ScopeStatement .)


state 746

    (386) WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .

    SEMICOLON       reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    CASE            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    DEFAULT         reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    LBRACE          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    IDENTIFIER      reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    IF              reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    WHILE           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    DO              reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    FOR             reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    SWITCH          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    FINAL           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    CONTINUE        reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    BREAK           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    RETURN          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    GOTO            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    WITH            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    MIXIN           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    IMPORT          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    STATIC          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    LPAREN          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    ALIAS           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    ENUM            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    EXTERN          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    AUTO            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    CONST           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    IMMUTABLE       reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    FOREACH         reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    FOREACH_REVERSE reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    CLASS           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    UNION           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    AMPERSAND       reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    PLUS_PLUS       reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    MINUS_MINUS     reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    TIMES           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    MINUS           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    PLUS            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    EXCLAMATION     reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    TILDE           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    CAST            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    DOT             reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    THIS            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    NULL            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    TRUE            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    FALSE           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    DOLLAR          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    INUMBER         reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    DNUMBER         reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    LIT_CHAR        reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    LIT_STR         reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    LBRACKET        reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    FUNCTION        reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    NEW             reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    BOOL            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    SHORT           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    USHORT          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    INT             reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    UINT            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    LONG            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    ULONG           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    CHAR            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    FLOAT           reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    VOID            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    TYPEOF          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    TYPEID          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    BODY            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    RBRACE          reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)
    ELSE            reduce using rule 386 (WithStatement -> WITH LPAREN Expression RPAREN ScopeStatement .)


state 747

    (476) SymbolTail -> IDENTIFIER DOT SymbolTail .

    RPAREN          reduce using rule 476 (SymbolTail -> IDENTIFIER DOT SymbolTail .)


state 748

    (475) SymbolTail -> IDENTIFIER .
    (476) SymbolTail -> IDENTIFIER . DOT SymbolTail
    (102) IdentifierList -> IDENTIFIER .
    (103) IdentifierList -> IDENTIFIER . DOT IdentifierList
    (104) IdentifierList -> IDENTIFIER . LBRACKET AssignExpression RBRACKET DOT IdentifierList

  ! reduce/reduce conflict for RPAREN resolved using rule 102 (IdentifierList -> IDENTIFIER .)
    DOT             shift and go to state 703
    POWER           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS_PLUS       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS_MINUS     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    TIMES           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DIV             reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MODULO          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PLUS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    MINUS           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LEFT_SHIFT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RIGHT_SHIFT     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    IS_EQ           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    NOT_EQ          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER_EQ      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    GREATER         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LESS_EQ         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    AMPERSAND       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    CARET           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    PIPE            reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_AMPERSAND reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    QUESTION        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    DOUBLE_PIPE     reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_PLUS         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MINUS        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_TIMES        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_DIV          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_MODULO       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_AND_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_OR_BIT       reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_XOR_BIT      reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_LEFT         reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    EQ_RIGHT        reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    COMMA           reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    RPAREN          reduce using rule 102 (IdentifierList -> IDENTIFIER .)
    LBRACKET        shift and go to state 91

  ! RPAREN          [ reduce using rule 475 (SymbolTail -> IDENTIFIER .) ]
  ! DOT             [ reduce using rule 102 (IdentifierList -> IDENTIFIER .) ]


state 749

    (348) ForeachTypeList -> ForeachType COMMA ForeachTypeList .

    SEMICOLON       reduce using rule 348 (ForeachTypeList -> ForeachType COMMA ForeachTypeList .)


state 750

    (357) ForeachAggregate -> Expression .

    RPAREN          reduce using rule 357 (ForeachAggregate -> Expression .)


state 751

    (343) AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate . RPAREN

    RPAREN          shift and go to state 773


state 752

    (374) FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 774
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 753

    (364) CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp . COLON ScopeStatementList

    COLON           shift and go to state 775


state 754

    (366) LastExp -> AssignExpression .

    COLON           reduce using rule 366 (LastExp -> AssignExpression .)


state 755

    (331) ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON . for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (332) for_M1 -> .

    AMPERSAND       reduce using rule 332 (for_M1 -> .)
    PLUS_PLUS       reduce using rule 332 (for_M1 -> .)
    MINUS_MINUS     reduce using rule 332 (for_M1 -> .)
    TIMES           reduce using rule 332 (for_M1 -> .)
    MINUS           reduce using rule 332 (for_M1 -> .)
    PLUS            reduce using rule 332 (for_M1 -> .)
    EXCLAMATION     reduce using rule 332 (for_M1 -> .)
    LPAREN          reduce using rule 332 (for_M1 -> .)
    TILDE           reduce using rule 332 (for_M1 -> .)
    CAST            reduce using rule 332 (for_M1 -> .)
    IDENTIFIER      reduce using rule 332 (for_M1 -> .)
    DOT             reduce using rule 332 (for_M1 -> .)
    THIS            reduce using rule 332 (for_M1 -> .)
    NULL            reduce using rule 332 (for_M1 -> .)
    TRUE            reduce using rule 332 (for_M1 -> .)
    FALSE           reduce using rule 332 (for_M1 -> .)
    DOLLAR          reduce using rule 332 (for_M1 -> .)
    INUMBER         reduce using rule 332 (for_M1 -> .)
    DNUMBER         reduce using rule 332 (for_M1 -> .)
    LIT_CHAR        reduce using rule 332 (for_M1 -> .)
    LIT_STR         reduce using rule 332 (for_M1 -> .)
    LBRACKET        reduce using rule 332 (for_M1 -> .)
    FUNCTION        reduce using rule 332 (for_M1 -> .)
    MIXIN           reduce using rule 332 (for_M1 -> .)
    IMPORT          reduce using rule 332 (for_M1 -> .)
    NEW             reduce using rule 332 (for_M1 -> .)
    BOOL            reduce using rule 332 (for_M1 -> .)
    SHORT           reduce using rule 332 (for_M1 -> .)
    USHORT          reduce using rule 332 (for_M1 -> .)
    INT             reduce using rule 332 (for_M1 -> .)
    UINT            reduce using rule 332 (for_M1 -> .)
    LONG            reduce using rule 332 (for_M1 -> .)
    ULONG           reduce using rule 332 (for_M1 -> .)
    CHAR            reduce using rule 332 (for_M1 -> .)
    FLOAT           reduce using rule 332 (for_M1 -> .)
    VOID            reduce using rule 332 (for_M1 -> .)
    TYPEOF          reduce using rule 332 (for_M1 -> .)
    TYPEID          reduce using rule 332 (for_M1 -> .)
    LBRACE          reduce using rule 332 (for_M1 -> .)
    BODY            reduce using rule 332 (for_M1 -> .)
    RPAREN          reduce using rule 332 (for_M1 -> .)

    for_M1                         shift and go to state 776

state 756

    (388) MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CASE            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    IF              reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    WHILE           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    DO              reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FOR             reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    SWITCH          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FINAL           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    BREAK           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    RETURN          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    GOTO            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    WITH            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    MIXIN           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    IMPORT          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    STATIC          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    ALIAS           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    ENUM            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    EXTERN          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    AUTO            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CONST           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    IMMUTABLE       reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FOREACH         reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FOREACH_REVERSE reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CLASS           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    UNION           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    AMPERSAND       reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    PLUS_PLUS       reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    MINUS_MINUS     reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    TIMES           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    MINUS           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    PLUS            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    EXCLAMATION     reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    TILDE           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CAST            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    DOT             reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    THIS            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    NULL            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    TRUE            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FALSE           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    DOLLAR          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    INUMBER         reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    DNUMBER         reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    LIT_CHAR        reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    LIT_STR         reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    NEW             reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    BOOL            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    SHORT           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    USHORT          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    INT             reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    UINT            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    LONG            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    ULONG           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    CHAR            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    VOID            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    TYPEOF          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    TYPEID          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    BODY            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)
    ELSE            reduce using rule 388 (MixinStatement -> MIXIN LPAREN AssignExpression RPAREN SEMICOLON .)


state 757

    (329) WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .

    SEMICOLON       reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    CASE            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    DEFAULT         reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    LBRACE          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    IDENTIFIER      reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    IF              reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    WHILE           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    DO              reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    FOR             reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    SWITCH          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    FINAL           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    CONTINUE        reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    BREAK           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    RETURN          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    GOTO            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    WITH            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    MIXIN           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    IMPORT          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    STATIC          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    LPAREN          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    ALIAS           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    ENUM            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    EXTERN          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    AUTO            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    CONST           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    IMMUTABLE       reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    FOREACH         reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    FOREACH_REVERSE reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    CLASS           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    UNION           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    AMPERSAND       reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    PLUS_PLUS       reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    MINUS_MINUS     reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    TIMES           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    MINUS           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    PLUS            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    EXCLAMATION     reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    TILDE           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    CAST            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    DOT             reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    THIS            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    NULL            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    TRUE            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    FALSE           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    DOLLAR          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    INUMBER         reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    DNUMBER         reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    LIT_CHAR        reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    LIT_STR         reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    LBRACKET        reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    FUNCTION        reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    NEW             reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    BOOL            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    SHORT           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    USHORT          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    INT             reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    UINT            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    LONG            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    ULONG           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    CHAR            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    FLOAT           reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    VOID            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    TYPEOF          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    TYPEID          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    BODY            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    RBRACE          reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)
    ELSE            reduce using rule 329 (WhileStatement -> WHILE LPAREN Expression RPAREN ScopeStatement .)


state 758

    (362) SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .

    SEMICOLON       reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CASE            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DEFAULT         reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LBRACE          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IDENTIFIER      reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IF              reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    WHILE           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DO              reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FOR             reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    SWITCH          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FINAL           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CONTINUE        reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    BREAK           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    RETURN          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    GOTO            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    WITH            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    MIXIN           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IMPORT          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    STATIC          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LPAREN          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ALIAS           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ENUM            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    EXTERN          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    AUTO            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CONST           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IMMUTABLE       reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FOREACH         reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FOREACH_REVERSE reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CLASS           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    UNION           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    AMPERSAND       reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    PLUS_PLUS       reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    MINUS_MINUS     reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TIMES           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    MINUS           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    PLUS            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    EXCLAMATION     reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TILDE           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CAST            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DOT             reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    THIS            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    NULL            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TRUE            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FALSE           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DOLLAR          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    INUMBER         reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DNUMBER         reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LIT_CHAR        reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LIT_STR         reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LBRACKET        reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FUNCTION        reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    NEW             reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    BOOL            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    SHORT           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    USHORT          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    INT             reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    UINT            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LONG            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ULONG           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CHAR            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FLOAT           reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    VOID            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TYPEOF          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TYPEID          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    BODY            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    RBRACE          reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ELSE            reduce using rule 362 (SwitchStatement -> SWITCH LPAREN Expression RPAREN ScopeStatement .)


state 759

    (330) DoStatement -> DO ScopeStatement WHILE LPAREN Expression . RPAREN

    RPAREN          shift and go to state 777


state 760

    (358) RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE . UprExpression RPAREN
    (360) UprExpression -> . Expression
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    UprExpression                  shift and go to state 778
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 779
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 761

    (318) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 . ThenStatement ifmark2
    (319) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 . ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (327) ThenStatement -> . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 780
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    ThenStatement                  shift and go to state 781
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 762

    (323) ifmark1 -> empty .

    LBRACE          reduce using rule 323 (ifmark1 -> empty .)
    CASE            reduce using rule 323 (ifmark1 -> empty .)
    DEFAULT         reduce using rule 323 (ifmark1 -> empty .)
    IDENTIFIER      reduce using rule 323 (ifmark1 -> empty .)
    IF              reduce using rule 323 (ifmark1 -> empty .)
    WHILE           reduce using rule 323 (ifmark1 -> empty .)
    DO              reduce using rule 323 (ifmark1 -> empty .)
    FOR             reduce using rule 323 (ifmark1 -> empty .)
    SWITCH          reduce using rule 323 (ifmark1 -> empty .)
    FINAL           reduce using rule 323 (ifmark1 -> empty .)
    CONTINUE        reduce using rule 323 (ifmark1 -> empty .)
    BREAK           reduce using rule 323 (ifmark1 -> empty .)
    RETURN          reduce using rule 323 (ifmark1 -> empty .)
    GOTO            reduce using rule 323 (ifmark1 -> empty .)
    WITH            reduce using rule 323 (ifmark1 -> empty .)
    MIXIN           reduce using rule 323 (ifmark1 -> empty .)
    IMPORT          reduce using rule 323 (ifmark1 -> empty .)
    STATIC          reduce using rule 323 (ifmark1 -> empty .)
    LPAREN          reduce using rule 323 (ifmark1 -> empty .)
    ALIAS           reduce using rule 323 (ifmark1 -> empty .)
    ENUM            reduce using rule 323 (ifmark1 -> empty .)
    EXTERN          reduce using rule 323 (ifmark1 -> empty .)
    AUTO            reduce using rule 323 (ifmark1 -> empty .)
    CONST           reduce using rule 323 (ifmark1 -> empty .)
    IMMUTABLE       reduce using rule 323 (ifmark1 -> empty .)
    FOREACH         reduce using rule 323 (ifmark1 -> empty .)
    FOREACH_REVERSE reduce using rule 323 (ifmark1 -> empty .)
    CLASS           reduce using rule 323 (ifmark1 -> empty .)
    UNION           reduce using rule 323 (ifmark1 -> empty .)
    AMPERSAND       reduce using rule 323 (ifmark1 -> empty .)
    PLUS_PLUS       reduce using rule 323 (ifmark1 -> empty .)
    MINUS_MINUS     reduce using rule 323 (ifmark1 -> empty .)
    TIMES           reduce using rule 323 (ifmark1 -> empty .)
    MINUS           reduce using rule 323 (ifmark1 -> empty .)
    PLUS            reduce using rule 323 (ifmark1 -> empty .)
    EXCLAMATION     reduce using rule 323 (ifmark1 -> empty .)
    TILDE           reduce using rule 323 (ifmark1 -> empty .)
    CAST            reduce using rule 323 (ifmark1 -> empty .)
    DOT             reduce using rule 323 (ifmark1 -> empty .)
    THIS            reduce using rule 323 (ifmark1 -> empty .)
    NULL            reduce using rule 323 (ifmark1 -> empty .)
    TRUE            reduce using rule 323 (ifmark1 -> empty .)
    FALSE           reduce using rule 323 (ifmark1 -> empty .)
    DOLLAR          reduce using rule 323 (ifmark1 -> empty .)
    INUMBER         reduce using rule 323 (ifmark1 -> empty .)
    DNUMBER         reduce using rule 323 (ifmark1 -> empty .)
    LIT_CHAR        reduce using rule 323 (ifmark1 -> empty .)
    LIT_STR         reduce using rule 323 (ifmark1 -> empty .)
    LBRACKET        reduce using rule 323 (ifmark1 -> empty .)
    FUNCTION        reduce using rule 323 (ifmark1 -> empty .)
    NEW             reduce using rule 323 (ifmark1 -> empty .)
    BOOL            reduce using rule 323 (ifmark1 -> empty .)
    SHORT           reduce using rule 323 (ifmark1 -> empty .)
    USHORT          reduce using rule 323 (ifmark1 -> empty .)
    INT             reduce using rule 323 (ifmark1 -> empty .)
    UINT            reduce using rule 323 (ifmark1 -> empty .)
    LONG            reduce using rule 323 (ifmark1 -> empty .)
    ULONG           reduce using rule 323 (ifmark1 -> empty .)
    CHAR            reduce using rule 323 (ifmark1 -> empty .)
    FLOAT           reduce using rule 323 (ifmark1 -> empty .)
    VOID            reduce using rule 323 (ifmark1 -> empty .)
    TYPEOF          reduce using rule 323 (ifmark1 -> empty .)
    TYPEID          reduce using rule 323 (ifmark1 -> empty .)
    BODY            reduce using rule 323 (ifmark1 -> empty .)


state 763

    (326) IfCondition -> BasicType Declarator ASSIGN . Expression
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 782
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 764

    (325) IfCondition -> AUTO IDENTIFIER ASSIGN . Expression
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    PrimaryExpression              shift and go to state 204
    ComplementExpression           shift and go to state 205
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    BlockStatement                 shift and go to state 175
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 783
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 765

    (211) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .

    POWER           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    DOT             reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    PLUS_PLUS       reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    MINUS_MINUS     reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    LPAREN          reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    TIMES           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    DIV             reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    MODULO          reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    PLUS            reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    MINUS           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    LEFT_SHIFT      reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    RIGHT_SHIFT     reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    IS_EQ           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    NOT_EQ          reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    LESS            reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    GREATER_EQ      reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    GREATER         reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    LESS_EQ         reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    AMPERSAND       reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    CARET           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    PIPE            reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    DOUBLE_AMPERSAND reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    QUESTION        reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    DOUBLE_PIPE     reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    ASSIGN          reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_PLUS         reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_MINUS        reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_TIMES        reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_DIV          reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_MODULO       reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_AND_BIT      reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_OR_BIT       reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_XOR_BIT      reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_LEFT         reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    EQ_RIGHT        reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    RBRACKET        reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    RANGE           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    COMMA           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    RPAREN          reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    SEMICOLON       reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    RBRACE          reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)
    COLON           reduce using rule 211 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET .)


state 766

    (212) NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .

    POWER           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    DOT             reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    PLUS_PLUS       reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    MINUS_MINUS     reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    LPAREN          reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    TIMES           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    DIV             reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    MODULO          reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    PLUS            reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    MINUS           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    LEFT_SHIFT      reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    RIGHT_SHIFT     reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    IS_EQ           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    NOT_EQ          reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    LESS            reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    GREATER_EQ      reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    GREATER         reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    LESS_EQ         reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    AMPERSAND       reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    CARET           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    PIPE            reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    DOUBLE_AMPERSAND reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    QUESTION        reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    DOUBLE_PIPE     reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    ASSIGN          reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_PLUS         reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_MINUS        reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_TIMES        reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_DIV          reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_MODULO       reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_AND_BIT      reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_OR_BIT       reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_XOR_BIT      reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_LEFT         reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    EQ_RIGHT        reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    RBRACKET        reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    RANGE           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    COMMA           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    RPAREN          reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    SEMICOLON       reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    RBRACE          reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)
    COLON           reduce using rule 212 (NewExpressionWithArgs -> NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN .)


state 767

    (412) NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt . AggregateBody
    (395) AggregateBody -> . LBRACE DeclDefs_opt RBRACE

    LBRACE          shift and go to state 50

    AggregateBody                  shift and go to state 784

state 768

    (418) Interfaces_opt -> Interfaces .

    LBRACE          reduce using rule 418 (Interfaces_opt -> Interfaces .)


state 769

    (419) Interfaces_opt -> empty .

    LBRACE          reduce using rule 419 (Interfaces_opt -> empty .)


state 770

    (413) ClassArguments -> LPAREN ArgumentList_opt RPAREN .

    DOT             reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    BOOL            reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    SHORT           reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    USHORT          reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    INT             reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    UINT            reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    LONG            reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    ULONG           reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    CHAR            reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    FLOAT           reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    VOID            reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    IDENTIFIER      reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    TYPEOF          reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)
    LBRACE          reduce using rule 413 (ClassArguments -> LPAREN ArgumentList_opt RPAREN .)


state 771

    (56) AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes ASSIGN Initializer .

    COMMA           reduce using rule 56 (AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes ASSIGN Initializer .)
    SEMICOLON       reduce using rule 56 (AltDeclaratorIdentifier -> BasicType2_opt IDENTIFIER AltDeclaratorSuffixes ASSIGN Initializer .)


state 772

    (54) AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN Initializer .

    COMMA           reduce using rule 54 (AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN Initializer .)
    SEMICOLON       reduce using rule 54 (AltDeclaratorIdentifier -> BasicType2 IDENTIFIER AltDeclaratorSuffixes_opt ASSIGN Initializer .)


state 773

    (343) AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .

    LBRACE          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    CASE            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    DEFAULT         reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    IDENTIFIER      reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    IF              reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    WHILE           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    DO              reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    FOR             reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    SWITCH          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    FINAL           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    CONTINUE        reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    BREAK           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    RETURN          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    GOTO            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    WITH            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    MIXIN           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    IMPORT          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    STATIC          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    LPAREN          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    ALIAS           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    ENUM            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    EXTERN          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    AUTO            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    CONST           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    IMMUTABLE       reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    FOREACH         reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    FOREACH_REVERSE reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    CLASS           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    UNION           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    AMPERSAND       reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    PLUS_PLUS       reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    MINUS_MINUS     reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    TIMES           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    MINUS           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    PLUS            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    EXCLAMATION     reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    TILDE           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    CAST            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    DOT             reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    THIS            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    NULL            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    TRUE            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    FALSE           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    DOLLAR          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    INUMBER         reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    DNUMBER         reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    LIT_CHAR        reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    LIT_STR         reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    LBRACKET        reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    FUNCTION        reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    NEW             reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    BOOL            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    SHORT           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    USHORT          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    INT             reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    UINT            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    LONG            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    ULONG           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    CHAR            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    FLOAT           reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    VOID            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    TYPEOF          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    TYPEID          reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)
    BODY            reduce using rule 343 (AggregateForeach -> Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN .)


state 774

    (374) FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .

    SEMICOLON       reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CASE            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DEFAULT         reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LBRACE          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IDENTIFIER      reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IF              reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    WHILE           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DO              reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FOR             reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    SWITCH          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FINAL           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CONTINUE        reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    BREAK           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    RETURN          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    GOTO            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    WITH            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    MIXIN           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IMPORT          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    STATIC          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LPAREN          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ALIAS           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ENUM            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    EXTERN          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    AUTO            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CONST           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    IMMUTABLE       reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FOREACH         reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FOREACH_REVERSE reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CLASS           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    UNION           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    AMPERSAND       reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    PLUS_PLUS       reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    MINUS_MINUS     reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TIMES           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    MINUS           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    PLUS            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    EXCLAMATION     reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TILDE           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CAST            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DOT             reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    THIS            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    NULL            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TRUE            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FALSE           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DOLLAR          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    INUMBER         reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    DNUMBER         reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LIT_CHAR        reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LIT_STR         reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LBRACKET        reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FUNCTION        reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    NEW             reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    BOOL            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    SHORT           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    USHORT          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    INT             reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    UINT            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    LONG            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ULONG           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    CHAR            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    FLOAT           reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    VOID            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TYPEOF          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    TYPEID          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    BODY            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    RBRACE          reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)
    ELSE            reduce using rule 374 (FinalSwitchStatement -> FINAL SWITCH LPAREN Expression RPAREN ScopeStatement .)


state 775

    (364) CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON . ScopeStatementList
    (368) ScopeStatementList -> . StatementListNoCaseNoDefault
    (369) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault
    (370) StatementListNoCaseNoDefault -> . StatementNoCaseNoDefault StatementListNoCaseNoDefault
    (371) StatementNoCaseNoDefault -> . SEMICOLON
    (372) StatementNoCaseNoDefault -> . NonEmptyStatementNoCaseNoDefault
    (373) StatementNoCaseNoDefault -> . ScopeBlockStatement
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (307) ScopeBlockStatement -> . BlockStatement
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    SEMICOLON       shift and go to state 633
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LBRACE          shift and go to state 145
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    BlockStatement                 shift and go to state 300
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    ScopeStatementList             shift and go to state 785
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    StatementNoCaseNoDefault       shift and go to state 632
    StorageClasses_opt             shift and go to state 9
    BreakStatement                 shift and go to state 311
    GotoStatement                  shift and go to state 312
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    StatementListNoCaseNoDefault   shift and go to state 634
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    LIT_STRPlus                    shift and go to state 210
    empty                          shift and go to state 62
    NonEmptyStatementNoCaseNoDefault shift and go to state 635
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    ScopeBlockStatement            shift and go to state 636
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 776

    (331) ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 . Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (341) Increment_opt -> . Increment
    (342) Increment_opt -> . empty
    (340) Increment -> . Expression
    (477) empty -> .
    (151) Expression -> . CommaExpression
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (472) BodyStatement -> . BODY BlockStatement

    RPAREN          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    LPAREN          shift and go to state 228
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    IDENTIFIER      shift and go to state 247
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    MIXIN           shift and go to state 224
    IMPORT          shift and go to state 176
    NEW             shift and go to state 202
    BOOL            shift and go to state 46
    SHORT           shift and go to state 31
    USHORT          shift and go to state 40
    INT             shift and go to state 44
    UINT            shift and go to state 41
    LONG            shift and go to state 37
    ULONG           shift and go to state 35
    CHAR            shift and go to state 43
    FLOAT           shift and go to state 45
    VOID            shift and go to state 32
    TYPEOF          shift and go to state 47
    TYPEID          shift and go to state 197
    LBRACE          shift and go to state 145
    BODY            shift and go to state 146

    PostfixExpression              shift and go to state 201
    CastExpression                 shift and go to state 218
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    IdentifierList                 shift and go to state 243
    AndExpression                  shift and go to state 170
    PowExpression                  shift and go to state 190
    FunctionLiteralBody            shift and go to state 219
    Increment_opt                  shift and go to state 786
    PrimaryExpression              shift and go to state 204
    OrOrExpression                 shift and go to state 173
    TypeidExpression               shift and go to state 220
    BasicType                      shift and go to state 246
    BasicTypeX                     shift and go to state 248
    ComplementExpression           shift and go to state 205
    LIT_STRPlus                    shift and go to state 210
    ShiftExpression                shift and go to state 183
    empty                          shift and go to state 787
    XorExpression                  shift and go to state 223
    RelExpression                  shift and go to state 177
    ArrayLiteral                   shift and go to state 225
    MixinExpression                shift and go to state 211
    OrExpression                   shift and go to state 194
    EqualExpression                shift and go to state 179
    FunctionLiteral                shift and go to state 212
    Typeof                         shift and go to state 244
    BlockStatement                 shift and go to state 175
    AddExpression                  shift and go to state 229
    Expression                     shift and go to state 788
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    ParameterMemberAttributes      shift and go to state 187
    CmpExpression                  shift and go to state 230
    AndAndExpression               shift and go to state 217
    Increment                      shift and go to state 789
    CommaExpression                shift and go to state 254
    NewAnonClassExpression         shift and go to state 185
    AssignExpression               shift and go to state 255

state 777

    (330) DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .

    SEMICOLON       reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    CASE            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    IDENTIFIER      reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    IF              reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    WHILE           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    DO              reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    FOR             reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    SWITCH          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    FINAL           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    CONTINUE        reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    BREAK           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    RETURN          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    GOTO            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    WITH            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    MIXIN           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    IMPORT          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    STATIC          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    ALIAS           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    ENUM            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    EXTERN          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    AUTO            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    CONST           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    IMMUTABLE       reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    FOREACH         reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    FOREACH_REVERSE reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    CLASS           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    UNION           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    AMPERSAND       reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    PLUS_PLUS       reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    MINUS_MINUS     reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    TIMES           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    MINUS           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    PLUS            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    EXCLAMATION     reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    TILDE           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    CAST            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    DOT             reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    THIS            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    NULL            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    TRUE            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    FALSE           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    DOLLAR          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    INUMBER         reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    DNUMBER         reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    LIT_CHAR        reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    LIT_STR         reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    LBRACKET        reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    FUNCTION        reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    NEW             reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    BOOL            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    SHORT           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    USHORT          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    INT             reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    UINT            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    LONG            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    ULONG           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    CHAR            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    FLOAT           reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    VOID            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    TYPEOF          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    TYPEID          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    BODY            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)
    ELSE            reduce using rule 330 (DoStatement -> DO ScopeStatement WHILE LPAREN Expression RPAREN .)


state 778

    (358) RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression . RPAREN

    RPAREN          shift and go to state 790


state 779

    (360) UprExpression -> Expression .

    RPAREN          reduce using rule 360 (UprExpression -> Expression .)


state 780

    (327) ThenStatement -> ScopeStatement .

    SEMICOLON       reduce using rule 327 (ThenStatement -> ScopeStatement .)
    CASE            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    DEFAULT         reduce using rule 327 (ThenStatement -> ScopeStatement .)
    LBRACE          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    IDENTIFIER      reduce using rule 327 (ThenStatement -> ScopeStatement .)
    IF              reduce using rule 327 (ThenStatement -> ScopeStatement .)
    WHILE           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    DO              reduce using rule 327 (ThenStatement -> ScopeStatement .)
    FOR             reduce using rule 327 (ThenStatement -> ScopeStatement .)
    SWITCH          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    FINAL           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    CONTINUE        reduce using rule 327 (ThenStatement -> ScopeStatement .)
    BREAK           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    RETURN          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    GOTO            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    WITH            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    MIXIN           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    IMPORT          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    STATIC          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    LPAREN          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    ALIAS           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    ENUM            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    EXTERN          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    AUTO            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    CONST           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    IMMUTABLE       reduce using rule 327 (ThenStatement -> ScopeStatement .)
    FOREACH         reduce using rule 327 (ThenStatement -> ScopeStatement .)
    FOREACH_REVERSE reduce using rule 327 (ThenStatement -> ScopeStatement .)
    CLASS           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    UNION           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    AMPERSAND       reduce using rule 327 (ThenStatement -> ScopeStatement .)
    PLUS_PLUS       reduce using rule 327 (ThenStatement -> ScopeStatement .)
    MINUS_MINUS     reduce using rule 327 (ThenStatement -> ScopeStatement .)
    TIMES           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    MINUS           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    PLUS            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    EXCLAMATION     reduce using rule 327 (ThenStatement -> ScopeStatement .)
    TILDE           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    CAST            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    DOT             reduce using rule 327 (ThenStatement -> ScopeStatement .)
    THIS            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    NULL            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    TRUE            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    FALSE           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    DOLLAR          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    INUMBER         reduce using rule 327 (ThenStatement -> ScopeStatement .)
    DNUMBER         reduce using rule 327 (ThenStatement -> ScopeStatement .)
    LIT_CHAR        reduce using rule 327 (ThenStatement -> ScopeStatement .)
    LIT_STR         reduce using rule 327 (ThenStatement -> ScopeStatement .)
    LBRACKET        reduce using rule 327 (ThenStatement -> ScopeStatement .)
    FUNCTION        reduce using rule 327 (ThenStatement -> ScopeStatement .)
    NEW             reduce using rule 327 (ThenStatement -> ScopeStatement .)
    BOOL            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    SHORT           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    USHORT          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    INT             reduce using rule 327 (ThenStatement -> ScopeStatement .)
    UINT            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    LONG            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    ULONG           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    CHAR            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    FLOAT           reduce using rule 327 (ThenStatement -> ScopeStatement .)
    VOID            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    TYPEOF          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    TYPEID          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    BODY            reduce using rule 327 (ThenStatement -> ScopeStatement .)
    RBRACE          reduce using rule 327 (ThenStatement -> ScopeStatement .)
    ELSE            reduce using rule 327 (ThenStatement -> ScopeStatement .)


state 781

    (318) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement . ifmark2
    (319) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement . ifmark3 ELSE ElseStatement ifmark4
    (322) ifmark2 -> . empty
    (321) ifmark3 -> . empty
    (477) empty -> .

    SEMICOLON       reduce using rule 477 (empty -> .)
    CASE            reduce using rule 477 (empty -> .)
    DEFAULT         reduce using rule 477 (empty -> .)
    LBRACE          reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    IF              reduce using rule 477 (empty -> .)
    WHILE           reduce using rule 477 (empty -> .)
    DO              reduce using rule 477 (empty -> .)
    FOR             reduce using rule 477 (empty -> .)
    SWITCH          reduce using rule 477 (empty -> .)
    FINAL           reduce using rule 477 (empty -> .)
    CONTINUE        reduce using rule 477 (empty -> .)
    BREAK           reduce using rule 477 (empty -> .)
    RETURN          reduce using rule 477 (empty -> .)
    GOTO            reduce using rule 477 (empty -> .)
    WITH            reduce using rule 477 (empty -> .)
    MIXIN           reduce using rule 477 (empty -> .)
    IMPORT          reduce using rule 477 (empty -> .)
    STATIC          reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    ALIAS           reduce using rule 477 (empty -> .)
    ENUM            reduce using rule 477 (empty -> .)
    EXTERN          reduce using rule 477 (empty -> .)
    AUTO            reduce using rule 477 (empty -> .)
    CONST           reduce using rule 477 (empty -> .)
    IMMUTABLE       reduce using rule 477 (empty -> .)
    FOREACH         reduce using rule 477 (empty -> .)
    FOREACH_REVERSE reduce using rule 477 (empty -> .)
    CLASS           reduce using rule 477 (empty -> .)
    UNION           reduce using rule 477 (empty -> .)
    AMPERSAND       reduce using rule 477 (empty -> .)
    PLUS_PLUS       reduce using rule 477 (empty -> .)
    MINUS_MINUS     reduce using rule 477 (empty -> .)
    TIMES           reduce using rule 477 (empty -> .)
    MINUS           reduce using rule 477 (empty -> .)
    PLUS            reduce using rule 477 (empty -> .)
    EXCLAMATION     reduce using rule 477 (empty -> .)
    TILDE           reduce using rule 477 (empty -> .)
    CAST            reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    THIS            reduce using rule 477 (empty -> .)
    NULL            reduce using rule 477 (empty -> .)
    TRUE            reduce using rule 477 (empty -> .)
    FALSE           reduce using rule 477 (empty -> .)
    DOLLAR          reduce using rule 477 (empty -> .)
    INUMBER         reduce using rule 477 (empty -> .)
    DNUMBER         reduce using rule 477 (empty -> .)
    LIT_CHAR        reduce using rule 477 (empty -> .)
    LIT_STR         reduce using rule 477 (empty -> .)
    LBRACKET        reduce using rule 477 (empty -> .)
    FUNCTION        reduce using rule 477 (empty -> .)
    NEW             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    TYPEID          reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)
    RBRACE          reduce using rule 477 (empty -> .)
    ELSE            reduce using rule 477 (empty -> .)

    ifmark3                        shift and go to state 791
    ifmark2                        shift and go to state 792
    empty                          shift and go to state 793

state 782

    (326) IfCondition -> BasicType Declarator ASSIGN Expression .

    RPAREN          reduce using rule 326 (IfCondition -> BasicType Declarator ASSIGN Expression .)


state 783

    (325) IfCondition -> AUTO IDENTIFIER ASSIGN Expression .

    RPAREN          reduce using rule 325 (IfCondition -> AUTO IDENTIFIER ASSIGN Expression .)


state 784

    (412) NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .

    POWER           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    DOT             reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    PLUS_PLUS       reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    MINUS_MINUS     reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    LPAREN          reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    TIMES           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    DIV             reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    MODULO          reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    PLUS            reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    MINUS           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    LEFT_SHIFT      reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    RIGHT_SHIFT     reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    IS_EQ           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    NOT_EQ          reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    LESS            reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    GREATER_EQ      reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    GREATER         reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    LESS_EQ         reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    AMPERSAND       reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    CARET           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    PIPE            reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    DOUBLE_AMPERSAND reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    QUESTION        reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    DOUBLE_PIPE     reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    ASSIGN          reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_PLUS         reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_MINUS        reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_TIMES        reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_DIV          reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_MODULO       reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_AND_BIT      reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_OR_BIT       reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_XOR_BIT      reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_LEFT         reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    EQ_RIGHT        reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    COMMA           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    RPAREN          reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    RBRACKET        reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    RANGE           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    SEMICOLON       reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    RBRACE          reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)
    COLON           reduce using rule 412 (NewAnonClassExpression -> NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody .)


state 785

    (364) CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .

    SEMICOLON       reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    CASE            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    DEFAULT         reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    LBRACE          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    IDENTIFIER      reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    IF              reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    WHILE           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    DO              reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    FOR             reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    SWITCH          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    FINAL           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    CONTINUE        reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    BREAK           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    RETURN          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    GOTO            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    WITH            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    MIXIN           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    IMPORT          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    STATIC          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    LPAREN          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    ALIAS           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    ENUM            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    EXTERN          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    AUTO            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    CONST           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    IMMUTABLE       reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    FOREACH         reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    FOREACH_REVERSE reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    CLASS           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    UNION           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    AMPERSAND       reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    PLUS_PLUS       reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    MINUS_MINUS     reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    TIMES           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    MINUS           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    PLUS            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    EXCLAMATION     reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    TILDE           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    CAST            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    DOT             reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    THIS            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    NULL            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    TRUE            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    FALSE           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    DOLLAR          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    INUMBER         reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    DNUMBER         reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    LIT_CHAR        reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    LIT_STR         reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    LBRACKET        reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    FUNCTION        reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    NEW             reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    BOOL            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    SHORT           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    USHORT          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    INT             reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    UINT            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    LONG            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    ULONG           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    CHAR            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    FLOAT           reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    VOID            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    TYPEOF          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    TYPEID          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    BODY            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    RBRACE          reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)
    ELSE            reduce using rule 364 (CaseRangeStatement -> CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList .)


state 786

    (331) ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt . RPAREN for_M2 ScopeStatement for_M3

    RPAREN          shift and go to state 794


state 787

    (342) Increment_opt -> empty .

    RPAREN          reduce using rule 342 (Increment_opt -> empty .)


state 788

    (340) Increment -> Expression .

    RPAREN          reduce using rule 340 (Increment -> Expression .)


state 789

    (341) Increment_opt -> Increment .

    RPAREN          reduce using rule 341 (Increment_opt -> Increment .)


state 790

    (358) RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .

    LBRACE          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    CASE            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    DEFAULT         reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    IDENTIFIER      reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    IF              reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    WHILE           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    DO              reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    FOR             reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    SWITCH          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    FINAL           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    CONTINUE        reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    BREAK           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    RETURN          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    GOTO            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    WITH            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    MIXIN           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    IMPORT          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    STATIC          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    LPAREN          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    ALIAS           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    ENUM            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    EXTERN          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    AUTO            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    CONST           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    IMMUTABLE       reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    FOREACH         reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    FOREACH_REVERSE reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    CLASS           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    UNION           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    AMPERSAND       reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    PLUS_PLUS       reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    MINUS_MINUS     reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    TIMES           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    MINUS           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    PLUS            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    EXCLAMATION     reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    TILDE           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    CAST            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    DOT             reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    THIS            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    NULL            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    TRUE            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    FALSE           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    DOLLAR          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    INUMBER         reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    DNUMBER         reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    LIT_CHAR        reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    LIT_STR         reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    LBRACKET        reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    FUNCTION        reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    NEW             reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    BOOL            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    SHORT           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    USHORT          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    INT             reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    UINT            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    LONG            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    ULONG           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    CHAR            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    FLOAT           reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    VOID            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    TYPEOF          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    TYPEID          reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)
    BODY            reduce using rule 358 (RangeForeach -> LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN .)


state 791

    (319) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 . ELSE ElseStatement ifmark4

    ELSE            shift and go to state 795


state 792

    (318) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .

    SEMICOLON       reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    CASE            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    DEFAULT         reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    LBRACE          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    IDENTIFIER      reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    IF              reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    WHILE           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    DO              reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    FOR             reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    SWITCH          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    FINAL           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    CONTINUE        reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    BREAK           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    RETURN          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    GOTO            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    WITH            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    MIXIN           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    IMPORT          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    STATIC          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    LPAREN          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    ALIAS           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    ENUM            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    EXTERN          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    AUTO            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    CONST           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    IMMUTABLE       reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    FOREACH         reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    FOREACH_REVERSE reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    CLASS           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    UNION           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    AMPERSAND       reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    PLUS_PLUS       reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    MINUS_MINUS     reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    TIMES           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    MINUS           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    PLUS            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    EXCLAMATION     reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    TILDE           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    CAST            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    DOT             reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    THIS            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    NULL            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    TRUE            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    FALSE           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    DOLLAR          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    INUMBER         reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    DNUMBER         reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    LIT_CHAR        reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    LIT_STR         reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    LBRACKET        reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    FUNCTION        reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    NEW             reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    BOOL            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    SHORT           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    USHORT          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    INT             reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    UINT            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    LONG            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    ULONG           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    CHAR            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    FLOAT           reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    VOID            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    TYPEOF          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    TYPEID          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    BODY            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    RBRACE          reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)
    ELSE            reduce using rule 318 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2 .)


state 793

    (322) ifmark2 -> empty .
    (321) ifmark3 -> empty .

  ! reduce/reduce conflict for ELSE resolved using rule 321 (ifmark3 -> empty .)
    SEMICOLON       reduce using rule 322 (ifmark2 -> empty .)
    CASE            reduce using rule 322 (ifmark2 -> empty .)
    DEFAULT         reduce using rule 322 (ifmark2 -> empty .)
    LBRACE          reduce using rule 322 (ifmark2 -> empty .)
    IDENTIFIER      reduce using rule 322 (ifmark2 -> empty .)
    IF              reduce using rule 322 (ifmark2 -> empty .)
    WHILE           reduce using rule 322 (ifmark2 -> empty .)
    DO              reduce using rule 322 (ifmark2 -> empty .)
    FOR             reduce using rule 322 (ifmark2 -> empty .)
    SWITCH          reduce using rule 322 (ifmark2 -> empty .)
    FINAL           reduce using rule 322 (ifmark2 -> empty .)
    CONTINUE        reduce using rule 322 (ifmark2 -> empty .)
    BREAK           reduce using rule 322 (ifmark2 -> empty .)
    RETURN          reduce using rule 322 (ifmark2 -> empty .)
    GOTO            reduce using rule 322 (ifmark2 -> empty .)
    WITH            reduce using rule 322 (ifmark2 -> empty .)
    MIXIN           reduce using rule 322 (ifmark2 -> empty .)
    IMPORT          reduce using rule 322 (ifmark2 -> empty .)
    STATIC          reduce using rule 322 (ifmark2 -> empty .)
    LPAREN          reduce using rule 322 (ifmark2 -> empty .)
    ALIAS           reduce using rule 322 (ifmark2 -> empty .)
    ENUM            reduce using rule 322 (ifmark2 -> empty .)
    EXTERN          reduce using rule 322 (ifmark2 -> empty .)
    AUTO            reduce using rule 322 (ifmark2 -> empty .)
    CONST           reduce using rule 322 (ifmark2 -> empty .)
    IMMUTABLE       reduce using rule 322 (ifmark2 -> empty .)
    FOREACH         reduce using rule 322 (ifmark2 -> empty .)
    FOREACH_REVERSE reduce using rule 322 (ifmark2 -> empty .)
    CLASS           reduce using rule 322 (ifmark2 -> empty .)
    UNION           reduce using rule 322 (ifmark2 -> empty .)
    AMPERSAND       reduce using rule 322 (ifmark2 -> empty .)
    PLUS_PLUS       reduce using rule 322 (ifmark2 -> empty .)
    MINUS_MINUS     reduce using rule 322 (ifmark2 -> empty .)
    TIMES           reduce using rule 322 (ifmark2 -> empty .)
    MINUS           reduce using rule 322 (ifmark2 -> empty .)
    PLUS            reduce using rule 322 (ifmark2 -> empty .)
    EXCLAMATION     reduce using rule 322 (ifmark2 -> empty .)
    TILDE           reduce using rule 322 (ifmark2 -> empty .)
    CAST            reduce using rule 322 (ifmark2 -> empty .)
    DOT             reduce using rule 322 (ifmark2 -> empty .)
    THIS            reduce using rule 322 (ifmark2 -> empty .)
    NULL            reduce using rule 322 (ifmark2 -> empty .)
    TRUE            reduce using rule 322 (ifmark2 -> empty .)
    FALSE           reduce using rule 322 (ifmark2 -> empty .)
    DOLLAR          reduce using rule 322 (ifmark2 -> empty .)
    INUMBER         reduce using rule 322 (ifmark2 -> empty .)
    DNUMBER         reduce using rule 322 (ifmark2 -> empty .)
    LIT_CHAR        reduce using rule 322 (ifmark2 -> empty .)
    LIT_STR         reduce using rule 322 (ifmark2 -> empty .)
    LBRACKET        reduce using rule 322 (ifmark2 -> empty .)
    FUNCTION        reduce using rule 322 (ifmark2 -> empty .)
    NEW             reduce using rule 322 (ifmark2 -> empty .)
    BOOL            reduce using rule 322 (ifmark2 -> empty .)
    SHORT           reduce using rule 322 (ifmark2 -> empty .)
    USHORT          reduce using rule 322 (ifmark2 -> empty .)
    INT             reduce using rule 322 (ifmark2 -> empty .)
    UINT            reduce using rule 322 (ifmark2 -> empty .)
    LONG            reduce using rule 322 (ifmark2 -> empty .)
    ULONG           reduce using rule 322 (ifmark2 -> empty .)
    CHAR            reduce using rule 322 (ifmark2 -> empty .)
    FLOAT           reduce using rule 322 (ifmark2 -> empty .)
    VOID            reduce using rule 322 (ifmark2 -> empty .)
    TYPEOF          reduce using rule 322 (ifmark2 -> empty .)
    TYPEID          reduce using rule 322 (ifmark2 -> empty .)
    BODY            reduce using rule 322 (ifmark2 -> empty .)
    RBRACE          reduce using rule 322 (ifmark2 -> empty .)
    ELSE            reduce using rule 321 (ifmark3 -> empty .)

  ! ELSE            [ reduce using rule 322 (ifmark2 -> empty .) ]


state 794

    (331) ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN . for_M2 ScopeStatement for_M3
    (333) for_M2 -> .

    LBRACE          reduce using rule 333 (for_M2 -> .)
    CASE            reduce using rule 333 (for_M2 -> .)
    DEFAULT         reduce using rule 333 (for_M2 -> .)
    IDENTIFIER      reduce using rule 333 (for_M2 -> .)
    IF              reduce using rule 333 (for_M2 -> .)
    WHILE           reduce using rule 333 (for_M2 -> .)
    DO              reduce using rule 333 (for_M2 -> .)
    FOR             reduce using rule 333 (for_M2 -> .)
    SWITCH          reduce using rule 333 (for_M2 -> .)
    FINAL           reduce using rule 333 (for_M2 -> .)
    CONTINUE        reduce using rule 333 (for_M2 -> .)
    BREAK           reduce using rule 333 (for_M2 -> .)
    RETURN          reduce using rule 333 (for_M2 -> .)
    GOTO            reduce using rule 333 (for_M2 -> .)
    WITH            reduce using rule 333 (for_M2 -> .)
    MIXIN           reduce using rule 333 (for_M2 -> .)
    IMPORT          reduce using rule 333 (for_M2 -> .)
    STATIC          reduce using rule 333 (for_M2 -> .)
    LPAREN          reduce using rule 333 (for_M2 -> .)
    ALIAS           reduce using rule 333 (for_M2 -> .)
    ENUM            reduce using rule 333 (for_M2 -> .)
    EXTERN          reduce using rule 333 (for_M2 -> .)
    AUTO            reduce using rule 333 (for_M2 -> .)
    CONST           reduce using rule 333 (for_M2 -> .)
    IMMUTABLE       reduce using rule 333 (for_M2 -> .)
    FOREACH         reduce using rule 333 (for_M2 -> .)
    FOREACH_REVERSE reduce using rule 333 (for_M2 -> .)
    CLASS           reduce using rule 333 (for_M2 -> .)
    UNION           reduce using rule 333 (for_M2 -> .)
    AMPERSAND       reduce using rule 333 (for_M2 -> .)
    PLUS_PLUS       reduce using rule 333 (for_M2 -> .)
    MINUS_MINUS     reduce using rule 333 (for_M2 -> .)
    TIMES           reduce using rule 333 (for_M2 -> .)
    MINUS           reduce using rule 333 (for_M2 -> .)
    PLUS            reduce using rule 333 (for_M2 -> .)
    EXCLAMATION     reduce using rule 333 (for_M2 -> .)
    TILDE           reduce using rule 333 (for_M2 -> .)
    CAST            reduce using rule 333 (for_M2 -> .)
    DOT             reduce using rule 333 (for_M2 -> .)
    THIS            reduce using rule 333 (for_M2 -> .)
    NULL            reduce using rule 333 (for_M2 -> .)
    TRUE            reduce using rule 333 (for_M2 -> .)
    FALSE           reduce using rule 333 (for_M2 -> .)
    DOLLAR          reduce using rule 333 (for_M2 -> .)
    INUMBER         reduce using rule 333 (for_M2 -> .)
    DNUMBER         reduce using rule 333 (for_M2 -> .)
    LIT_CHAR        reduce using rule 333 (for_M2 -> .)
    LIT_STR         reduce using rule 333 (for_M2 -> .)
    LBRACKET        reduce using rule 333 (for_M2 -> .)
    FUNCTION        reduce using rule 333 (for_M2 -> .)
    NEW             reduce using rule 333 (for_M2 -> .)
    BOOL            reduce using rule 333 (for_M2 -> .)
    SHORT           reduce using rule 333 (for_M2 -> .)
    USHORT          reduce using rule 333 (for_M2 -> .)
    INT             reduce using rule 333 (for_M2 -> .)
    UINT            reduce using rule 333 (for_M2 -> .)
    LONG            reduce using rule 333 (for_M2 -> .)
    ULONG           reduce using rule 333 (for_M2 -> .)
    CHAR            reduce using rule 333 (for_M2 -> .)
    FLOAT           reduce using rule 333 (for_M2 -> .)
    VOID            reduce using rule 333 (for_M2 -> .)
    TYPEOF          reduce using rule 333 (for_M2 -> .)
    TYPEID          reduce using rule 333 (for_M2 -> .)
    BODY            reduce using rule 333 (for_M2 -> .)

    for_M2                         shift and go to state 796

state 795

    (319) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE . ElseStatement ifmark4
    (328) ElseStatement -> . ScopeStatement
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    ElseStatement                  shift and go to state 797
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 798
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 796

    (331) ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 . ScopeStatement for_M3
    (305) ScopeStatement -> . NonEmptyStatement
    (306) ScopeStatement -> . BlockStatement
    (283) NonEmptyStatement -> . NonEmptyStatementNoCaseNoDefault
    (284) NonEmptyStatement -> . CaseStatement
    (285) NonEmptyStatement -> . CaseRangeStatement
    (286) NonEmptyStatement -> . DefaultStatement
    (311) BlockStatement -> . LBRACE RBRACE
    (312) BlockStatement -> . LBRACE StatementList RBRACE
    (287) NonEmptyStatementNoCaseNoDefault -> . LabeledStatement
    (288) NonEmptyStatementNoCaseNoDefault -> . ExpressionStatement
    (289) NonEmptyStatementNoCaseNoDefault -> . DeclarationStatement
    (290) NonEmptyStatementNoCaseNoDefault -> . IfStatement
    (291) NonEmptyStatementNoCaseNoDefault -> . WhileStatement
    (292) NonEmptyStatementNoCaseNoDefault -> . DoStatement
    (293) NonEmptyStatementNoCaseNoDefault -> . ForStatement
    (294) NonEmptyStatementNoCaseNoDefault -> . ForeachStatement
    (295) NonEmptyStatementNoCaseNoDefault -> . SwitchStatement
    (296) NonEmptyStatementNoCaseNoDefault -> . FinalSwitchStatement
    (297) NonEmptyStatementNoCaseNoDefault -> . ContinueStatement
    (298) NonEmptyStatementNoCaseNoDefault -> . BreakStatement
    (299) NonEmptyStatementNoCaseNoDefault -> . ReturnStatement
    (300) NonEmptyStatementNoCaseNoDefault -> . GotoStatement
    (301) NonEmptyStatementNoCaseNoDefault -> . WithStatement
    (302) NonEmptyStatementNoCaseNoDefault -> . MixinStatement
    (303) NonEmptyStatementNoCaseNoDefault -> . ForeachRangeStatement
    (304) NonEmptyStatementNoCaseNoDefault -> . ImportDeclaration
    (363) CaseStatement -> . CASE ArgumentList COLON ScopeStatementList
    (364) CaseRangeStatement -> . CASE FirstExp COLON RANGE LastExp COLON ScopeStatementList
    (367) DefaultStatement -> . DEFAULT COLON ScopeStatementList
    (308) LabeledStatement -> . IDENTIFIER COLON
    (309) LabeledStatement -> . IDENTIFIER COLON NoScopeStatement
    (310) LabeledStatement -> . IDENTIFIER COLON Statement
    (315) ExpressionStatement -> . Expression SEMICOLON
    (316) DeclarationStatement -> . Declaration
    (317) DeclarationStatement -> . StorageClasses Declaration
    (318) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark2
    (319) IfStatement -> . IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4
    (329) WhileStatement -> . WHILE LPAREN Expression RPAREN ScopeStatement
    (330) DoStatement -> . DO ScopeStatement WHILE LPAREN Expression RPAREN
    (331) ForStatement -> . FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3
    (344) ForeachStatement -> . AggregateForeach NoScopeNonEmptyStatement
    (362) SwitchStatement -> . SWITCH LPAREN Expression RPAREN ScopeStatement
    (374) FinalSwitchStatement -> . FINAL SWITCH LPAREN Expression RPAREN ScopeStatement
    (379) ContinueStatement -> . CONTINUE IDENTIFIER_opt SEMICOLON
    (380) BreakStatement -> . BREAK IDENTIFIER_opt SEMICOLON
    (381) ReturnStatement -> . RETURN Expression_opt SEMICOLON
    (382) GotoStatement -> . GOTO IDENTIFIER SEMICOLON
    (383) GotoStatement -> . GOTO DEFAULT SEMICOLON
    (384) GotoStatement -> . GOTO CASE SEMICOLON
    (385) GotoStatement -> . GOTO CASE Expression SEMICOLON
    (386) WithStatement -> . WITH LPAREN Expression RPAREN ScopeStatement
    (387) WithStatement -> . WITH LPAREN Symbol RPAREN ScopeStatement
    (388) MixinStatement -> . MIXIN LPAREN AssignExpression RPAREN SEMICOLON
    (361) ForeachRangeStatement -> . RangeForeach ScopeStatement
    (20) ImportDeclaration -> . IMPORT ImportList SEMICOLON
    (21) ImportDeclaration -> . STATIC IMPORT ImportList SEMICOLON
    (151) Expression -> . CommaExpression
    (34) Declaration -> . FuncDeclaration
    (35) Declaration -> . VarDeclarations
    (36) Declaration -> . AliasDeclaration
    (37) Declaration -> . AggregateDeclaration
    (38) Declaration -> . EnumDeclaration
    (39) Declaration -> . ImportDeclaration
    (105) StorageClasses -> . StorageClass
    (106) StorageClasses -> . StorageClass StorageClasses
    (343) AggregateForeach -> . Foreach LPAREN ForeachTypeList SEMICOLON ForeachAggregate RPAREN
    (358) RangeForeach -> . LPAREN ForeachType SEMICOLON LwrExpression RANGE UprExpression RPAREN
    (152) CommaExpression -> . AssignExpression
    (153) CommaExpression -> . AssignExpression COMMA CommaExpression
    (439) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator FunctionBody
    (440) FuncDeclaration -> . StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (441) FuncDeclaration -> . AutoFuncDeclaration
    (40) VarDeclarations -> . StorageClasses_opt BasicType Declarators SEMICOLON
    (133) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType Declarators SEMICOLON
    (134) AliasDeclaration -> . ALIAS StorageClasses_opt BasicType FuncDeclarator SEMICOLON
    (135) AliasDeclaration -> . ALIAS AliasDeclarationX SEMICOLON
    (389) AggregateDeclaration -> . ClassDeclaration
    (390) AggregateDeclaration -> . UnionDeclaration
    (420) EnumDeclaration -> . ENUM IDENTIFIER EnumBody
    (421) EnumDeclaration -> . ENUM IDENTIFIER COLON EnumBaseType EnumBody
    (422) EnumDeclaration -> . AnonymousEnumDeclaration
    (107) StorageClass -> . ENUM
    (108) StorageClass -> . STATIC
    (109) StorageClass -> . EXTERN
    (110) StorageClass -> . FINAL
    (111) StorageClass -> . AUTO
    (112) StorageClass -> . CONST
    (113) StorageClass -> . IMMUTABLE
    (345) Foreach -> . FOREACH
    (346) Foreach -> . FOREACH_REVERSE
    (154) AssignExpression -> . ConditionalExpression
    (155) AssignExpression -> . ConditionalExpression ASSIGN AssignExpression
    (156) AssignExpression -> . ConditionalExpression EQ_PLUS AssignExpression
    (157) AssignExpression -> . ConditionalExpression EQ_MINUS AssignExpression
    (158) AssignExpression -> . ConditionalExpression EQ_TIMES AssignExpression
    (159) AssignExpression -> . ConditionalExpression EQ_DIV AssignExpression
    (160) AssignExpression -> . ConditionalExpression EQ_MODULO AssignExpression
    (161) AssignExpression -> . ConditionalExpression EQ_AND_BIT AssignExpression
    (162) AssignExpression -> . ConditionalExpression EQ_OR_BIT AssignExpression
    (163) AssignExpression -> . ConditionalExpression EQ_XOR_BIT AssignExpression
    (164) AssignExpression -> . ConditionalExpression EQ_LEFT AssignExpression
    (165) AssignExpression -> . ConditionalExpression EQ_RIGHT AssignExpression
    (131) StorageClasses_opt -> . StorageClasses
    (132) StorageClasses_opt -> . empty
    (442) AutoFuncDeclaration -> . StorageClasses IDENTIFIER FuncDeclaratorSuffix FunctionBody
    (396) ClassDeclaration -> . CLASS IDENTIFIER SEMICOLON
    (397) ClassDeclaration -> . CLASS IDENTIFIER BaseClassList_opt AggregateBody
    (391) UnionDeclaration -> . UNION IDENTIFIER SEMICOLON
    (392) UnionDeclaration -> . UNION IDENTIFIER AggregateBody
    (393) UnionDeclaration -> . AnonUnionDeclaration
    (431) AnonymousEnumDeclaration -> . ENUM COLON EnumBaseType LBRACE EnumMembers RBRACE
    (432) AnonymousEnumDeclaration -> . ENUM LBRACE EnumMembers RBRACE
    (433) AnonymousEnumDeclaration -> . ENUM LBRACE AnonymousEnumMembers RBRACE
    (166) ConditionalExpression -> . OrOrExpression
    (167) ConditionalExpression -> . OrOrExpression QUESTION Expression COLON ConditionalExpression
    (477) empty -> .
    (394) AnonUnionDeclaration -> . UNION AggregateBody
    (168) OrOrExpression -> . AndAndExpression
    (169) OrOrExpression -> . OrOrExpression DOUBLE_PIPE AndAndExpression
    (170) AndAndExpression -> . OrExpression
    (171) AndAndExpression -> . AndAndExpression DOUBLE_AMPERSAND OrExpression
    (172) OrExpression -> . XorExpression
    (173) OrExpression -> . OrExpression PIPE XorExpression
    (174) XorExpression -> . AndExpression
    (175) XorExpression -> . XorExpression CARET AndExpression
    (176) AndExpression -> . CmpExpression
    (177) AndExpression -> . AndExpression AMPERSAND CmpExpression
    (178) CmpExpression -> . ShiftExpression
    (179) CmpExpression -> . EqualExpression
    (180) CmpExpression -> . RelExpression
    (187) ShiftExpression -> . AddExpression
    (188) ShiftExpression -> . ShiftExpression LEFT_SHIFT AddExpression
    (189) ShiftExpression -> . ShiftExpression RIGHT_SHIFT AddExpression
    (181) EqualExpression -> . ShiftExpression IS_EQ ShiftExpression
    (182) EqualExpression -> . ShiftExpression NOT_EQ ShiftExpression
    (183) RelExpression -> . ShiftExpression LESS ShiftExpression
    (184) RelExpression -> . ShiftExpression GREATER_EQ ShiftExpression
    (185) RelExpression -> . ShiftExpression GREATER ShiftExpression
    (186) RelExpression -> . ShiftExpression LESS_EQ ShiftExpression
    (190) AddExpression -> . MulExpression
    (191) AddExpression -> . AddExpression PLUS MulExpression
    (192) AddExpression -> . AddExpression MINUS MulExpression
    (193) MulExpression -> . UnaryExpression
    (194) MulExpression -> . MulExpression TIMES UnaryExpression
    (195) MulExpression -> . MulExpression DIV UnaryExpression
    (196) MulExpression -> . MulExpression MODULO UnaryExpression
    (197) UnaryExpression -> . AMPERSAND UnaryExpression
    (198) UnaryExpression -> . PLUS_PLUS UnaryExpression
    (199) UnaryExpression -> . MINUS_MINUS UnaryExpression
    (200) UnaryExpression -> . TIMES UnaryExpression
    (201) UnaryExpression -> . MINUS UnaryExpression
    (202) UnaryExpression -> . PLUS UnaryExpression
    (203) UnaryExpression -> . EXCLAMATION UnaryExpression
    (204) UnaryExpression -> . ComplementExpression
    (205) UnaryExpression -> . LPAREN Type RPAREN DOT IDENTIFIER
    (206) UnaryExpression -> . CastExpression
    (207) UnaryExpression -> . PowExpression
    (208) ComplementExpression -> . TILDE UnaryExpression
    (222) CastExpression -> . CAST LPAREN Type RPAREN UnaryExpression
    (223) CastExpression -> . CAST LPAREN RPAREN UnaryExpression
    (224) PowExpression -> . PostfixExpression
    (225) PowExpression -> . PostfixExpression POWER UnaryExpression
    (226) PostfixExpression -> . PrimaryExpression
    (227) PostfixExpression -> . PostfixExpression DOT IDENTIFIER
    (228) PostfixExpression -> . PostfixExpression DOT NewExpression
    (229) PostfixExpression -> . PostfixExpression PLUS_PLUS
    (230) PostfixExpression -> . PostfixExpression MINUS_MINUS
    (231) PostfixExpression -> . PostfixExpression LPAREN ArgumentList RPAREN
    (232) PostfixExpression -> . BasicType LPAREN ArgumentList_opt RPAREN
    (233) PrimaryExpression -> . IDENTIFIER
    (234) PrimaryExpression -> . IdentifierList
    (235) PrimaryExpression -> . DOT IDENTIFIER
    (236) PrimaryExpression -> . THIS
    (237) PrimaryExpression -> . NULL
    (238) PrimaryExpression -> . TRUE
    (239) PrimaryExpression -> . FALSE
    (240) PrimaryExpression -> . DOLLAR
    (241) PrimaryExpression -> . INUMBER
    (242) PrimaryExpression -> . DNUMBER
    (243) PrimaryExpression -> . LIT_CHAR
    (244) PrimaryExpression -> . LIT_STRPlus
    (245) PrimaryExpression -> . ArrayLiteral
    (246) PrimaryExpression -> . FunctionLiteral
    (247) PrimaryExpression -> . MixinExpression
    (248) PrimaryExpression -> . ImportExpression
    (249) PrimaryExpression -> . NewExpressionWithArgs
    (250) PrimaryExpression -> . BasicTypeX DOT IDENTIFIER
    (251) PrimaryExpression -> . BasicTypeX LPAREN ArgumentList_opt RPAREN
    (252) PrimaryExpression -> . Typeof
    (253) PrimaryExpression -> . LPAREN Expression RPAREN
    (254) PrimaryExpression -> . TypeidExpression
    (78) BasicType -> . BasicTypeX
    (79) BasicType -> . DOT IdentifierList
    (80) BasicType -> . IdentifierList
    (81) BasicType -> . Typeof
    (82) BasicType -> . Typeof DOT IdentifierList
    (102) IdentifierList -> . IDENTIFIER
    (103) IdentifierList -> . IDENTIFIER DOT IdentifierList
    (104) IdentifierList -> . IDENTIFIER LBRACKET AssignExpression RBRACKET DOT IdentifierList
    (267) LIT_STRPlus -> . LIT_STR LIT_STRPlus
    (268) LIT_STRPlus -> . LIT_STR
    (255) ArrayLiteral -> . LBRACKET ArgumentList_opt RBRACKET
    (256) ArrayLiteral -> . IDENTIFIER LBRACKET INUMBER RBRACKET
    (257) ArrayLiteral -> . IDENTIFIER LBRACKET AssignExpression RBRACKET
    (258) FunctionLiteral -> . FUNCTION Type_opt ParameterAttributes_opt FunctionLiteralBody
    (259) FunctionLiteral -> . ParameterMemberAttributes FunctionLiteralBody
    (260) FunctionLiteral -> . FunctionLiteralBody
    (269) MixinExpression -> . MIXIN LPAREN AssignExpression RPAREN
    (270) ImportExpression -> . IMPORT LPAREN AssignExpression RPAREN
    (211) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LBRACKET AssignExpression RBRACKET
    (212) NewExpressionWithArgs -> . NEW AllocatorArguments_opt Type LPAREN ArgumentList_opt RPAREN
    (213) NewExpressionWithArgs -> . NewAnonClassExpression
    (83) BasicTypeX -> . BOOL
    (84) BasicTypeX -> . SHORT
    (85) BasicTypeX -> . USHORT
    (86) BasicTypeX -> . INT
    (87) BasicTypeX -> . UINT
    (88) BasicTypeX -> . LONG
    (89) BasicTypeX -> . ULONG
    (90) BasicTypeX -> . CHAR
    (91) BasicTypeX -> . FLOAT
    (92) BasicTypeX -> . VOID
    (140) Typeof -> . TYPEOF LPAREN Expression RPAREN
    (141) Typeof -> . TYPEOF LPAREN RETURN RPAREN
    (271) TypeidExpression -> . TYPEID LPAREN Type RPAREN
    (272) TypeidExpression -> . TYPEID LPAREN Expression RPAREN
    (264) ParameterMemberAttributes -> . Parameters MemberFunctionAttributes_opt
    (265) FunctionLiteralBody -> . BlockStatement
    (266) FunctionLiteralBody -> . BodyStatement
    (412) NewAnonClassExpression -> . NEW AllocatorArguments_opt CLASS ClassArguments_opt SuperClass_opt Interfaces_opt AggregateBody
    (445) Parameters -> . LPAREN ParameterList_opt RPAREN
    (472) BodyStatement -> . BODY BlockStatement

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACE          shift and go to state 145
    CASE            shift and go to state 313
    DEFAULT         shift and go to state 320
    IDENTIFIER      shift and go to state 331
    IF              shift and go to state 348
    WHILE           shift and go to state 321
    DO              shift and go to state 340
    FOR             shift and go to state 314
    SWITCH          shift and go to state 328
    FINAL           shift and go to state 309
    CONTINUE        shift and go to state 317
    BREAK           shift and go to state 339
    RETURN          shift and go to state 307
    GOTO            shift and go to state 302
    WITH            shift and go to state 298
    MIXIN           shift and go to state 318
    IMPORT          shift and go to state 301
    STATIC          shift and go to state 5
    LPAREN          shift and go to state 347
    ALIAS           shift and go to state 19
    ENUM            shift and go to state 303
    EXTERN          shift and go to state 7
    AUTO            shift and go to state 2
    CONST           shift and go to state 3
    IMMUTABLE       shift and go to state 21
    FOREACH         shift and go to state 305
    FOREACH_REVERSE shift and go to state 310
    CLASS           shift and go to state 13
    UNION           shift and go to state 17
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    AMPERSAND       shift and go to state 195
    PLUS_PLUS       shift and go to state 199
    MINUS_MINUS     shift and go to state 192
    TIMES           shift and go to state 227
    MINUS           shift and go to state 172
    PLUS            shift and go to state 174
    EXCLAMATION     shift and go to state 200
    TILDE           shift and go to state 209
    CAST            shift and go to state 208
    DOT             shift and go to state 245
    THIS            shift and go to state 182
    NULL            shift and go to state 221
    TRUE            shift and go to state 171
    FALSE           shift and go to state 181
    DOLLAR          shift and go to state 226
    INUMBER         shift and go to state 198
    DNUMBER         shift and go to state 178
    LIT_CHAR        shift and go to state 206
    LIT_STR         shift and go to state 231
    LBRACKET        shift and go to state 169
    FUNCTION        shift and go to state 193
    NEW             shift and go to state 202
    TYPEID          shift and go to state 197
    BODY            shift and go to state 146

  ! DOT             [ reduce using rule 477 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 477 (empty -> .) ]
  ! BOOL            [ shift and go to state 46 ]
  ! SHORT           [ shift and go to state 31 ]
  ! USHORT          [ shift and go to state 40 ]
  ! INT             [ shift and go to state 44 ]
  ! UINT            [ shift and go to state 41 ]
  ! LONG            [ shift and go to state 37 ]
  ! ULONG           [ shift and go to state 35 ]
  ! CHAR            [ shift and go to state 43 ]
  ! FLOAT           [ shift and go to state 45 ]
  ! VOID            [ shift and go to state 32 ]
  ! TYPEOF          [ shift and go to state 47 ]

    ExpressionStatement            shift and go to state 296
    AggregateDeclaration           shift and go to state 4
    AndExpression                  shift and go to state 170
    FinalSwitchStatement           shift and go to state 299
    OrOrExpression                 shift and go to state 173
    StorageClasses_opt             shift and go to state 9
    BlockStatement                 shift and go to state 497
    GotoStatement                  shift and go to state 312
    RelExpression                  shift and go to state 177
    EqualExpression                shift and go to state 179
    AnonUnionDeclaration           shift and go to state 22
    UnionDeclaration               shift and go to state 25
    ReturnStatement                shift and go to state 306
    NewAnonClassExpression         shift and go to state 185
    Typeof                         shift and go to state 244
    Parameters                     shift and go to state 186
    ImportExpression               shift and go to state 188
    Foreach                        shift and go to state 308
    IdentifierList                 shift and go to state 243
    PowExpression                  shift and go to state 190
    BreakStatement                 shift and go to state 311
    ScopeStatement                 shift and go to state 799
    OrExpression                   shift and go to state 194
    ForeachStatement               shift and go to state 315
    EnumDeclaration                shift and go to state 24
    PostfixExpression              shift and go to state 201
    MixinStatement                 shift and go to state 316
    RangeForeach                   shift and go to state 319
    StorageClass                   shift and go to state 28
    ForeachRangeStatement          shift and go to state 322
    PrimaryExpression              shift and go to state 204
    ForStatement                   shift and go to state 323
    ComplementExpression           shift and go to state 205
    ContinueStatement              shift and go to state 325
    ImportDeclaration              shift and go to state 326
    BasicType                      shift and go to state 246
    SwitchStatement                shift and go to state 327
    Declaration                    shift and go to state 329
    DefaultStatement               shift and go to state 330
    LIT_STRPlus                    shift and go to state 210
    CaseStatement                  shift and go to state 332
    NonEmptyStatementNoCaseNoDefault shift and go to state 333
    DoStatement                    shift and go to state 334
    MixinExpression                shift and go to state 211
    StorageClasses                 shift and go to state 335
    FunctionLiteral                shift and go to state 212
    Expression                     shift and go to state 336
    BodyStatement                  shift and go to state 213
    ConditionalExpression          shift and go to state 180
    UnaryExpression                shift and go to state 215
    NewExpressionWithArgs          shift and go to state 216
    MulExpression                  shift and go to state 184
    WhileStatement                 shift and go to state 337
    ParameterMemberAttributes      shift and go to state 187
    NonEmptyStatement              shift and go to state 499
    AndAndExpression               shift and go to state 217
    ClassDeclaration               shift and go to state 26
    empty                          shift and go to state 62
    CommaExpression                shift and go to state 254
    CastExpression                 shift and go to state 218
    AggregateForeach               shift and go to state 341
    LabeledStatement               shift and go to state 342
    DeclarationStatement           shift and go to state 343
    FuncDeclaration                shift and go to state 6
    FunctionLiteralBody            shift and go to state 219
    TypeidExpression               shift and go to state 220
    BasicTypeX                     shift and go to state 248
    AliasDeclaration               shift and go to state 12
    VarDeclarations                shift and go to state 23
    ShiftExpression                shift and go to state 183
    AutoFuncDeclaration            shift and go to state 16
    XorExpression                  shift and go to state 223
    ArrayLiteral                   shift and go to state 225
    CaseRangeStatement             shift and go to state 346
    AddExpression                  shift and go to state 229
    AnonymousEnumDeclaration       shift and go to state 20
    WithStatement                  shift and go to state 349
    CmpExpression                  shift and go to state 230
    AssignExpression               shift and go to state 255
    IfStatement                    shift and go to state 350

state 797

    (319) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement . ifmark4
    (320) ifmark4 -> . empty
    (477) empty -> .

    SEMICOLON       reduce using rule 477 (empty -> .)
    CASE            reduce using rule 477 (empty -> .)
    DEFAULT         reduce using rule 477 (empty -> .)
    LBRACE          reduce using rule 477 (empty -> .)
    IDENTIFIER      reduce using rule 477 (empty -> .)
    IF              reduce using rule 477 (empty -> .)
    WHILE           reduce using rule 477 (empty -> .)
    DO              reduce using rule 477 (empty -> .)
    FOR             reduce using rule 477 (empty -> .)
    SWITCH          reduce using rule 477 (empty -> .)
    FINAL           reduce using rule 477 (empty -> .)
    CONTINUE        reduce using rule 477 (empty -> .)
    BREAK           reduce using rule 477 (empty -> .)
    RETURN          reduce using rule 477 (empty -> .)
    GOTO            reduce using rule 477 (empty -> .)
    WITH            reduce using rule 477 (empty -> .)
    MIXIN           reduce using rule 477 (empty -> .)
    IMPORT          reduce using rule 477 (empty -> .)
    STATIC          reduce using rule 477 (empty -> .)
    LPAREN          reduce using rule 477 (empty -> .)
    ALIAS           reduce using rule 477 (empty -> .)
    ENUM            reduce using rule 477 (empty -> .)
    EXTERN          reduce using rule 477 (empty -> .)
    AUTO            reduce using rule 477 (empty -> .)
    CONST           reduce using rule 477 (empty -> .)
    IMMUTABLE       reduce using rule 477 (empty -> .)
    FOREACH         reduce using rule 477 (empty -> .)
    FOREACH_REVERSE reduce using rule 477 (empty -> .)
    CLASS           reduce using rule 477 (empty -> .)
    UNION           reduce using rule 477 (empty -> .)
    AMPERSAND       reduce using rule 477 (empty -> .)
    PLUS_PLUS       reduce using rule 477 (empty -> .)
    MINUS_MINUS     reduce using rule 477 (empty -> .)
    TIMES           reduce using rule 477 (empty -> .)
    MINUS           reduce using rule 477 (empty -> .)
    PLUS            reduce using rule 477 (empty -> .)
    EXCLAMATION     reduce using rule 477 (empty -> .)
    TILDE           reduce using rule 477 (empty -> .)
    CAST            reduce using rule 477 (empty -> .)
    DOT             reduce using rule 477 (empty -> .)
    THIS            reduce using rule 477 (empty -> .)
    NULL            reduce using rule 477 (empty -> .)
    TRUE            reduce using rule 477 (empty -> .)
    FALSE           reduce using rule 477 (empty -> .)
    DOLLAR          reduce using rule 477 (empty -> .)
    INUMBER         reduce using rule 477 (empty -> .)
    DNUMBER         reduce using rule 477 (empty -> .)
    LIT_CHAR        reduce using rule 477 (empty -> .)
    LIT_STR         reduce using rule 477 (empty -> .)
    LBRACKET        reduce using rule 477 (empty -> .)
    FUNCTION        reduce using rule 477 (empty -> .)
    NEW             reduce using rule 477 (empty -> .)
    BOOL            reduce using rule 477 (empty -> .)
    SHORT           reduce using rule 477 (empty -> .)
    USHORT          reduce using rule 477 (empty -> .)
    INT             reduce using rule 477 (empty -> .)
    UINT            reduce using rule 477 (empty -> .)
    LONG            reduce using rule 477 (empty -> .)
    ULONG           reduce using rule 477 (empty -> .)
    CHAR            reduce using rule 477 (empty -> .)
    FLOAT           reduce using rule 477 (empty -> .)
    VOID            reduce using rule 477 (empty -> .)
    TYPEOF          reduce using rule 477 (empty -> .)
    TYPEID          reduce using rule 477 (empty -> .)
    BODY            reduce using rule 477 (empty -> .)
    RBRACE          reduce using rule 477 (empty -> .)
    ELSE            reduce using rule 477 (empty -> .)

    ifmark4                        shift and go to state 800
    empty                          shift and go to state 801

state 798

    (328) ElseStatement -> ScopeStatement .

    SEMICOLON       reduce using rule 328 (ElseStatement -> ScopeStatement .)
    CASE            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    DEFAULT         reduce using rule 328 (ElseStatement -> ScopeStatement .)
    LBRACE          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    IDENTIFIER      reduce using rule 328 (ElseStatement -> ScopeStatement .)
    IF              reduce using rule 328 (ElseStatement -> ScopeStatement .)
    WHILE           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    DO              reduce using rule 328 (ElseStatement -> ScopeStatement .)
    FOR             reduce using rule 328 (ElseStatement -> ScopeStatement .)
    SWITCH          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    FINAL           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    CONTINUE        reduce using rule 328 (ElseStatement -> ScopeStatement .)
    BREAK           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    RETURN          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    GOTO            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    WITH            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    MIXIN           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    IMPORT          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    STATIC          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    LPAREN          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    ALIAS           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    ENUM            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    EXTERN          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    AUTO            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    CONST           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    IMMUTABLE       reduce using rule 328 (ElseStatement -> ScopeStatement .)
    FOREACH         reduce using rule 328 (ElseStatement -> ScopeStatement .)
    FOREACH_REVERSE reduce using rule 328 (ElseStatement -> ScopeStatement .)
    CLASS           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    UNION           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    AMPERSAND       reduce using rule 328 (ElseStatement -> ScopeStatement .)
    PLUS_PLUS       reduce using rule 328 (ElseStatement -> ScopeStatement .)
    MINUS_MINUS     reduce using rule 328 (ElseStatement -> ScopeStatement .)
    TIMES           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    MINUS           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    PLUS            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    EXCLAMATION     reduce using rule 328 (ElseStatement -> ScopeStatement .)
    TILDE           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    CAST            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    DOT             reduce using rule 328 (ElseStatement -> ScopeStatement .)
    THIS            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    NULL            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    TRUE            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    FALSE           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    DOLLAR          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    INUMBER         reduce using rule 328 (ElseStatement -> ScopeStatement .)
    DNUMBER         reduce using rule 328 (ElseStatement -> ScopeStatement .)
    LIT_CHAR        reduce using rule 328 (ElseStatement -> ScopeStatement .)
    LIT_STR         reduce using rule 328 (ElseStatement -> ScopeStatement .)
    LBRACKET        reduce using rule 328 (ElseStatement -> ScopeStatement .)
    FUNCTION        reduce using rule 328 (ElseStatement -> ScopeStatement .)
    NEW             reduce using rule 328 (ElseStatement -> ScopeStatement .)
    BOOL            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    SHORT           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    USHORT          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    INT             reduce using rule 328 (ElseStatement -> ScopeStatement .)
    UINT            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    LONG            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    ULONG           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    CHAR            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    FLOAT           reduce using rule 328 (ElseStatement -> ScopeStatement .)
    VOID            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    TYPEOF          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    TYPEID          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    BODY            reduce using rule 328 (ElseStatement -> ScopeStatement .)
    RBRACE          reduce using rule 328 (ElseStatement -> ScopeStatement .)
    ELSE            reduce using rule 328 (ElseStatement -> ScopeStatement .)


state 799

    (331) ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement . for_M3
    (334) for_M3 -> .

    SEMICOLON       reduce using rule 334 (for_M3 -> .)
    CASE            reduce using rule 334 (for_M3 -> .)
    DEFAULT         reduce using rule 334 (for_M3 -> .)
    LBRACE          reduce using rule 334 (for_M3 -> .)
    IDENTIFIER      reduce using rule 334 (for_M3 -> .)
    IF              reduce using rule 334 (for_M3 -> .)
    WHILE           reduce using rule 334 (for_M3 -> .)
    DO              reduce using rule 334 (for_M3 -> .)
    FOR             reduce using rule 334 (for_M3 -> .)
    SWITCH          reduce using rule 334 (for_M3 -> .)
    FINAL           reduce using rule 334 (for_M3 -> .)
    CONTINUE        reduce using rule 334 (for_M3 -> .)
    BREAK           reduce using rule 334 (for_M3 -> .)
    RETURN          reduce using rule 334 (for_M3 -> .)
    GOTO            reduce using rule 334 (for_M3 -> .)
    WITH            reduce using rule 334 (for_M3 -> .)
    MIXIN           reduce using rule 334 (for_M3 -> .)
    IMPORT          reduce using rule 334 (for_M3 -> .)
    STATIC          reduce using rule 334 (for_M3 -> .)
    LPAREN          reduce using rule 334 (for_M3 -> .)
    ALIAS           reduce using rule 334 (for_M3 -> .)
    ENUM            reduce using rule 334 (for_M3 -> .)
    EXTERN          reduce using rule 334 (for_M3 -> .)
    AUTO            reduce using rule 334 (for_M3 -> .)
    CONST           reduce using rule 334 (for_M3 -> .)
    IMMUTABLE       reduce using rule 334 (for_M3 -> .)
    FOREACH         reduce using rule 334 (for_M3 -> .)
    FOREACH_REVERSE reduce using rule 334 (for_M3 -> .)
    CLASS           reduce using rule 334 (for_M3 -> .)
    UNION           reduce using rule 334 (for_M3 -> .)
    AMPERSAND       reduce using rule 334 (for_M3 -> .)
    PLUS_PLUS       reduce using rule 334 (for_M3 -> .)
    MINUS_MINUS     reduce using rule 334 (for_M3 -> .)
    TIMES           reduce using rule 334 (for_M3 -> .)
    MINUS           reduce using rule 334 (for_M3 -> .)
    PLUS            reduce using rule 334 (for_M3 -> .)
    EXCLAMATION     reduce using rule 334 (for_M3 -> .)
    TILDE           reduce using rule 334 (for_M3 -> .)
    CAST            reduce using rule 334 (for_M3 -> .)
    DOT             reduce using rule 334 (for_M3 -> .)
    THIS            reduce using rule 334 (for_M3 -> .)
    NULL            reduce using rule 334 (for_M3 -> .)
    TRUE            reduce using rule 334 (for_M3 -> .)
    FALSE           reduce using rule 334 (for_M3 -> .)
    DOLLAR          reduce using rule 334 (for_M3 -> .)
    INUMBER         reduce using rule 334 (for_M3 -> .)
    DNUMBER         reduce using rule 334 (for_M3 -> .)
    LIT_CHAR        reduce using rule 334 (for_M3 -> .)
    LIT_STR         reduce using rule 334 (for_M3 -> .)
    LBRACKET        reduce using rule 334 (for_M3 -> .)
    FUNCTION        reduce using rule 334 (for_M3 -> .)
    NEW             reduce using rule 334 (for_M3 -> .)
    BOOL            reduce using rule 334 (for_M3 -> .)
    SHORT           reduce using rule 334 (for_M3 -> .)
    USHORT          reduce using rule 334 (for_M3 -> .)
    INT             reduce using rule 334 (for_M3 -> .)
    UINT            reduce using rule 334 (for_M3 -> .)
    LONG            reduce using rule 334 (for_M3 -> .)
    ULONG           reduce using rule 334 (for_M3 -> .)
    CHAR            reduce using rule 334 (for_M3 -> .)
    FLOAT           reduce using rule 334 (for_M3 -> .)
    VOID            reduce using rule 334 (for_M3 -> .)
    TYPEOF          reduce using rule 334 (for_M3 -> .)
    TYPEID          reduce using rule 334 (for_M3 -> .)
    BODY            reduce using rule 334 (for_M3 -> .)
    RBRACE          reduce using rule 334 (for_M3 -> .)
    ELSE            reduce using rule 334 (for_M3 -> .)

    for_M3                         shift and go to state 802

state 800

    (319) IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .

    SEMICOLON       reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    CASE            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    DEFAULT         reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    LBRACE          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    IDENTIFIER      reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    IF              reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    WHILE           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    DO              reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    FOR             reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    SWITCH          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    FINAL           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    CONTINUE        reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    BREAK           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    RETURN          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    GOTO            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    WITH            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    MIXIN           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    IMPORT          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    STATIC          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    LPAREN          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    ALIAS           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    ENUM            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    EXTERN          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    AUTO            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    CONST           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    IMMUTABLE       reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    FOREACH         reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    FOREACH_REVERSE reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    CLASS           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    UNION           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    AMPERSAND       reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    PLUS_PLUS       reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    MINUS_MINUS     reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    TIMES           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    MINUS           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    PLUS            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    EXCLAMATION     reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    TILDE           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    CAST            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    DOT             reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    THIS            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    NULL            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    TRUE            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    FALSE           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    DOLLAR          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    INUMBER         reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    DNUMBER         reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    LIT_CHAR        reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    LIT_STR         reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    LBRACKET        reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    FUNCTION        reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    NEW             reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    BOOL            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    SHORT           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    USHORT          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    INT             reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    UINT            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    LONG            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    ULONG           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    CHAR            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    FLOAT           reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    VOID            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    TYPEOF          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    TYPEID          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    BODY            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    RBRACE          reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)
    ELSE            reduce using rule 319 (IfStatement -> IF LPAREN IfCondition RPAREN ifmark1 ThenStatement ifmark3 ELSE ElseStatement ifmark4 .)


state 801

    (320) ifmark4 -> empty .

    SEMICOLON       reduce using rule 320 (ifmark4 -> empty .)
    CASE            reduce using rule 320 (ifmark4 -> empty .)
    DEFAULT         reduce using rule 320 (ifmark4 -> empty .)
    LBRACE          reduce using rule 320 (ifmark4 -> empty .)
    IDENTIFIER      reduce using rule 320 (ifmark4 -> empty .)
    IF              reduce using rule 320 (ifmark4 -> empty .)
    WHILE           reduce using rule 320 (ifmark4 -> empty .)
    DO              reduce using rule 320 (ifmark4 -> empty .)
    FOR             reduce using rule 320 (ifmark4 -> empty .)
    SWITCH          reduce using rule 320 (ifmark4 -> empty .)
    FINAL           reduce using rule 320 (ifmark4 -> empty .)
    CONTINUE        reduce using rule 320 (ifmark4 -> empty .)
    BREAK           reduce using rule 320 (ifmark4 -> empty .)
    RETURN          reduce using rule 320 (ifmark4 -> empty .)
    GOTO            reduce using rule 320 (ifmark4 -> empty .)
    WITH            reduce using rule 320 (ifmark4 -> empty .)
    MIXIN           reduce using rule 320 (ifmark4 -> empty .)
    IMPORT          reduce using rule 320 (ifmark4 -> empty .)
    STATIC          reduce using rule 320 (ifmark4 -> empty .)
    LPAREN          reduce using rule 320 (ifmark4 -> empty .)
    ALIAS           reduce using rule 320 (ifmark4 -> empty .)
    ENUM            reduce using rule 320 (ifmark4 -> empty .)
    EXTERN          reduce using rule 320 (ifmark4 -> empty .)
    AUTO            reduce using rule 320 (ifmark4 -> empty .)
    CONST           reduce using rule 320 (ifmark4 -> empty .)
    IMMUTABLE       reduce using rule 320 (ifmark4 -> empty .)
    FOREACH         reduce using rule 320 (ifmark4 -> empty .)
    FOREACH_REVERSE reduce using rule 320 (ifmark4 -> empty .)
    CLASS           reduce using rule 320 (ifmark4 -> empty .)
    UNION           reduce using rule 320 (ifmark4 -> empty .)
    AMPERSAND       reduce using rule 320 (ifmark4 -> empty .)
    PLUS_PLUS       reduce using rule 320 (ifmark4 -> empty .)
    MINUS_MINUS     reduce using rule 320 (ifmark4 -> empty .)
    TIMES           reduce using rule 320 (ifmark4 -> empty .)
    MINUS           reduce using rule 320 (ifmark4 -> empty .)
    PLUS            reduce using rule 320 (ifmark4 -> empty .)
    EXCLAMATION     reduce using rule 320 (ifmark4 -> empty .)
    TILDE           reduce using rule 320 (ifmark4 -> empty .)
    CAST            reduce using rule 320 (ifmark4 -> empty .)
    DOT             reduce using rule 320 (ifmark4 -> empty .)
    THIS            reduce using rule 320 (ifmark4 -> empty .)
    NULL            reduce using rule 320 (ifmark4 -> empty .)
    TRUE            reduce using rule 320 (ifmark4 -> empty .)
    FALSE           reduce using rule 320 (ifmark4 -> empty .)
    DOLLAR          reduce using rule 320 (ifmark4 -> empty .)
    INUMBER         reduce using rule 320 (ifmark4 -> empty .)
    DNUMBER         reduce using rule 320 (ifmark4 -> empty .)
    LIT_CHAR        reduce using rule 320 (ifmark4 -> empty .)
    LIT_STR         reduce using rule 320 (ifmark4 -> empty .)
    LBRACKET        reduce using rule 320 (ifmark4 -> empty .)
    FUNCTION        reduce using rule 320 (ifmark4 -> empty .)
    NEW             reduce using rule 320 (ifmark4 -> empty .)
    BOOL            reduce using rule 320 (ifmark4 -> empty .)
    SHORT           reduce using rule 320 (ifmark4 -> empty .)
    USHORT          reduce using rule 320 (ifmark4 -> empty .)
    INT             reduce using rule 320 (ifmark4 -> empty .)
    UINT            reduce using rule 320 (ifmark4 -> empty .)
    LONG            reduce using rule 320 (ifmark4 -> empty .)
    ULONG           reduce using rule 320 (ifmark4 -> empty .)
    CHAR            reduce using rule 320 (ifmark4 -> empty .)
    FLOAT           reduce using rule 320 (ifmark4 -> empty .)
    VOID            reduce using rule 320 (ifmark4 -> empty .)
    TYPEOF          reduce using rule 320 (ifmark4 -> empty .)
    TYPEID          reduce using rule 320 (ifmark4 -> empty .)
    BODY            reduce using rule 320 (ifmark4 -> empty .)
    RBRACE          reduce using rule 320 (ifmark4 -> empty .)
    ELSE            reduce using rule 320 (ifmark4 -> empty .)


state 802

    (331) ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .

    SEMICOLON       reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    CASE            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    DEFAULT         reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    LBRACE          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    IDENTIFIER      reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    IF              reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    WHILE           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    DO              reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    FOR             reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    SWITCH          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    FINAL           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    CONTINUE        reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    BREAK           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    RETURN          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    GOTO            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    WITH            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    MIXIN           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    IMPORT          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    STATIC          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    LPAREN          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    ALIAS           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    ENUM            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    EXTERN          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    AUTO            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    CONST           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    IMMUTABLE       reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    FOREACH         reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    FOREACH_REVERSE reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    CLASS           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    UNION           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    AMPERSAND       reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    PLUS_PLUS       reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    MINUS_MINUS     reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    TIMES           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    MINUS           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    PLUS            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    EXCLAMATION     reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    TILDE           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    CAST            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    DOT             reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    THIS            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    NULL            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    TRUE            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    FALSE           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    DOLLAR          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    INUMBER         reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    DNUMBER         reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    LIT_CHAR        reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    LIT_STR         reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    LBRACKET        reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    FUNCTION        reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    NEW             reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    BOOL            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    SHORT           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    USHORT          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    INT             reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    UINT            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    LONG            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    ULONG           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    CHAR            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    FLOAT           reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    VOID            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    TYPEOF          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    TYPEID          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    BODY            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    RBRACE          reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)
    ELSE            reduce using rule 331 (ForStatement -> FOR LPAREN Initialize Test_opt SEMICOLON for_M1 Increment_opt RPAREN for_M2 ScopeStatement for_M3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 1 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 5 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 18 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 28 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 28 resolved as shift
WARNING: shift/reduce conflict for EXTERN in state 28 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 28 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 28 resolved as shift
WARNING: shift/reduce conflict for CONST in state 28 resolved as shift
WARNING: shift/reduce conflict for IMMUTABLE in state 28 resolved as shift
WARNING: shift/reduce conflict for DOT in state 39 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 39 resolved as shift
WARNING: shift/reduce conflict for DOT in state 42 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 113 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 126 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 145 resolved as shift
WARNING: shift/reduce conflict for DOT in state 214 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 214 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 222 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 237 resolved as shift
WARNING: shift/reduce conflict for DOT in state 244 resolved as shift
WARNING: shift/reduce conflict for DOT in state 247 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 297 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 303 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 319 resolved as shift
WARNING: shift/reduce conflict for DOT in state 331 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 335 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 335 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 340 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 341 resolved as shift
WARNING: shift/reduce conflict for DOT in state 419 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 419 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 450 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 492 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 500 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 503 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 503 resolved as shift
WARNING: shift/reduce conflict for CASE in state 503 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 503 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 503 resolved as shift
WARNING: shift/reduce conflict for IF in state 503 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 503 resolved as shift
WARNING: shift/reduce conflict for DO in state 503 resolved as shift
WARNING: shift/reduce conflict for FOR in state 503 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 503 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 503 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 503 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 503 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 503 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 503 resolved as shift
WARNING: shift/reduce conflict for WITH in state 503 resolved as shift
WARNING: shift/reduce conflict for MIXIN in state 503 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 503 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 503 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 503 resolved as shift
WARNING: shift/reduce conflict for ALIAS in state 503 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 503 resolved as shift
WARNING: shift/reduce conflict for EXTERN in state 503 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 503 resolved as shift
WARNING: shift/reduce conflict for CONST in state 503 resolved as shift
WARNING: shift/reduce conflict for IMMUTABLE in state 503 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 503 resolved as shift
WARNING: shift/reduce conflict for FOREACH_REVERSE in state 503 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 503 resolved as shift
WARNING: shift/reduce conflict for UNION in state 503 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 503 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 503 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 503 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 503 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 503 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 503 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 503 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 503 resolved as shift
WARNING: shift/reduce conflict for TILDE in state 503 resolved as shift
WARNING: shift/reduce conflict for CAST in state 503 resolved as shift
WARNING: shift/reduce conflict for DOT in state 503 resolved as shift
WARNING: shift/reduce conflict for THIS in state 503 resolved as shift
WARNING: shift/reduce conflict for NULL in state 503 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 503 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 503 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 503 resolved as shift
WARNING: shift/reduce conflict for INUMBER in state 503 resolved as shift
WARNING: shift/reduce conflict for DNUMBER in state 503 resolved as shift
WARNING: shift/reduce conflict for LIT_CHAR in state 503 resolved as shift
WARNING: shift/reduce conflict for LIT_STR in state 503 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 503 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 503 resolved as shift
WARNING: shift/reduce conflict for NEW in state 503 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 503 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 503 resolved as shift
WARNING: shift/reduce conflict for USHORT in state 503 resolved as shift
WARNING: shift/reduce conflict for INT in state 503 resolved as shift
WARNING: shift/reduce conflict for UINT in state 503 resolved as shift
WARNING: shift/reduce conflict for LONG in state 503 resolved as shift
WARNING: shift/reduce conflict for ULONG in state 503 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 503 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 503 resolved as shift
WARNING: shift/reduce conflict for VOID in state 503 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 503 resolved as shift
WARNING: shift/reduce conflict for TYPEID in state 503 resolved as shift
WARNING: shift/reduce conflict for BODY in state 503 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 560 resolved as shift
WARNING: shift/reduce conflict for BODY in state 560 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 576 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 594 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 624 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 632 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 632 resolved as shift
WARNING: shift/reduce conflict for IF in state 632 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 632 resolved as shift
WARNING: shift/reduce conflict for DO in state 632 resolved as shift
WARNING: shift/reduce conflict for FOR in state 632 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 632 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 632 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 632 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 632 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 632 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 632 resolved as shift
WARNING: shift/reduce conflict for WITH in state 632 resolved as shift
WARNING: shift/reduce conflict for MIXIN in state 632 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 632 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 632 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 632 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 632 resolved as shift
WARNING: shift/reduce conflict for ALIAS in state 632 resolved as shift
WARNING: shift/reduce conflict for ENUM in state 632 resolved as shift
WARNING: shift/reduce conflict for EXTERN in state 632 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 632 resolved as shift
WARNING: shift/reduce conflict for CONST in state 632 resolved as shift
WARNING: shift/reduce conflict for IMMUTABLE in state 632 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 632 resolved as shift
WARNING: shift/reduce conflict for FOREACH_REVERSE in state 632 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 632 resolved as shift
WARNING: shift/reduce conflict for UNION in state 632 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 632 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 632 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 632 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 632 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 632 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 632 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 632 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 632 resolved as shift
WARNING: shift/reduce conflict for TILDE in state 632 resolved as shift
WARNING: shift/reduce conflict for CAST in state 632 resolved as shift
WARNING: shift/reduce conflict for DOT in state 632 resolved as shift
WARNING: shift/reduce conflict for THIS in state 632 resolved as shift
WARNING: shift/reduce conflict for NULL in state 632 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 632 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 632 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 632 resolved as shift
WARNING: shift/reduce conflict for INUMBER in state 632 resolved as shift
WARNING: shift/reduce conflict for DNUMBER in state 632 resolved as shift
WARNING: shift/reduce conflict for LIT_CHAR in state 632 resolved as shift
WARNING: shift/reduce conflict for LIT_STR in state 632 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 632 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 632 resolved as shift
WARNING: shift/reduce conflict for NEW in state 632 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 632 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 632 resolved as shift
WARNING: shift/reduce conflict for USHORT in state 632 resolved as shift
WARNING: shift/reduce conflict for INT in state 632 resolved as shift
WARNING: shift/reduce conflict for UINT in state 632 resolved as shift
WARNING: shift/reduce conflict for LONG in state 632 resolved as shift
WARNING: shift/reduce conflict for ULONG in state 632 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 632 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 632 resolved as shift
WARNING: shift/reduce conflict for VOID in state 632 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 632 resolved as shift
WARNING: shift/reduce conflict for TYPEID in state 632 resolved as shift
WARNING: shift/reduce conflict for BODY in state 632 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 649 resolved as shift
WARNING: shift/reduce conflict for DOT in state 700 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 701 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 702 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 714 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 716 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 717 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 732 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 752 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 761 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 775 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 795 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 796 resolved as shift
WARNING: reduce/reduce conflict in state 127 resolved using rule (EnumMembers -> EnumMember)
WARNING: rejected rule (AnonymousEnumMember -> EnumMember) in state 127
WARNING: reduce/reduce conflict in state 189 resolved using rule (BasicType -> IdentifierList)
WARNING: rejected rule (PrimaryExpression -> IdentifierList) in state 189
WARNING: reduce/reduce conflict in state 196 resolved using rule (BasicType -> Typeof)
WARNING: rejected rule (PrimaryExpression -> Typeof) in state 196
WARNING: reduce/reduce conflict in state 214 resolved using rule (IdentifierList -> IDENTIFIER)
WARNING: rejected rule (PrimaryExpression -> IDENTIFIER) in state 214
WARNING: reduce/reduce conflict in state 243 resolved using rule (BasicType -> IdentifierList)
WARNING: rejected rule (PrimaryExpression -> IdentifierList) in state 243
WARNING: reduce/reduce conflict in state 244 resolved using rule (BasicType -> Typeof)
WARNING: rejected rule (PrimaryExpression -> Typeof) in state 244
WARNING: reduce/reduce conflict in state 247 resolved using rule (IdentifierList -> IDENTIFIER)
WARNING: rejected rule (PrimaryExpression -> IDENTIFIER) in state 247
WARNING: reduce/reduce conflict in state 258 resolved using rule (SuperClass -> BasicType)
WARNING: rejected rule (Interface -> BasicType) in state 258
WARNING: reduce/reduce conflict in state 300 resolved using rule (FunctionLiteralBody -> BlockStatement)
WARNING: rejected rule (ScopeBlockStatement -> BlockStatement) in state 300
WARNING: reduce/reduce conflict in state 326 resolved using rule (Declaration -> ImportDeclaration)
WARNING: rejected rule (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration) in state 326
WARNING: reduce/reduce conflict in state 331 resolved using rule (IdentifierList -> IDENTIFIER)
WARNING: rejected rule (PrimaryExpression -> IDENTIFIER) in state 331
WARNING: reduce/reduce conflict in state 335 resolved using rule (StorageClasses_opt -> StorageClasses)
WARNING: rejected rule (empty -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 419 resolved using rule (IdentifierList -> IDENTIFIER)
WARNING: rejected rule (PrimaryExpression -> DOT IDENTIFIER) in state 419
WARNING: reduce/reduce conflict in state 491 resolved using rule (ArgumentList -> AssignExpression)
WARNING: rejected rule (FirstExp -> AssignExpression) in state 491
WARNING: reduce/reduce conflict in state 497 resolved using rule (FunctionLiteralBody -> BlockStatement)
WARNING: rejected rule (ScopeStatement -> BlockStatement) in state 497
WARNING: reduce/reduce conflict in state 503 resolved using rule (LabeledStatement -> IDENTIFIER COLON)
WARNING: rejected rule (empty -> <empty>) in state 503
WARNING: reduce/reduce conflict in state 508 resolved using rule (FunctionLiteralBody -> BlockStatement)
WARNING: rejected rule (NoScopeNonEmptyStatement -> BlockStatement) in state 508
WARNING: reduce/reduce conflict in state 511 resolved using rule (ForeachTypeAttributes -> ForeachTypeAttribute)
WARNING: rejected rule (empty -> <empty>) in state 511
WARNING: reduce/reduce conflict in state 514 resolved using rule (ForeachTypeAttributes_opt -> empty)
WARNING: rejected rule (InOut_opt -> empty) in state 514
WARNING: reduce/reduce conflict in state 529 resolved using rule (ArrayMemberInitializations_opt -> empty)
WARNING: rejected rule (ArgumentList_opt -> empty) in state 529
WARNING: reduce/reduce conflict in state 530 resolved using rule (ExpInitializer -> AssignExpression)
WARNING: rejected rule (ArgumentList -> AssignExpression) in state 530
WARNING: reduce/reduce conflict in state 614 resolved using rule (PrimaryExpression -> IDENTIFIER)
WARNING: rejected rule (SymbolTail -> IDENTIFIER) in state 614
WARNING: reduce/reduce conflict in state 614 resolved using rule (IdentifierList -> IDENTIFIER)
WARNING: rejected rule (PrimaryExpression -> IDENTIFIER) in state 614
WARNING: reduce/reduce conflict in state 632 resolved using rule (StatementListNoCaseNoDefault -> StatementNoCaseNoDefault)
WARNING: rejected rule (empty -> <empty>) in state 632
WARNING: reduce/reduce conflict in state 640 resolved using rule (NoScopeStatement -> BlockStatement)
WARNING: rejected rule (ScopeBlockStatement -> BlockStatement) in state 640
WARNING: reduce/reduce conflict in state 640 resolved using rule (FunctionLiteralBody -> BlockStatement)
WARNING: rejected rule (NoScopeStatement -> BlockStatement) in state 640
WARNING: reduce/reduce conflict in state 641 resolved using rule (Statement -> SEMICOLON)
WARNING: rejected rule (NoScopeStatement -> SEMICOLON) in state 641
WARNING: reduce/reduce conflict in state 643 resolved using rule (Statement -> NonEmptyStatement)
WARNING: rejected rule (NoScopeStatement -> NonEmptyStatement) in state 643
WARNING: reduce/reduce conflict in state 700 resolved using rule (PrimaryExpression -> DOT IDENTIFIER)
WARNING: rejected rule (SymbolTail -> IDENTIFIER) in state 700
WARNING: reduce/reduce conflict in state 700 resolved using rule (IdentifierList -> IDENTIFIER)
WARNING: rejected rule (PrimaryExpression -> DOT IDENTIFIER) in state 700
WARNING: reduce/reduce conflict in state 748 resolved using rule (IdentifierList -> IDENTIFIER)
WARNING: rejected rule (SymbolTail -> IDENTIFIER) in state 748
WARNING: reduce/reduce conflict in state 793 resolved using rule (ifmark3 -> empty)
WARNING: rejected rule (ifmark2 -> empty) in state 793
WARNING: Rule (PrimaryExpression -> IDENTIFIER) is never reduced
WARNING: Rule (NonEmptyStatementNoCaseNoDefault -> ImportDeclaration) is never reduced
WARNING: Rule (FirstExp -> AssignExpression) is never reduced
WARNING: Rule (SymbolTail -> IDENTIFIER) is never reduced
WARNING: Rule (NoScopeStatement -> SEMICOLON) is never reduced
WARNING: Rule (NoScopeStatement -> NonEmptyStatement) is never reduced
